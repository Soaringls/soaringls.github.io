{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-my-blog","title":"Welcome to my blog","text":"<p>I'm dexter, an algorithm engineer focusing on <code>Mapping&amp;Localization</code> of self-driving technique.</p> <p>This is the website I used to take notes while learning or working.</p> <p>More about me:</p> <ul> <li>Email</li> <li>Github</li> </ul>"},{"location":"coding/coding_work_style/","title":"Coding work style","text":""},{"location":"coding/coding_work_style/#code-style","title":"Code Style","text":"<p>install cpplint  by <code>pip install cpplint</code> and pylint by <code>pip install pylint</code>to find bugs and style problems in c++/python source the reference is Google Style Guide</p>"},{"location":"coding/coding_work_style/#abseil-libs","title":"Abseil Libs","text":"<p>C++ and Python developer Guide from Abseil</p>"},{"location":"coding/coding_work_style/#code-review","title":"Code Review","text":""},{"location":"coding/coding_work_style/#_1","title":"\u76ee\u7684","text":"<ul> <li>\u628a\u63a7\u8d28\u91cf</li> <li>\u4f20\u9012\u77e5\u8bc6\u548c\u7ec6\u8282</li> </ul>"},{"location":"coding/coding_work_style/#_2","title":"\u5185\u5bb9","text":"<ul> <li>\u6574\u4f53\u8bbe\u8ba1: \u8bbe\u8ba1\u662f\u5426\u5408\u7406</li> <li>\u529f\u80fd\u5b9e\u73b0: \u662f\u5426\u5b9e\u73b0\u9884\u671f\u529f\u80fd,\u662f\u5426\u7ecf\u8fc7\u76f8\u5173\u5145\u5206\u6d4b\u8bd5</li> <li>\u590d\u6742\u5ea6:\u8bbe\u8ba1\u548c\u5b9e\u73b0\u8fd8\u80fd\u5426\u7b80\u5316,\u662f\u5426\u5b58\u5728\u91cd\u590d\u6027\u4ee3\u7801</li> <li>\u4ee3\u7801\u6027\u80fd:\u662f\u5426\u6709\u660e\u663e\u7684\u6027\u80fd\u95ee\u9898,\u662f\u5426\u53ef\u4ee5\u660e\u663e\u7684\u53ef\u4ee5\u4f18\u5316</li> <li>\u6d4b\u8bd5:\u662f\u5426\u6709\u76f8\u5173\u5355\u5143\u6d4b\u8bd5,\u6d4b\u8bd5\u662f\u5426\u5408\u7406</li> <li>\u547d\u540d:\u662f\u5426\u6e05\u6670\u6613\u61c2</li> <li>\u6ce8\u91ca:\u5fc5\u8981\u7684\u6ce8\u91ca\u662f\u5426\u6709\u7f3a\u5931</li> <li>\u4ee3\u7801\u98ce\u683c:\u98ce\u683c\u662f\u5426\u548c\u5df2\u6709\u7684\u4e00\u81f4</li> <li>\u6587\u6863\u66f4\u65b0:\u76f8\u5173\u6587\u6863\u662f\u5426\u66f4\u65b0</li> </ul>"},{"location":"coding/coding_work_style/#_3","title":"\u57fa\u672c\u539f\u5219","text":"<ul> <li>\u9009\u53d6\u5408\u9002\u7684reviewer,\u5fc5\u8981\u65f6\u9009\u53d6\u8d44\u6df1\u7684reviewer</li> <li>\u53ef\u4ee5\u8bfb\u4e2areviewer\u68c0\u67e5\u591a\u4e2a\u90e8\u5206</li> <li>TL\u5e2e\u52a9\u65b0\u540c\u4e8b\u52a0\u5f3a\u4ee3\u7801\u98ce\u683c\u548c\u8bbe\u8ba1\u539f\u5219</li> <li>\u8d28\u91cf\u548c\u8fdb\u5ea6\u90fd\u5f88\u91cd\u8981,\u6ca1\u6709\u5b8c\u7f8e\u7684mr,\u5982\u679c\u6574\u4f53\u6539\u8fdb\u4e86\u4ee3\u7801\u8d28\u91cf\u53ef\u4ee5\u8003\u8651approve</li> <li>\u54cd\u5e94\u901f\u5ea6\u5f88\u91cd\uff01  \u4e00\u4e2a\u5de5\u4f5c\u65e5\u5185\u54cd\u5e94</li> <li>\u59cb\u7ec8\u9075\u5b88\u4ee3\u7801\u98ce\u683c\u6307\u5bfc,\u51cf\u5c11\u7eb7\u4e89</li> </ul>"},{"location":"coding/coding_work_style/#mr","title":"MR\u7684\u51c6\u5907","text":"<ul> <li>\u5c3d\u91cf\u5199\u76f8\u5bf9\u8f83\u5c0f\u7684mr,\u907f\u514d\u5927\u7684mr</li> <li>\u66f4\u5bb9\u6613review</li> <li>\u66f4\u5bb9\u6613\u5408\u5165\u548c\u56de\u6eda</li> <li>\u66f4\u5bb9\u6613\u8bbe\u8ba1</li> <li>\u66f4\u4e0d\u5bb9\u6613\u51fa\u9519</li> <li>\u628a\u4ee3\u7801\u91cd\u6784\u7684\u4fee\u6539\u62c6\u51fa\u6765</li> <li>MR/commit\u7684\u63cf\u8ff0\u8981\u89c4\u8303</li> <li>\u7b2c\u4e00\u884c\u505a\u6574\u4f53\u6e05\u6670\u7684\u63cf\u8ff0</li> <li>\u4e3b\u4f53\u6709\u8db3\u591f\u7684\u4fe1\u606f\u91cf</li> <li>\u63d0\u4ea4review\u524d\u4fdd\u8bc1mr\u7684\u5065\u5eb7\u5ea6</li> <li>Onboardd\u4ee3\u7801\u7684\u65b0\u529f\u80fd\u5982\u679c\u5b58\u5728\u98ce\u9669,\u53ef\u4ee5\u7528flag\u4fdd\u62a4\u8d77\u6765</li> </ul>"},{"location":"coding/coding_work_style/#review","title":"\u5173\u4e8eReview","text":"<ul> <li>\u68c0\u67e5\u6bcf\u4e00\u884c\u4ee3\u7801</li> <li>\u591a\u65b9\u9762\u5ba1\u67e5\u4ee3\u7801(\u53c2\u8003\u5185\u5bb9)</li> <li>\u54cd\u5e94\u8981\u53ca\u65f6,\u80fd\u89e3\u51b3\u5f88\u591a\u95ee\u9898</li> <li>Be kind,\u8bc4\u8bba\u9488\u5bf9\u4ee3\u7801\u4e0d\u9488\u4eba</li> <li>\u6709\u5927\u7684\u4e89\u8bae\u8981\u53ca\u65f6\u6c9f\u901a,\u5305\u62ec\u7ebf\u4e0b\u6c9f\u901a,\u82e5\u672a\u80fd\u89e3\u51b3\u7531\u4e0a\u7ea7\u4ef2\u88c1</li> <li>\u7a0d\u540e\u6e05\u7406\uff1f \u8981\u9a6c\u4e0a\u6e05\u7406</li> <li>\u65e0\u4f24\u5927\u96c5\u7684\u5efa\u8bae? Nit:/comment/</li> </ul>"},{"location":"coding/coding_work_style/#_4","title":"\u5173\u4e8e\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\u5e94\u8be5\u575a\u6301\u7684\u4f18\u5316:</li> <li>\u7b97\u6cd5\u590d\u6742\u5ea6\u4f18\u5316</li> <li>\u987a\u624b\u505a\u7684\u4f18\u5316<ul> <li>\u6570\u636e\u7ed3\u6784\u7684\u9009\u53d6</li> <li>\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d</li> <li>\u4efb\u4f55\u5176\u4ed6\u4e0d\u589e\u52a0\u590d\u6742\u5ea6\u4e0d\u5f71\u54cd\u6027\u80fd\u548c\u53ef\u8bfb\u6027\u7684\u4f18\u5316</li> </ul> </li> <li>\u53ef\u80fd\u9700\u8981\u907f\u514d\u7684\u4f18\u5316:</li> <li>\u8fc7\u65e9\u7684\u4f24\u5bb3\u4ee3\u7801\u53ef\u8bfb\u6027\u7ef4\u62a4\u6027\u7684\u4f18\u5316</li> <li>\u5bf9\u6574\u4f53\u6027\u80fd\u5e2e\u52a9\u4e0d\u5927\u7684\u590d\u6742\u4f18\u5316</li> <li>\u6027\u80fd\u654f\u611f\u7684\u51fd\u6570/\u5b50\u6a21\u5757\u6700\u597d\u52a0benchmark\u8ddf\u8e2a\u8d77\u6765</li> </ul>"},{"location":"coding/coding_work_style/#qa","title":"\u95ee\u7b54Q&amp;A","text":""},{"location":"coding/c%2B%2B/cpp_new_future/","title":"C++ New Feture","text":""},{"location":"coding/c%2B%2B/cpp_new_future/#c-new-features-and-usage","title":"c++ new features and usage","text":""},{"location":"coding/c%2B%2B/cpp_new_future/#keywords","title":"keywords","text":"<ul> <li>nodiscard   <pre><code>//from c++17 \u5982\u679c\u8fd4\u56de\u503c\u6ca1\u6709\u88ab\u8d4b\u4e88\u5230\u67d0\u4e2a\u53d8\u91cf\uff0c\u7f16\u8bd1\u5c06\u4f1awanrning\n[[nodiscard]] bool IsChina(); \n</code></pre></li> <li>maybe_unused   <pre><code>//from c++17 \u53ef\u80fd\u4e0d\u7528\u7684\u53d8\u91cf\n[[maybe_unused]] std::string name;\n</code></pre></li> <li>constexpr and const   <pre><code>//constexpr since c++11\nconst double PI1 = 3.1415926;     //initialized at compile time or run time\nconstexpr double PI2 = 3.1415926; //initialized at compile time, compile-time constant\n\nconstexpr double PI3 = PI1; //error\nconstexpr double PI3 = PI2; //ok\n\n//const initialized at run time\nint num;\nnum = ....;\nconst int kArraySize = num;\n</code></pre></li> </ul>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdoptional-etc","title":"\u5e38\u89c1\u7528\u6cd5(std::optional etc)","text":"<ul> <li>std::adjacent_find</li> </ul> <pre><code>TODO\n</code></pre> <ul> <li>std::set_intersection</li> </ul> <pre><code>std::set&lt;int&gt; set_a(a.begin(), a.end());\nstd::set&lt;int&gt; set_b(b.begin(), b.end());\nstd::vector&lt;int&gt; common_a_b;\nstd::set_intersection(set_a.cbegin(), set_a.cend(), \n                      set_b.cbegin(), set_b.cend(), std::back_inserter(common_a_b));\n</code></pre> <ul> <li>std::optional</li> </ul> <pre><code>std::optional&lt;std::string&gt;  GetInfo(){\n  //func1\n  std::string result_1; \n  ...\n  if(result_1.empty) return std::nullopt;\n  else return result_1;\n\n  //func2\n  std::optional&lt;std::string&gt; result_2 = std::nullopt;\n  ...\n  result_2 = \"hello world\";\n  ...\n  return result_2;\n} \nret = GetInfo();\nCHECK(ret.has_value())&lt;&lt;\"Failed to parser...\";\nconst std::string info = ret.value();\n</code></pre> <ul> <li><code>std::upper_bound</code>\u3001<code>std::lower_bound</code>\u3001  <code>std::distance</code></li> </ul> <pre><code>std::upper_bound: \u5de6\u5c0f\u53f3\u5927\u539f\u5219\uff0c ref &lt; \u7ed3\u679c, lambda\u5185\u6bd4\u8f83\u4e0e\u53c2\u6570\u4e00\u81f4\uff0c\u53c2\u6570ref\u7b2c\u4e00\u4e2a\nint next_gt = std::distance(vec.begin(), \n                         std::upper_bound(vec.begin(), vec.end(), timestamp_ref,\n                                         [](double target, const auto&amp; elem){\n                                           return target &lt; elem;\n                                        });\nstd::lower_bound: \u5de6\u5c0f\u53f3\u5927\u539f\u5219\uff0c ref &lt;= \u7ed3\u679c,lambda\u5185\u6bd4\u8f83\u4e0e\u53c2\u6570\u4e00\u81f4,\u53c2\u6570ref\u7b2c\u4e8c\u4e2a\nint next_ge = std::distance(vec.begin(),\n                           std::lower_bound(vec.begin(), vec.end(), time_ref, \n                                           [](const auto&amp; elem, double target){\n                                             return elem &lt; target;\n                                           }));\n</code></pre> <ul> <li><code>std::accumulate</code>\u548c <code>std::min_element</code>\u3001<code>std::max_element</code></li> </ul> <pre><code>std::vector&lt;float&gt; values;\nconst flost min = *std::min_element(values.begin(),values.end());\n//std::min std::max \u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e00\u81f4\n\n/**\n * \u83b7\u53d6\u9664\u6307\u5b9a\u503c\u4e4b\u5916\u7684\u6700\u503c\n*/\nstd::vectro&lt;double&gt; arr_vec;\n.... //\u5047\u8bbearr_vec\u5185\u5305\u542b\u6781\u5927\u503c FLT_MAX \u548c\u6781\u5c0f\u503cFLT_MIN \u9700\u8981\u6392\u9664\nconst double min_value = std::max_element(arr_vec.begin(),arr_vec.end(),\n                                     [(const auto&amp; ele1, const auto&amp; ele2){\n                                      if(ele1 == FLT_MAX || ele2 == FLT_MAX){\n                                        return true;\n                                      }\n                                      return ele1 &lt; ele2;//\n                                     }]);\nconst double min_value = std::max_element(arr_vec.begin(),arr_vec.end(),\n                                     [(const auto&amp; ele1, const auto&amp; ele2){\n                                      if(ele1 == FLT_MIN || ele2 == FLT_MIN){\n                                        return false;\n                                      }\n                                      return ele1 &lt; ele2;\n                                     }]); \nauto max_size = std::max_element(\n      lines.begin(), lines.end(), [](const auto&amp; lhs, const auto&amp; rhs) {\n        return lhs.points.size() &lt; rhs.points.size();// lhs... &gt; rhs... \u5219\u627e\u5230\u7684\u6700\u5c0f\u7684\u5143\u7d20\n      });\nauto min_size = std::min_element(\n      lines.begin(), lines.end(), [](const auto&amp; lhs, const auto&amp; rhs) {\n        return lhs.points.size() &lt; rhs.points.size();// lhs... &gt; rhs... \u5219\u627e\u5230\u7684\u6700\u5927\u7684\u5143\u7d20\n      });\nstd::cout &lt;&lt; \"max elemnt:\" &lt;&lt; max_size-&gt;id &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"min elemnt:\" &lt;&lt; min_size-&gt;id &lt;&lt; std::endl;\n</code></pre> <ul> <li>std::none_of\u548cstd::any_of</li> </ul> <pre><code>if (std::none_of(level_to_polygons[level].begin(),\n                 level_to_polygons[level].end(),\n                 [&amp;](const auto&amp; polygon) {\n                  //\u53d6\u53cd\n                  return !polygon.IsPointIn(\n                                     {smooth_point.x(), smooth_point.y()});\n   })) {\n  return true;//filtered\n}\n//is same as below\nif(std::any_of(level_to_polygons[level].begin(),\n               level_to_polygons[level].end(),\n               [&amp;](const auto&amp; polygon) {\n                 return polygon.IsPointIn(\n                                     {smooth_point.x(), smooth_point.y()});\n})){\n    return true;//filtered\n}\n</code></pre> <ul> <li><code>std::transfrom</code></li> </ul> <pre><code>void StringToLower(std::string* str){\n  std::transfrom(str-&gt;begin(), str-&gt;end(), std::tolower);\n}\n</code></pre> <ul> <li><code>std::remove_if\u3001std::regex_search</code></li> </ul> <pre><code>std::vector&lt;std::string&gt; file_names = {.....};\nfile_names.erase(\n          //\u901a\u8fc7std::remove_if\u83b7\u53d6file_names\u5185\u8981erase\u7684\u5143\u7d20\u5217\u8868 X\n          std::remove_if(file_names.begin(), file_names.end(),\n                         [&amp;](const std::string&amp; frame_filename) {\n                           //patch_ids\u4e3a\u8981\u4fdd\u7559\u7684\u6587\u4ef6\n                           for (const auto&amp; id : patch_ids) {\n                             if (std::regex_search(\n                                     frame_filename,\n                                     std::regex(absl::StrCat(id, \".pb.bin\")))) {\n                               return false;//\u4e0d\u52a0\u5165\u5217\u8868 X\n                             }\n                           }\n                           return true;//\u52a0\u5165\u5217\u8868 X\n                         }),\n          file_names.end());\n</code></pre> <ul> <li>std::typeid</li> </ul> <p>\u53ef\u7528\u4f5c\u5173\u8054\u4e0e\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\u7684\u7d22\u5f15</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt;\n#include &lt;typeindex&gt;\n#include &lt;unordered_map&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n\nstruct A {\n    virtual ~A() {}\n};\n\nstruct B : A {};\nstruct C : A {};\n\nint main()\n{\n    std::unordered_map&lt;std::type_index, std::string&gt; type_names;\n\n    type_names[std::type_index(typeid(int))] = \"int\";\n    type_names[std::type_index(typeid(double))] = \"double\";\n    type_names[std::type_index(typeid(A))] = \"A\";\n    type_names[std::type_index(typeid(B))] = \"B\";\n    type_names[std::type_index(typeid(C))] = \"C\";\n\n    int i;\n    double d;\n    A a;\n\n    // \u6ce8\u610f\u6211\u4eec\u6b63\u5728\u5b58\u50a8\u6307\u5411\u7c7b\u578b A \u7684\u6307\u9488\n    std::unique_ptr&lt;A&gt; b(new B);\n    std::unique_ptr&lt;A&gt; c(new C);\n\n    std::cout &lt;&lt; \"i is \" &lt;&lt; type_names[std::type_index(typeid(i))] &lt;&lt; '\\n';\n    std::cout &lt;&lt; \"d is \" &lt;&lt; type_names[std::type_index(typeid(d))] &lt;&lt; '\\n';\n    std::cout &lt;&lt; \"a is \" &lt;&lt; type_names[std::type_index(typeid(a))] &lt;&lt; '\\n';\n    std::cout &lt;&lt; \"b is \" &lt;&lt; type_names[std::type_index(typeid(*b))] &lt;&lt; '\\n';\n    std::cout &lt;&lt; \"c is \" &lt;&lt; type_names[std::type_index(typeid(*c))] &lt;&lt; '\\n';\n}\n\n////output is below\ni is int\nd is double\na is A\nb is B\nc is C\n</code></pre> <ul> <li>vector.erase</li> </ul> <pre><code>std::vector&lt;int&gt; vecs = {};\n//\u6b63\u786e\u505a\u6cd5\nfor(auto iter = vecs.begin(); iter != vecs.end();){\n  if(/*erase-condition*/){\n    iter = vecs.erase(iter);\n  }else{\n    iter++;\n  }\n}\n//\u9519\u8bef\u505a\u6cd5\nfor(auto iter = vecs.begin(); iter != vecs.end(); iter++){\n  if(/*erase-condition*/){\n    iter = vecs.erase(iter);\n  }\n}\n</code></pre> <ul> <li><code>usage:\"std::forward_as_tuple</code></li> </ul> <pre><code>struct NodeId {\n  NodeId(int trajectory_id, int node_index)\n    : trajectory_id(trajectory_id), node_index(node_index) {}\n\n  int trajectory_id;\n  int node_index;\n  bool operator&lt;(const NodeId&amp; other) const {\n   return std::forward_as_tuple(trajectory_id, node_index) &lt;\n   std::forward_as_tuple(other.trajectory_id, other.node_index);\n}\n\nstd::map&lt;int, NodeId&gt; extrapolators_;\nextrapolators_.emplace(std::piecewise_construct, std::forward_as_tuple(5), std::forward_as_tuple(2, 3));\n</code></pre>"},{"location":"coding/c%2B%2B/cpp_new_future/#c17","title":"C++17 \u65b0\u7279\u6027","text":""},{"location":"coding/c%2B%2B/cpp_new_future/#_1","title":"\u6784\u9020\u51fd\u6570\u6a21\u677f\u63a8\u5bfc","text":"<p>Automatic template argument deduction much like how it's done for functions, but now including class constructors. <pre><code>//eg.1\ntemplate&lt;typename T = float&gt;\nstruct MyContainer{\n    T val_;\n    MyContainer():val_{}{}\n    MyContainer(T val):val_(val){}\n    //...\n};\nMyContainer c1{1};// type-&gt;int\nMyContainer c2;   // type-&gt;float,default\n\n//eg.2\nstd::pair&lt;int, double&gt; p(1, 2.2); //before 17\nstd::pair p(1, 2.2); //now, \u81ea\u52a8\u63a8\u5bfc\nstd::vector v = {1, 2, 3};//now\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#declaring-non-type-template-parameters-with-auto","title":"Declaring non-type template parameters with auto","text":"<p>Following the deduction rules of <code>auto</code>, while respecting the non-type template parameter list of allowable types[*], template arguments can be deduced from the type ot its arguments: <pre><code>template &lt;auto... seq&gt;\nstruct my_integer_sequence {\n  // Implementation here ...\n};\n\n// Explicitly pass type `int` as template argument.\nauto seq = std::integer_sequence&lt;int, 0, 1, 2&gt;();\n// Type is deduced to be `int`.\nauto seq2 = my_integer_sequence&lt;0, 1, 2&gt;();\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#folding-expressions","title":"Folding expressions","text":"<p>A fold expression performs a fold of a template parameter pack over a binary operator.</p> <ul> <li>An expression of the form <code>(... op e)</code> or <code>(e op ...)</code>, where <code>op</code> is a fold-operator and <code>e</code> is an unexpanded parameter pack, are called unary folds.</li> <li>An expression of the form <code>(e1 op ... op e2)</code>, where <code>op</code> are fold-operators, is called a binary fold. Either <code>e1</code> or <code>e2</code> is an unexpanded parameter pack, but not both.</li> </ul> <pre><code>template &lt;typename... Args&gt;\nbool logicalAnd(Args... args) {\n    // Binary folding.\n    return (true &amp;&amp; ... &amp;&amp; args);\n}\nbool b = true;\nbool&amp; b2 = b;\nlogicalAnd(b, b2, true); // == true\n\ntemplate &lt;typename... Args&gt;\nauto sum(Args... args) {\n    // Unary folding.\n    return (... + args);\n}\nsum(1.0, 2.0f, 3); // == 6.0\n</code></pre>"},{"location":"coding/c%2B%2B/cpp_new_future/#new-rules-for-auto-deduction-from-braced-init-list","title":"New rules for auto deduction from braced-init-list","text":"<p>Changes to <code>auto</code> deduction when used with the uniform initialization syntax. Previously, <code>auto x {3}</code> deduced a <code>std::initializer_list&lt;int&gt;</code>, which now deduces to <code>int</code>. <pre><code>auto x1 {1, 2, 3};  // error: not a single element.\nauto x2 = {1, 2, 3};  // x2 is std::initializer_list&lt;int&gt;\nauto x3 {3};  // x3 is int\nauto x4 {3.0};  // x4 is double\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#constexpr-lambda","title":"constexpr lambda","text":"<p>Compile-time lambda using <code>constexpr</code>. <pre><code>auto identity = [](int n) constexpr { return n; };\nstatic_assert(identity(123) == 123);\nconstexpr auto add = [](int x, int y) {\n  auto L = [=] { return x; };\n  auto R = [=] { return y; };\n  return [=] { return L() + R(); };\n};\n\nstatic_assert(add(1, 2)() == 3);\nconstexpr int addOne(int n) {\n  return [n] { return n + 1; }();\n}\n\nstatic_assert(addOne(1) == 2);\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#lambda-capture-this-by-value","title":"Lambda capture <code>this</code> by value","text":"<p>Capturing <code>this</code> in a lambda's environment was previously reference-only. An example of where <code>this</code> is problematic is asynchronous code using callbacks that require an object to be available, potentially past its lifetime. <code>*this</code> (C++17) will now make a copy of the current object, while <code>this</code> (C++11) continues to capture by reference. <pre><code>struct MyObj {\n  int value {123};\n  auto getValueCopy() {\n    return [*this] { return value; };\n  }\n  auto getValueRef() {\n    return [this] { return value; };\n  }\n};\nMyObj mo;\nauto valueCopy = mo.getValueCopy();\nauto valueRef = mo.getValueRef();\nmo.value = 321;\nvalueCopy(); // 123\nvalueRef(); // 321\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#inline-variables","title":"Inline variables","text":"<p>The inline specifier can be applied to variables as well as to functions. A variable declared inline has the same semantics as a function declared inline. <pre><code>// Disassembly example using compiler explorer.\nstruct S { int x; };\ninline S x1 = S{321}; // mov esi, dword ptr [x1]\n                      // x1: .long 321\n\nS x2 = S{123};        // mov eax, dword ptr [.L_ZZ4mainE2x2]\n                      // mov dword ptr [rbp - 8], eax\n                      // .L_ZZ4mainE2x2: .long 123\n</code></pre> It can also be used to declare and define a static member variable, such that it does not need to be initialized in the source file. <pre><code>struct S {\n  S() : id{count++} {}\n  ~S() { count--; }\n  int id;\n  static inline int count{0}; // declare and initialize count to 0 within the class\n};\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#nested-namespaces","title":"Nested namespaces","text":"<p>Using the namespace resolution operator to create nested namespace definitions. <pre><code>namespace A {\n  namespace B {\n    namespace C {\n      int i;\n    }\n  }\n}\n// vs.\nnamespace A::B::C {\n  int i;\n}\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#structured-bindings","title":"Structured bindings","text":"<p>A proposal for de-structuring initialization, that would allow writting <code>auto [ x, y, z] = expr;</code> where the type of <code>expr</code> was a tuple-like object, whose elements would be bound to the variables <code>x</code>, <code>y</code> and <code>z</code>(which is construc declares). tuple-like objects include <code>std::tuple</code>, <code>std::pair</code>, <code>std::array</code>, and aggregate structures. <pre><code>using Coordinate = std::pair&lt;int, int&gt;;\nCoordinate origin() {\n  return Coordinate{0, 0};\n}\n\nconst auto [ x, y ] = origin();\nx; // == 0\ny; // == 0\nstd::unordered_map&lt;std::string, int&gt; mapping {\n  {\"a\", 1},\n  {\"b\", 2},\n  {\"c\", 3}\n};\n\n// Destructure by reference.\nfor (const auto&amp; [key, value] : mapping) {\n  // Do something with key and value\n}\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#selection-statements-with-initializer","title":"Selection statements with initializer","text":"<p>New version of <code>if</code> and <code>switch</code> statements which simplify code patterns and help users keep scopes tight. <pre><code>{\n  std::lock_guard&lt;std::mutex&gt; lk(mx);\n  if (v.empty()) v.push_back(val);\n}\n// vs.\nif (std::lock_guard&lt;std::mutex&gt; lk(mx); v.empty()) {\n  v.push_back(val);\n}\n\nFoo gadget(args);\nswitch (auto s = gadget.status()) {\n  case OK: gadget.zip(); break;\n  case Bad: throw BadFoo(s.message());\n}\n// vs.\nswitch (Foo gadget(args); auto s = gadget.status()) {\n  case OK: gadget.zip(); break;\n  case Bad: throw BadFoo(s.message());\n}\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#constexpr-if","title":"constexpr if","text":"<p>Write code that is instantiated depending on a compile=time condition. <pre><code>template &lt;typename T&gt;\nconstexpr bool isIntegral() {\n  if constexpr (std::is_integral&lt;T&gt;::value) {\n    return true;\n  } else {\n    return false;\n  }\n}\nstatic_assert(isIntegral&lt;int&gt;() == true);\nstatic_assert(isIntegral&lt;char&gt;() == true);\nstatic_assert(isIntegral&lt;double&gt;() == false);\nstruct S {};\nstatic_assert(isIntegral&lt;S&gt;() == false);\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#utf-8-character-literals","title":"UTF-8 character literals","text":"<p>A character literal that begins with <code>u8</code> is a character literal of type <code>char</code>. The value of a UTF-8 character literal is equal to its ISO 10646 code point value. <pre><code>char x = u8'x';\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#direct-list-initialization-of-enums","title":"Direct list initialization of enums","text":"<p>Enums can now be initialized using braced syntax. <pre><code>enum byte : unsigned char {};\nbyte b {0}; // OK\nbyte c {-1}; // ERROR\nbyte d = byte{1}; // OK\nbyte e = byte{256}; // ERROR\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#fallthrough-nodiscard-maybe_unused-attributes","title":"fallthrough, nodiscard, maybe_unused attributes","text":"<p>C++17 introduces threee new attributes:</p> <ul> <li> <p><code>[[fallthrough]]</code>: indicates to the compiler that falling through in a switch statement is intended behavior. <pre><code>switch (n) {\n  case 1: [[fallthrough]]\n    // ...\n  case 2:\n    // ...\n    break;\n}\n</code></pre></p> </li> <li> <p><code>[[nodiscard]]</code>: issues a warning when either a function or class has this attribute and its return value is discarded. <pre><code>[[nodiscard]] bool do_something() {\n  return is_success; // true for success, false for failure\n}\n\ndo_something(); // warning: ignoring return value of 'bool do_something()',\n                // declared with attribute 'nodiscard'\n\n// Only issues a warning when `error_info` is returned by value.\nstruct [[nodiscard]] error_info {\n  // ...\n};\n\nerror_info do_something() {\n  error_info ei;\n  // ...\n  return ei;\n}\n\ndo_something(); // warning: ignoring returned value of type 'error_info',\n                // declared with attribute 'nodiscard'\n</code></pre></p> </li> <li> <p><code>[[maybe_unused]]</code>: indicates to be compiler that a variable or parameter might be unused an is intended. <pre><code>void my_callback(std::string msg, [[maybe_unused]] bool error) {\n  // Don't care if `msg` is an error message, just log it.\n  log(msg);\n}\n</code></pre></p> </li> </ul>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdvariant","title":"std::variant","text":"<p>The class template <code>std::variant</code> represents a type-safe <code>union</code>. An instance of <code>std::variant</code> at any given time holds a value of one of its alternativqe types(it's possible for it to be valueless). <pre><code>std::variant&lt;int, double&gt; v{ 12 };\nstd::get&lt;int&gt;(v); // == 12\nstd::get&lt;0&gt;(v); // == 12\nv = 12.0;\nstd::get&lt;double&gt;(v); // == 12.0\nstd::get&lt;1&gt;(v); // == 12.0\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdoptional","title":"std::optional","text":"<pre><code>std::optional&lt;std::string&gt; create(bool b) {\n  if (b) {\n    return \"Godzilla\";\n  } else {\n    return {};\n  }\n}\n\ncreate(false).value_or(\"empty\"); // == \"empty\"\ncreate(true).value(); // == \"Godzilla\"\n// optional-returning factory functions are usable as conditions of while and if\nif (auto str = create(true)) {\n  // ...\n}\n</code></pre>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdany","title":"std::any","text":"<p>A type-safe container for single values of any type. <pre><code>std::any x {5};\nx.has_value() // == true\nstd::any_cast&lt;int&gt;(x) // == 5\nstd::any_cast&lt;int&amp;&gt;(x) = 10;\nstd::any_cast&lt;int&gt;(x) // == 10\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdstring_view","title":"std::string_view","text":"<p>A non-owning reference to a string. Useful for providing an abstraction on top of strings (e.g. for parsing). <pre><code>// Regular strings.\nstd::string_view cppstr {\"foo\"};\n// Wide strings.\nstd::wstring_view wcstr_v {L\"baz\"};\n// Character arrays.\nchar array[3] = {'b', 'a', 'r'};\nstd::string_view array_v(array, std::size(array));\n\nstd::string str {\"   trim me\"};\nstd::string_view v {str};\nv.remove_prefix(std::min(v.find_first_not_of(\" \"), v.size()));\nstr; //  == \"   trim me\"\nv; // == \"trim me\"\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdinvoke","title":"std::invoke","text":"<p>Invoke a <code>Callable</code> object with parameters. Examples of <code>Callable</code> objects are <code>std::function</code> or <code>std::bind</code> where an object can be called similarly to a regular function. <pre><code>template &lt;typename Callable&gt;\nclass Proxy {\n  Callable c;\npublic:\n  Proxy(Callable c): c(c) {}\n  template &lt;class... Args&gt;\n  decltype(auto) operator()(Args&amp;&amp;... args) {\n    // ...\n    return std::invoke(c, std::forward&lt;Args&gt;(args)...);\n  }\n};\nauto add = [](int x, int y) {\n  return x + y;\n};\nProxy&lt;decltype(add)&gt; p {add};\np(1, 2); // == 3\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdapply","title":"std::apply","text":"<p>Invoke a <code>Callable</code> object with a tuple of arguments <pre><code>auto add = [](int x, int y) {\n  return x + y;\n};\nstd::apply(add, std::make_tuple(1, 2)); // == 3\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdfilesystem","title":"std::filesystem","text":"<p>The new <code>std::filesystem</code> library provides a standard way to manipulate files, directories, and paths in a filesystem. <pre><code>const auto bigFilePath {\"bigFileToCopy\"};\nif (std::filesystem::exists(bigFilePath)) {\n  const auto bigFileSize {std::filesystem::file_size(bigFilePath)};\n  std::filesystem::path tmpPath {\"/tmp\"};\n  if (std::filesystem::space(tmpPath).available &gt; bigFileSize) {\n    std::filesystem::create_directory(tmpPath.append(\"example\"));\n    std::filesystem::copy_file(bigFilePath, tmpPath.append(\"newFile\"));\n  }\n}\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#stdbyte","title":"std::byte","text":"<p>The new <code>std::byte</code> type provides a standard way of representing data as byte. Benefits of using <code>std::byte</code> over <code>char</code> or <code>unsigned char</code> is that it is not a character type, and is also not an arithmetic type; while the only operator overloads available are bitwise operator. <pre><code>std::byte a {0};\nstd::byte b {0xFF};\nint i = std::to_integer&lt;int&gt;(b); // 0xFF\nstd::byte c = a &amp; b;\nint j = std::to_integer&lt;int&gt;(c); // 0\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#splicing-for-maps-and-sets","title":"Splicing for maps and sets","text":"<p>Moving nodes and merging containers whithout the overhead of expensive copies, moves, or heap allocations/deallocations. Moving elements from one map to another: <pre><code>std::map&lt;int, string&gt; src {{1, \"one\"}, {2, \"two\"}, {3, \"buckle my shoe\"}};\nstd::map&lt;int, string&gt; dst {{3, \"three\"}};\ndst.insert(src.extract(src.find(1))); // Cheap remove and insert of { 1, \"one\" } from `src` to `dst`.\ndst.insert(src.extract(2)); // Cheap remove and insert of { 2, \"two\" } from `src` to `dst`.\n// dst == { { 1, \"one\" }, { 2, \"two\" }, { 3, \"three\" } };\n</code></pre> Inserting elements which outlive the container: <pre><code>auto elementFactory() {\n  std::set&lt;...&gt; s;\n  s.emplace(...);\n  return s.extract(s.begin());\n}\ns2.insert(elementFactory());\n</code></pre> Changing the key of a map element: <pre><code>std::map&lt;int, string&gt; m {{1, \"one\"}, {2, \"two\"}, {3, \"three\"}};\nauto e = m.extract(2);\ne.key() = 4;\nm.insert(std::move(e));\n// m == { { 1, \"one\" }, { 3, \"three\" }, { 4, \"two\" } }\n</code></pre></p>"},{"location":"coding/c%2B%2B/cpp_new_future/#parallel-algorithms","title":"parallel algorithms","text":"<p>Many of the STL algorithms, such as the <code>copy</code>, <code>find</code> and <code>sort</code> methods, started to support the parallel execution policies: <code>seq</code>, <code>par</code> and <code>par_unseq</code> which translate to \"sequentially\", \"parallel\" and \"parallel unsequenced\". <pre><code>std::vector&lt;int&gt; longVector;\n// Find element using parallel execution policy\nauto result1 = std::find(std::execution::par, std::begin(longVector), std::end(longVector), 2);\n// Sort elements using sequential execution policy\nauto result2 = std::sort(std::execution::seq, std::begin(longVector), std::end(longVector));\n</code></pre></p>"},{"location":"coding/c%2B%2B/note_tips_cpp/","title":"C++ Tips and Tricks","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#tips","title":"\u6458\u5f55tips","text":"<p>If your home is clean, most guests will be clean without being asked. \u6211\u60f3\u4e0d\u5149\u6587\u6863\u5982\u662f\uff0c\u5728\u6211\u4eec\u7684\u5b9e\u8df5\u4e2d\uff0c\u5982\u679c\u5404\u56e2\u961f\u5404\u6a21\u5757\u90fd\u80fd\u505a\u5230\u4ee3\u7801\u6d01\u51c0\u6e05\u6670\uff0c\u6240\u6709\u4eba\u90fd\u4f1a\u81ea\u89c9\u5730\u540c\u6837\u505a\u5230\u3002\u53cd\u4e4b\uff0c\u4f3c\u4e4e\u5c31\u4f1a\u6076\u6027\u5faa\u73af\u3002\u6c38\u8fdc\u5c06\u6700\u597d\u7684\u4ea7\u51fa\u4ea4\u7ed9\u4e0b\u4e00\u73af\uff0c\u662f\u5e94\u5f53\u8ffd\u6c42\u7684\u6587\u5316\uff0c\u4e0e\u5927\u5bb6\u5171\u52c9 https://google.github.io/styleguide/docguide/best_practices.html</p> <p>coding stype of Drake(google style\u52a0\u5f3a)</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#const","title":"const","text":"<p>absel-tips-109: function const \u4fee\u9970\u5bf9\u8c61\u662f\u5565\uff1f</p> <pre><code>//\u5982\u679cconst\u4f4d\u4e8e*\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b\n//\u5982\u679cconst\u4f4d\u4e8e*\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\n\n\n//\u6307\u5411\u4ee5\u53ca\u6307\u5411\u7684\u5185\u5bb9\u90fd\u53ef\u6539\u53d8\ntypedef std::shared_ptr&lt;Config&gt; ConfigPtr;\n//\u6307\u5411\u7684\u5bf9\u8c61\u5185\u5bb9\u4e0d\u53ef\u6539\u53d8,\u4f46\u6307\u5411\u53ef\u4ee5\u6539\u53d8\ntypedef std::shared_ptr&lt;const Config&gt; ConfigConstPtr;  //\u7b49\u540c\u4e8e\"const ConfigPtr\"\n//\u6307\u5411\u7684\u5bf9\u8c61\u5185\u5bb9\u4e0d\u53ef\u6539\u53d8,\u4e14\u6307\u5411\u4e0d\u53ef\u6539\u53d8\ntypedef std::shared_ptr&lt;const Config&gt; const ConstConfigConstPtr;\n\nint i = 42;\nint *p;      //p\u662f\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u53ea\u60f3int\u5bf9\u8c61\u7684\u6307\u9488\nint *&amp;r = p; //r\u662f\u4e00\u4e2a\u6307\u5411int\u578b\u6307\u9488\u7684\u5f15\u7528\uff0c(\u79bb\u53d8\u91cf\u540d\u6700\u8fd1\u7684\u7b26\u53f7\uff08\u6b64\u5904\u662f&amp;\uff09\u51b3\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u6b64\u5904r\u80af\u5b9a\u662f\u4e00\u4e2a\u5f15\u7528)\nr = &amp;i;      //\u76f8\u5f53\u4e8e\u6307\u9488p\u6307\u5411i, \u5373p = &amp;i\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#bit-opertion","title":"\u4f4d\u8fd0\u7b97(bit opertion)","text":"<p>\u57fa\u7840\u5b9a\u4e49</p> <p>\u4f4d\u8fd0\u7b97\u975e\u5e38\u7b80\u5355\uff0c\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u800c\u4e14\u5f88\u6709\u8da3\uff0c\u5728\u5e73\u65f6\u7684\u5f00\u53d1\u4e2d\u5e94\u7528\u4e5f\u975e\u5e38\u5e7f\u6cdb\uff0c\u7279\u522b\u662f\u9700\u8981\u4f18\u5316\u7684\u5927\u6570\u636e\u91cf\u573a\u666f\u3002\u6240\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u7684<code>+-*/</code>\u8fd0\u7b97\u7b26\u5b9e\u9645\u4e0a\u5e95\u5c42\u4e5f\u90fd\u662f\u7528\u4f4d\u8fd0\u7b97\u5b9e\u73b0\u7684\u3002\u5728\u9762\u8bd5\u4e2d\u5982\u679c\u4f60\u80fd\u7528\u4f4d\u8fd0\u7b97\u4f18\u5316\u7a0b\u5e8f\u3001\u8fdb\u884c\u96c6\u5408\u64cd\u4f5c\u662f\u4e0d\u662f\u4e5f\u80fd\u52a0\u5206\u5440\u3002\u82b1\u8d39\u5f88\u5c11\u7684\u65f6\u95f4\u5c31\u80fd\u5e26\u6765\u5f88\u5927\u7684\u6536\u83b7\u4f55\u4e50\u800c\u4e0d\u4e3a\u3002\u672c\u6587\u603b\u7ed3\u4e86\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u64cd\u4f5c\u3001\u5e38\u7528\u6280\u5de7\u548c\u573a\u666f\u5b9e\u8df5\uff0c\u5e0c\u671b\u80fd\u7ed9\u4f60\u5e26\u6765\u6536\u83b7\u3002</p> <p>\u5e38\u89c1\u8868\u793a</p> 16\u8fdb\u5236Hexadecimal\u4ee50x\u5f00\u5934(x\u4e0d\u5206\u5927\u5c0f\u5199,number zero), 0x\u4e0e0X\u7b49\u4ef7 8\u8fdb\u5236Octal\u4ee50\u5f00\u5934(number zero) 2\u8fdb\u5236Binary 10\u8fdb\u5236Decimal 0xF 017\u8f6cbinary: 7x8<sup>0+1x8</sup>1 1111 15 0xFF 1111-1111 255"},{"location":"coding/c%2B%2B/note_tips_cpp/#_1","title":"\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a","text":"<p>\u4e8c\u8fdb\u5236\u6700\u540e\u4e00\u4f4d\u4e3a0\u5219\u4e3a\u5076\u6570\uff0c\u4e3a1\u5219\u4e3a\u5947\u6570</p> <pre><code>e.g: -5\u7684\u4e8c\u8fdb\u5236\u8868\u793a\n0000 0101 //5\u7684\u4e8c\u8fdb\u5236 \u539f\u7801\n1111 1010 //\u53d6\u53cd      \u53cd\u7801\n1111 1011 //\u53cd\u7801+1    \u8865\u7801\uff0c\u5373\u4e3a-5\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff088\u4f4d\uff09\n1111 1111 1111 1011 //-5\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff0816\u4f4d\uff09\ne.g: \u77e5\u9053\u67d0\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11110011 = -13\n1111 0011 //\u67d0\u8d1f\u6570\u4e8c\u8fdb\u5236\u8868\u793a\n1111 0010 //\u51cf1\n0000 1101 //\u53d6\u53cd\uff0c\u5373\u4e3a\u5341\u8fdb\u5236\u768413\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#bit-opertion_1","title":"\u5e38\u89c1\u4f4d\u8fd0\u7b97(bit opertion)","text":"<p>\u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u4e3b\u8981\u67096\u4e2a</p> <p>\u6309\u4f4d\u4e0e\u3001\u6309\u4f4d\u6216\u3001\u5de6\u79fb&lt;\u3001\u53f3\u79fb&gt;\u3001\u6309\u4f4d\u53d6\u53cd\u3001\u6309\u4f4d\u5f02\u6216\u3001\u903b\u8f91\u53f3\u79fb</p> <pre><code>1 PB = 1024 TB\n1 TB = 1024 GB\n1 GB = 1024 MB\n1 MB = 1024 KB\n1 KB = 1024 B(Byte \u5b57\u8282)\n1 B  = 8    bit(\u4f4d\uff0c\u4e5f\u79f0\u6bd4\u7279\u8ba1\u7b97\u673a\u5185\u5b58\u57fa\u672c\u5355\u5143)\n\n\n\u539f\u7801\uff1a\u4e8c\u8fdb\u5236\u8868\u793a\uff08\u6ce8\u610f\uff0c\u6709\u4e00\u4f4d\u7b26\u53f7\u4f4d\uff09\n\u53cd\u7801\uff1a\u6b63\u6570\u7684\u53cd\u7801\u5c31\u662f\u539f\u7801\uff0c\u8d1f\u6570\u7684\u53cd\u7801\u5c31\u662f\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u4e3a\u90fd\u53d6\u53cd\n\u8865\u7801\uff1a\u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u539f\u7801\uff0c\u8d1f\u6570\u7684\u8865\u7801\u662f\u53cd\u7801+1\n\u7b26\u53f7\u4f4d\uff1a\u6700\u9ad8\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c0\u8868\u793a\u6b63\u6570\uff0c1\u8868\u793a\u8d1f\u6570\u3002\u5728\u4f4d\u8fd0\u7b97\u4e2d\u7b26\u53f7\u4f4d\u4e5f\u53c2\u4e0e\u8fd0\u7b97\n</code></pre> <p>\u6309\u4f4d\u4e0e</p> <p><code>\u4e8c\u76ee\u8fd0\u7b97\u7b26\uff0c\u4e24\u4f4d\u90fd\u4e3a1\u7ed3\u679c\u4e3a1\uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a0</code></p> <pre><code>1 &amp; 1 = 1\n1 &amp; 0 = 0\n0 &amp; 1 = 0\n0 &amp; 0 = 0\ne.g: 3 &amp; 17 = 1\n3 = 00000011 //011, \u4e8c\u8fdb\u5236\u4e0d\u8db3\u7684\u4e3a\u75280\u8865\n17= 00010001\n&amp; = 00000001 = 1\n</code></pre> <p>\u6309\u4f4d\u6216</p> <p><code>\u4e8c\u76ee\u8fd0\u7b97\u7b26\uff0c\u6709\u4e00\u4f4d\u4e3a1\u7ed3\u679c\u4e3a1\uff0c\u4e24\u4f4d\u90fd\u4e3a0\u7ed3\u679c\u624d\u4e3a0</code></p> <pre><code>1 &amp; 1 = 1\n1 &amp; 0 = 1\n0 &amp; 1 = 1\n0 &amp; 0 = 0\ne.g: 3 | 17 = 19\n3 = 00000011 //011, \u4e8c\u8fdb\u5236\u4e0d\u8db3\u7684\u4e3a\u75280\u8865\n17= 00010001\n| = 00010011 = 19\n</code></pre> <p>\u6309\u4f4d\u5f02\u6216(\u4e00\u6837\u4e3a0,\u4e0d\u4e00\u6837\u4e3a1)</p> <p><code>\u4e8c\u76ee\u8fd0\u7b97\u7b26\uff0c\u90fd\u4e3a1\u6216\u90fd\u4e3a0\u5219\u7ed3\u679c\u4e3a0\uff0c\u5426\u5219\u4e3a1</code></p> <pre><code>0 ^ 0 = 0\n1 ^ 1 = 0\n1 ^ 0 = 1\n0 ^ 1 = 1\n\n7 ^ 1 = 6 #\u5947\u6570\u5f02\u62161\uff0c\u7ed3\u679c\u4e3a\u5de6\u8fb9\u7684\u5076\u6570(-1)\n0111-&gt;7\n0001-&gt;1\n0110=6\n6 ^ 1 = 7 #\u5076\u6570\u5f02\u62161\uff0c\u7ed3\u679c\u4e3a\u53f3\u8fb9\u7684\u5947\u6570(+1)\n0110-&gt;6\n0001-&gt;1\n0111=7\n</code></pre> <p>\u6309\u4f4d\u53d6\u53cd</p> <p><code>\u5355\u76ee\u8fd0\u7b97\u7b26\uff0c\u5bf9\u64cd\u4f5c\u6570\u8fdb\u884c\u6309\u4f4d\u53d6\u53cd</code></p> <pre><code>#\u65e0\u8bba\u6b63\u6570\u3001\u8d1f\u6570\u62160\uff0c\u5747\u4e3a\u53d6\u53cd\u7136\u540e-1\n\uff5e20 = -20 - 1 = -21\n...\n\uff5e1 = -1-1= -2\n\uff5e0 = -0 - 1 = -1\n\uff5e-1 = 1-1 = 0\n\uff5e-2 = 2-1 = 1\n...\n\uff5e-20 = 20 - 1 = 19\n##e.g [-5, 5] \u5747\u53d6\u53cd\u5219\u4e3a [-6, 4]\n</code></pre> <p>\u5de6\u79fb\u64cd\u4f5c</p> <p><code>\u4e8c\u76ee\u8fd0\u7b97\u7b26\uff0c\u628a\u64cd\u4f5c\u6570\u6574\u4f53\u5411\u5de6\u79fb\u52a8</code></p> <pre><code>e.g: 33&lt;&lt;2 = 100001&lt;&lt;2 = 10000100 = 132\n-2147483647 &lt;&lt; 1 = 10000000000000000000000000000001 &lt;&lt; 1 = 10 = 2 (\u7b26\u53f7\u4f4d\u4e5f\u53c2\u4e0e\u8fd0\u7b97)\n\u6280\u5de7\uff1aa &lt;&lt; n = a*2^n \uff08a\u4e3a\u6b63\u6570\uff09\n</code></pre> <p>\u53f3\u79fb\u64cd\u4f5c</p> <p><code>\u4e8c\u76ee\u8fd0\u7b97\u7b26\uff0c\u628a\u64cd\u4f5c\u6570\u6574\u4f53\u5411\u53f3\u79fb\u52a8\uff0c\u5de6\u4fa7\u4e0d\u8db3\u7684\u8865\u7b26\u53f7\u4f4d\u7684\u6570\uff08\u6b63\u65700\uff0c\u8d1f\u65701\uff09\uff0c\u53f3\u4fa7\u8d85\u51fa\u7684\u4f4d\u622a\u6389</code></p> <pre><code>\u5bf9\u4e8e\u7b97\u672f\u53f3\u79fb\uff0c\u539f\u6765\u662f\u8d1f\u6570\u7684\uff0c\u7ed3\u679c\u8fd8\u662f\u8d1f\u6570\uff0c\u539f\u6765\u662f\u6b63\u6570\u7684\u7ed3\u679c\u8fd8\u662f\u6b63\u6570\u3002\u903b\u8f91\u53f3\u79fb\u5c06A\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\u5411\u53f3\u79fbB\u4f4d\uff0c\u53f3\u8fb9\u8d85\u51fa\u7684\u4f4d\u622a\u6389\uff0c\u5de6\u8fb9\u4e0d\u8db3\u7684\u4f4d\u88650\u3002\u6240\u4ee5\u5bf9\u4e8e\u903b\u8f91\u53f3\u79fb\uff0c\u7ed3\u679c\u5c06\u4f1a\u662f\u4e00\u4e2a\u6b63\u6570\n\ne.g: \n-2147483647 &gt;&gt; 1 = 10000000000000000000000000000001 &gt;&gt; 1 \n= 01000000000000000000000000000000 = 1073741824 \uff08\u8865\u8db30\uff09\n\u6280\u5de7\uff1aa&gt;&gt;n = a/2^n\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_2","title":"\u4f7f\u7528\u573a\u666f\u53ca\u793a\u4f8b","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#_3","title":"\u5224\u65ad\u5947\u5076(\u6309\u4f4d\u4e0e)","text":"<p>\u4f4d\u8fd0\u7b97\u6548\u7387\u8fdc\u9ad8\u4e8e\u4e58\u9664\u548c\u6c42\u4e8e\u8fd0\u7b97</p> <p>\u4f7f\u7528\u6309\u4f4d\u4e0e\uff08AND\uff09\u8fd0\u7b97\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\u3002\u5bf9\u4e8e\u4efb\u610f\u6574\u6570n\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\uff08LSB\uff09\u8868\u793an\u7684\u5947\u5076\u6027\uff1a\u5982\u679c\u6700\u4f4e\u4f4d\u662f0\uff0c\u5219n\u662f\u5076\u6570\uff1b\u5982\u679c\u6700\u4f4e\u4f4d\u662f1\uff0c\u5219n\u662f\u5947\u6570\u3002</p> <pre><code>func_is_odd = [](int exp){\n  return (exp &amp; 0x01) ? true : false;  //\u5947\u6570odd, 0x01\u5373\u4e3a\u5341\u516d\u8fdb\u52361\n  // exp &amp; 0x01 \u540c 0x01 &amp; exp \u4e00\u6837\n};\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_4","title":"\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c","text":"<p>\u4f7f\u7528\u6309\u4f4d\u5f02\u6216\uff08XOR\uff09\u8fd0\u7b97\u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u3002\u5bf9\u4e8e\u4efb\u610f\u6574\u6570a\u548cb\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\uff08LSB\uff09\u8868\u793aa\u548cb\u7684\u4e0d\u540c\u4f4d\uff1a\u5982\u679c\u6700\u4f4e\u4f4d\u662f0\uff0c\u5219a\u548cb\u7684\u5bf9\u5e94\u4f4d\u76f8\u540c\uff1b\u5982\u679c\u6700\u4f4e\u4f4d\u662f1\uff0c\u5219a\u548cb\u7684\u5bf9\u5e94\u4f4d\u4e0d\u540c\u3002</p> <pre><code>func_swap = [](int&amp; a, int&amp; b){\n  //a = 5, b = 7\n  a = a ^ b;\n  b = a ^ b; // \u73b0\u5728 b \u662f 5\n  a = a ^ b; // \u73b0\u5728 a \u662f 7\n}; \n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_5","title":"\u9519\u8bef\u7801\u8bbe\u7f6e\u548c\u5224\u65ad","text":"<pre><code>error_code[Error::kBev] |= (1 &lt;&lt; Error::kNoMessage);\n\nif(CHECK_BIT(error_code[Error::kBev], Error::kNoMessage)){\n  //...\n}\n\n#define CHECK_BIT(data, bit) (((data) &amp; (1LL &lt;&lt; (bit))) != 0)\n#define CLEAR_BIT(data, bit) ((data) &amp;= (0LL &lt;&lt; (bit)))\n#define SET_BIT(data, bit) ((data) |= (1LL &lt;&lt; (bit)))\n#define CLEAR_BITS(data) ((data) = (0))\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_6","title":"\u5b58\u50a8\u5750\u6807","text":"<p>\u6309\u4f4d\u6216\u548c\u5de6\u79fb\u7ed3\u5408\u4f7f\u7528: \u5b58\u50a8\u6570\u636e</p> <p>\u6309\u4f4d\u4e0e\u548c\u53f3\u79fb\u7ed3\u5408\u4f7f\u7528: \u53d6\u6570\u636e</p> <p>case1: patch_id\u548cpixel_id\u7684\u5b58\u50a8</p> <pre><code>64 pixel.x 48  pixel.y 32 patch.x  16  patch.y   0\n\u5b58 (x+1)&lt;&lt;48    y&lt;&lt;32      x&lt;&lt;16\n\u53d6 (id&gt;&gt;48)-1 (id&gt;&gt;32)&amp;0xFFFF\n|...........|...........|............|............|  \n\nusing PatchId = uint64_t;\nusing PixelId = uint64_t; //\u540c\u65f6\u5305\u542bpixel\u548cpatch\u7684\u5750\u6807\nstruct PixelRowCol {\n  int row;\n  int col;\n  bool operator==(const PixelRowCol&amp; rhs) const {\n    return row == rhs.row &amp;&amp; col == rhs.col;\n  }\n};  \n</code></pre> <pre><code>static constexpr int kPatchRowBitOffset = 16;\n\nstatic constexpr int kPixelColBitOffset = 32;\nstatic constexpr int kPixelRowBitOffset = 48;\n\nstatic constexpr uint64_t kPatchIdMask = 0xFFFFFFFF; //\u593432\u4f4d\u6bb5\nstatic constexpr uint64_t kPixelIdMask = 0xFFFFFFFF00000000;\n\nuint64_t PatchRowColToId(int16_t row, int16_t col){\n    uint64_t key_row = *reinterpret_cast&lt;uint16_t*&gt;(&amp;row);\n    uint64_t key_col = *reinterpret_cast&lt;uint16_t*&gt;(&amp;col);\n    //return (key_row &lt;&lt; kPatchRowBitOffset) | key_col;\n    return (key_row &lt;&lt; 16) | key_col;\n}\n////////\nuint64_t PixelRowColToId(int16_t row, int16_t col){\n    uint64_t patch_id= ....\n\n    uint64_t pix_row = *reinterpret_cast&lt;uint16_t*&gt;(&amp;row);\n    uint64_t pix_col = *reinterpret_cast&lt;uint16_t*&gt;(&amp;col);\n    return ((pix_row + 1) &lt;&lt; 48) | (pix_col &lt;&lt; 32) | patch_id;\n}\n\nPixelRowCol PixelIdToRowCol(uint64_t pixel_id){\n    return {static_cast&lt;int&gt;(pixel_id &gt;&gt; 48) - 1,/*pixel_x*/\n          static_cast&lt;int&gt;(pixel_id &gt;&gt; 32) &amp; 0xFFFF /*\u53ea\u4fdd\u7559\u5c3e\u7aef16\u4f4d\u7684pixel.y, 16\u8fdb\u5236F\u8868\u793a\u4e8c\u8fdb\u52361111*/}\n}\nuint64_t GetBelongingPatchId(uint64_t pixel_id){\n    //\u53d60-64\u4f4d\u6bb5\u4e2d\u76840-32,\u5373patch_id\u6240\u5904\u4f4d\u6bb5\n    //return pixel_id &amp; kPatchIdMask;\n    return pixel_id &amp; 0xFFFFFFFF; //\u6309\u4f4d\u4e0e,\u53ea\u4fdd\u7559\u540e32\u4f4d\u6bb5\n}\n</code></pre> <p>case2: \u5b58\u50a8\u70b9\u4e91\u6570\u636e</p> <pre><code>using PointIndexer = std::uint32_t;\n// constexpr uint32_t kLidarMask = 0xF0000;\n// constexpr uint32_t k\n// |lidarid-8|scanline_id-8|point_id-16|\n/*\nuint8 [0,255]\nuint16 [0,65535]\nuint32 [0,4294967295]\n*/\n\nstruct PointInfo {\n  uint16_t lidar_id; // uint8_t \u4e0d\u8f93\u51fa\u6570\u5b57\n  uint16_t scanline_id;\n  uint16_t point_id;\n  PointInfo() = default;\n  PointInfo(uint16_t id1, uint16_t id2, uint16_t id3)\n      : lidar_id(id1), scanline_id(id2), point_id(id3) {}\n  friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const PointInfo &amp;info) {\n    os &lt;&lt; \"lidar_id:\" &lt;&lt; info.lidar_id &lt;&lt; \"  scanline_id:\" &lt;&lt; info.scanline_id\n       &lt;&lt; \" point_id:\" &lt;&lt; info.point_id &lt;&lt; std::endl;\n    return os;\n  }\n};\nPointIndexer GetPointIndexer(const PointInfo info) {\n  // uint32_t key_lidar_id = uint32_t(lidar_id);\n  return (uint32_t(info.lidar_id) &lt;&lt; 24) | (uint32_t(info.scanline_id) &lt;&lt; 16) |\n         (uint32_t(info.point_id));\n}\n\nPointInfo PointIndexerToInfo(const PointIndexer indexer) {\n  PointInfo info;\n  info.lidar_id = uint16_t(indexer &gt;&gt; 24);\n  info.scanline_id = uint16_t((indexer &gt;&gt; 16) &amp; 0xFF);\n  info.point_id = uint16_t(indexer &amp; 0xFFFF);\n  return info;\n}\nint main() {\n  PointInfo info(0, 0, 0);\n  PointIndexer indexer = GetPointIndexer(info);\n  std::cout &lt;&lt; \"indexer:\" &lt;&lt; indexer &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"recover indexer:  \" &lt;&lt; PointIndexerToInfo(indexer) &lt;&lt; std::endl;\n\n  PointInfo info2(5, 40, 65533);\n  PointIndexer indexer2 = GetPointIndexer(info2);\n  std::cout &lt;&lt; \"indexer2:\" &lt;&lt; indexer2 &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"recover indexer2:  \" &lt;&lt; PointIndexerToInfo(indexer2)\n            &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_7","title":"\u6a21\u7248\u76f8\u5173","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#using","title":"using\u58f0\u660e\u6a21\u677f\u522b\u540d","text":"<p>typedef \u4e0d\u80fd\u7528\u4e8e\u6a21\u677f\u522b\u540d\uff0c\u800c using \u53ef\u4ee5 </p> <pre><code>template&lt;typename Key, typename T&gt;\nusing FlatHashMap = absl::flat_hash_map&lt;Key, T&gt;;\n\ntemplate&lt;typename T&gt;\nusing PatchId = uint64_t;\nusing FlatHashSet = absl::flat_hash_set&lt;T&gt;;\nusing PatchIds = FlatHashSet&lt;PatchId&gt;;\n//usage\nFlatHashMap&lt;int, std::vector&lt;int&gt;&gt; key_submapids;\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_8","title":"\u6570\u636e\u7c7b\u578b","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#_9","title":"\u57fa\u672c\u7c7b\u578b","text":"<p>\u6570\u503c\u578b</p> <ul> <li>int8\u548cuint8\u9ed8\u8ba4\u8868\u793a\u5b57\u7b26\uff0c\u8f93\u51fa\u7684\u8bdd\u4e0d\u4f1a\u8f93\u51fa\u5bf9\u5e94\u7684\u6570\u5b57(\u9700\u8981\u5982\u4e0b\u5982\u4e0b\u8f6c\u6362\u624d\u80fd\u663e\u793a\u6570\u5b57)</li> </ul> <pre><code>  std::vector&lt;int8_t/*uint8_t*/&gt; test = {0, 1, 2, 3, 4, 'c', 5, 6, 40};\n  for (const auto ele : test) { \n    std::cout &lt;&lt; unsigned(ele) &lt;&lt; \" \";//\u901a\u8fc7unsigned\u8f6c\u4e3a\u6570\u503c\u578b\n  }\n  std::cout&lt;&lt;\"xxx show num of 'a':\"&lt;&lt;unsigned('a'); //'a'\u7684ASCLL\u5bf9\u5e94\u6570\u5b5797\n</code></pre> <ul> <li><code>unsigned char</code>\u548c<code>uint8_t</code>\u4e00\u6837\uff0c\u90fd\u662f8\u4f4d\uff0c<code>uint8_t</code>\u66f4\u52a0\u5065\u58ee(\u4f7f\u7528int8\u6216\u8005uint8_t\u8868\u793a\u6570\u5b57\uff0c\u8f93\u51fa\u65f6\u9700\u8981\u8f6c\u6362\u4e3a\u6570\u503c)</li> <li><code>size_t</code>\u572832\u4f4d\u673a\u5668 <code>typedef unsigned int size_t;</code>\uff0c\u572864\u4f4d\u673a\u5668\u4e3a <code>typedef  unsigned long size_t</code></li> <li><code>uint8</code>:  [0,255]. <code>uint16</code>: [0,65535]. <code>uint32</code>: [0,4294967295]</li> <li><code>char</code>: is neither <code>unsigned char</code> nor <code>signed char</code></li> <li><code>int</code>: is implicitly <code>signed int</code></li> </ul> <p>\u5e38\u89c1\u6570\u636e\u7c7b\u578b</p> \u53d8\u91cf \u503c \u503c FLT_MIN float\u7c7b\u578b\uff1a\u65e0\u9650\u63a5\u8fd10\uff0c\u4f46\u5927\u4e8e0 0.00000 or 1.175494e-38 FLT_MAX float\u7c7b\u578b\uff1a\u65e0\u9650\u5927 3.402823e+38 INT_MIN int\u7c7b\u578b\uff1a\u8d1f\u6700\u5927 -2147483648 INT_MAX 2147483647 std::numeric_limits <code>&lt;T&gt;::</code>,Defined in header  lowest() : int float double\u00a0 &lt;0\u7684\u6781\u5927\u503cmin(): int\u7c7b\u578b\u00a0&lt;0\u7684\u6781\u5c0f\u503cmin(): float\u548cdouble\u7c7b\u578b \u90fd\u662f&gt;0\u7684\u6781\u5c0f\u503cmax(): \u6781\u5927\u503c <p>std::numeric_limits </p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#array","title":"array","text":"<p>\u521d\u59cb\u5316\u65f6\u5982\u679c\u5206\u914d\u7684\u7a7a\u95f4\u6bd4\u8f83\u5927\u4f4d\u4e8e\u6808\u533a</p> <ul> <li> <p>\u6808\u6ea2\u51fa\uff1a<code>std::array</code>\u5b9a\u4e49\u7684\u6570\u7ec4\u5728\u521d\u59cb\u5316\u65f6\u5982\u679c\u5206\u914d\u7684\u7a7a\u95f4\u6bd4\u8f83\u5927(\u4f4d\u4e8e\u6808\u533a)\uff0c\u5f88\u5bb9\u6613\u5b58\u5728<code>Stack smashing</code>\u7684\u95ee\u9898,\u5982<code>std::array&lt;std::array&lt;Cell 200&gt;, 800&gt; polar_data{}</code>\u5b58\u9020\u6210\u6808\u533a\u6ea2\u51fa\u5f15\u8d77\u7a0b\u5e8f\u8be1\u5f02\u7684\u5076\u53d1\u4e2d\u65ad\uff0c\u4e14\u6392\u67e5\u65e0\u660e\u663e\u7ebf\u7d22 </p> </li> <li> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a \u907f\u514d\u5728\u6808\u533a\u5206\u914d\u8f83\u5927\u7684\u7a7a\u95f4\uff0c\u6700\u597d\u4f7f\u7528new\u64cd\u4f5c\u7b26\u5728\u5806\u7a7a\u95f4\u7533\u8bf7\u5185\u5b58</p> </li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#enumenum-class","title":"enum\u548cenum class","text":"<p>\u5728C++11\u53ca\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528enum class,\u5b9a\u4e49\u7684\u679a\u4e3e\u7c7b\u578b\u9ed8\u8ba4\u662f\u6574\u578b\uff0c\u53ef\u4ee5\u907f\u514d\u9690\u5f0f\u8f6c\u6362\u9519\u8bef,\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u7c7b\u578b\u5b89\u5168\u6027\u548c\u66f4\u6e05\u6670\u7684\u4ee3\u7801\u3002\u7136\u800c\uff0cenum\u5728\u4e00\u4e9b\u9700\u8981\u4e0e\u65e7\u4ee3\u7801\u517c\u5bb9\u6216\u9700\u8981\u679a\u4e3e\u503c\u5177\u6709\u6574\u6570\u5e95\u5c42\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u5176\u7528\u9014\u3002</p> <p>\u4f5c\u7528\u57df:</p> <ul> <li>enum class \u5177\u6709\u9650\u5b9a\u4f5c\u7528\u57df\u3002\u8fd9\u610f\u5473\u7740\u679a\u4e3e\u7c7b\u4e2d\u7684\u679a\u4e3e\u503c\u662f\u9650\u5b9a\u5728\u7c7b\u5185\u90e8\u7684\uff0c\u5916\u90e8\u4ee3\u7801\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u679a\u4e3e\u503c\uff0c\u9700\u8981\u4f7f\u7528\u7c7b\u540d\u4f5c\u4e3a\u524d\u7f00   <pre><code>enum class Color : int { Red, Green, Blue };\nint main() {\n    // Color::Red; // \u6b63\u786e\n    // Red; // \u9519\u8bef\uff0c\u672a\u5b9a\u4e49\u7684\u6807\u8bc6\u7b26\n    return 0;\n}\n</code></pre></li> <li>enum\uff08\u672a\u6307\u5b9aclass\u7684\u679a\u4e3e\uff09\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002\u679a\u4e3e\u503c\u9ed8\u8ba4\u662f\u5916\u90e8\u4f5c\u7528\u57df\u7684\u4e00\u90e8\u5206\uff0c\u9664\u975e\u5b83\u4eec\u88ab\u9650\u5b9a\u5728\u679a\u4e3e\u5b9a\u4e49\u4e2d   <pre><code>enum Color { Red, Green, Blue };\nint main() {\n    Color c = Red; // \u6b63\u786e\uff0cRed\u662f\u5168\u5c40\u53ef\u89c1\u7684\n    return 0;\n}\n</code></pre></li> </ul> <p>\u7c7b\u578b\u5b89\u5168:</p> <ul> <li>enum class \u63d0\u4f9b\u66f4\u597d\u7684\u7c7b\u578b\u5b89\u5168\u3002\u4e0d\u540c\u7684enum class\u7c7b\u578b\u751a\u81f3\u662f\u679a\u4e3e\u503c\u76f8\u540c\u7684\uff0c\u4e5f\u88ab\u89c6\u4e3a\u4e0d\u540c\u7684\u7c7b\u578b\u3002</li> <li>enum\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u7684\u503c\u662f\u6574\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u7c7b\u578b\u4e0d\u5b89\u5168\u7684\u60c5\u51b5</li> </ul> <p>\u4e0e\u6574\u6570\u7684\u517c\u5bb9\u6027:</p> <ul> <li>enum class \u4e0d\u80fd\u9690\u5f0f\u5730\u8f6c\u6362\u4e3a\u6574\u6570\u7c7b\u578b\uff0c\u8fd9\u907f\u514d\u4e86\u4e00\u4e9b\u6f5c\u5728\u7684\u7c7b\u578b\u9519\u8bef\u3002</li> <li>enum\u7684\u503c\u53ef\u4ee5\u9690\u5f0f\u5730\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u8fd9\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u5bfc\u81f4\u4e0d\u5e0c\u671b\u7684\u7c7b\u578b\u8f6c\u6362\u3002</li> </ul> <p>\u5927\u5c0f:</p> <ul> <li>enum class \u4e0d\u5141\u8bb8\u9690\u5f0f\u7684\u5927\u5c0f\u5b9a\u4e49\uff0c\u5b83\u4eec\u7684\u5927\u5c0f\u7531\u5e95\u5c42\u7c7b\u578b\u660e\u786e\u6307\u51fa\uff08\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a\uff09\u3002   <pre><code>enum class Color : uint8_t { Red, Green, Blue };\n</code></pre></li> <li>enum\u7684\u5927\u5c0f\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a\uff0c\u901a\u5e38\u4e3a\u6700\u5c0f\u7684\u8db3\u4ee5\u5bb9\u7eb3\u6240\u6709\u679a\u4e3e\u503c\u7684\u6574\u6570\u7c7b\u578b</li> </ul> <p>\u524d\u5411\u58f0\u660e\uff1a</p> <ul> <li>enum class \u4e0d\u652f\u6301\u524d\u5411\u58f0\u660e\u3002</li> <li>enum\u53ef\u4ee5\u88ab\u524d\u5411\u58f0\u660e\uff0c\u8fd9\u5728\u9700\u8981\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u4f7f\u7528\u679a\u4e3e\u7c7b\u578b\u65f6\u975e\u5e38\u6709\u7528\u3002</li> </ul> <p>\u91cd\u8f7d\u51b3\u7b56\uff1a</p> <ul> <li>\u5f53\u4f7f\u7528enum class\u65f6\uff0c\u7f16\u8bd1\u5668\u5728\u91cd\u8f7d\u51fd\u6570\u65f6\u80fd\u591f\u533a\u5206\u4e0d\u540c\u7684\u679a\u4e3e\u7c7b\u578b\uff0c\u5373\u4f7f\u5b83\u4eec\u7684\u5e95\u5c42\u8868\u793a\u76f8\u540c\u3002</li> <li>\u4f7f\u7528enum\u65f6\uff0c\u7531\u4e8e\u679a\u4e3e\u503c\u6700\u7ec8\u662f\u6574\u6570\uff0c\u7f16\u8bd1\u5668\u5728\u91cd\u8f7d\u51b3\u7b56\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u6b67\u4e49\u3002</li> </ul> <p>\u6807\u51c6\u652f\u6301\uff1a</p> <p>enum class\u662f\u5728C++11\u4e2d\u5f15\u5165\u7684\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u73b0\u4ee3\u548c\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u5f0f\u6765\u5b9a\u4e49\u679a\u4e3e\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#pairtuple","title":"\u7ec4\u5408\u7c7b\u578b(pair&amp;tuple)","text":"\u64cd\u4f5c\u51fd\u6570 \u63cf\u8ff0 std::pair varstd::pair\u4f4d\u4e8e <code>&lt;utility&gt;</code> Default\u6784\u9020\u51fd\u6570\u5efa\u7acb\u4e00\u4e2apair\uff0c\u5176\u5143\u7d20\u5206\u522b\u4e3aT1\u548cT2\uff0c\u5404\u81ea\u4ee5\u5176default\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316 var.first \u83b7\u53d6pair\u5185\u7b2c\u4e00value(\u76f4\u63a5\u6210\u5458\u8bbf\u95ee) var.second \u83b7\u53d6pair\u5185\u7b2c\u4e8cvalue(\u76f4\u63a5\u6210\u5458\u8bbf\u95ee) std::get&lt;0&gt;(var) \u7b49\u4ef7\u4e8evar.first(C++11) std::get&lt;1&gt;(var) \u7b49\u4ef7\u4e8evar.second(C++11) std::tuple\u4f4d\u4e8e <code>&lt;tuple&gt;</code> \u4ee5n\u4e2a\u7ed9\u5b9a\u7c7b\u578b\u7684\u5143\u7d20\u5efa\u7acb\u4e00\u4e2atuple\uff0c\u4ee5\u5404\u81ea\u7c7b\u578bdefault\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316(\u57fa\u7840\u7c7b\u578b\u521d\u503c\u90fd\u4e3a0) <pre><code>std::string s;\nauto x = std::make_tuple(s); //x is of type tuple&lt;string&gt;\n\nauto y = std::make_tuple(ref(s)); //y is of type tuple&lt;string&amp;&gt;,thus y refer to s\nstd::get&lt;0&gt;(y) = \"my value\";      //both y and s is \"my value\"\n\n//\u91cd\u8f7dostream\uff0c\u76f4\u63a5\u8f93\u51fapair tuple\u7b49\u7c7b\u578b\u6570\u636e\n//output operator for tuples\n#include &lt;tuple&gt;\n#include &lt;iostream&gt;\n//hepler: print element with index IDX of tuple with MAX elements\ntemplate &lt;int IDX, int MAX, typename... Args&gt;\nstruct PRINT_TUPLE {\n  static void print (std::ostream&amp; strm, const std::tuple&lt;Args...&gt;&amp; t) {\n    strm &lt;&lt; std::get&lt;IDX&gt;(t) &lt;&lt; (IDX+1 == MAX ? \"\" : \",\");\n    PRINT_TUPLE&lt;IDX+1, MAX, Args...&gt;::print(strm, t);\n  }\n};\n\n//paritial sepcilization to end the recursion\ntemplate &lt;int MAX, typename... Args&gt;\nstruct PRINT_TUPLE&lt;MAX, MAX, Args...&gt; {\n  static void print (std::ostream&amp; strm, const std::tuple&lt;Args...&gt;&amp; t) {\n  }\n};\n//output operator for tuples\ntemplate &lt;typename... Args&gt;\nstd::ostream&amp; operator &lt;&lt; (std::ostream&amp; strm, const std::tuple&lt;Args...&gt;&amp; t) {\n  strm &lt;&lt;\"[\";\n  PRINT_TUPLE&lt;0, sizeof...(Args), Args...&gt;::print(strm, t);\n  return strm &lt;&lt;\"]\";\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#usage","title":"\u6807\u51c6\u5e93usage","text":"usage function example std::optional \u53ef\u9009\u53d8\u91cf <code>std::optional&lt;int&gt; id; //default value is std::nullopt</code> std::distance \u8fd4\u56de\u4e24\u4e2a\u8fed\u4ee3\u5668\u4e4b\u95f4\u7684\u8ddd\u79bb std::lower_bound \u67e5\u627e\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8exx\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u8fed\u4ee3\u5668 std::upper_bound \u67e5\u627e\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8exx\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u8fed\u4ee3\u5668 std::clamp(value, kMin,kMax) value\u4ecb\u4e8e[kMin,kMax]\u65f6\u5019\u8fd4\u56devalue,valuekMax\u8fd4\u56dekMax"},{"location":"coding/c%2B%2B/note_tips_cpp/#_10","title":"\u5e38\u7528\u5bb9\u5668","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#hash","title":"hash\u5bb9\u5668","text":"<p>std::unordered_map, std::unordered_set, std::unordered_multimap, std::unordered_multiset</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#hash_1","title":"hash\u51fd\u6570","text":"<p>hash\u503c\u4e00\u6837\u51b2\u7a81\u7684\u8bdd\u975e\u5e38\u5f71\u54cd\u6548\u7387\uff0c\u4e0d\u4e00\u5b9a\u8981\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff0c\u5176\u4ed6\u80fd\u751f\u6210\u552f\u4e00index\u7684\u90fd\u53ef\u4ee5</p> <p>\u5b9e\u4f8b</p> <p><pre><code>//std::pair as key ----from apollo\nstruct PairHash {\n  template &lt;typename T, typename U&gt;\n  size_t operator()(const std::pair&lt;T, U&gt;&amp; pair){\n    //pair\u7684x y\u7684\u503c\u6709\u6b63\u6709\u8d1f\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u8be5\u65b9\u6cd5\u4f1a\u9020\u6210hash\u51b2\u7a81,\u89e3\u51b3\u51b2\u7a81\u9700\u8981\u5927\u91cf\u65f6\u95f4\n    //\u8be5hash func\u9020\u6210poleExtractor\u662f\u7528\u65f6\u7adf\u7136\u8d85\u8fc7100ms,\u800c\u4f7f\u7528\u4e0b\u9762\u7684hash-func\u5219\u4e3a2ms\n    //return std::hash&lt;T&gt;()(pair.first) ^ std::hash&lt;U&gt;()(pair.second);\n    //max\u7c7b\u578b\u6700\u5927\u503c\u8981\u5c0f\u4e8epair.x()\u7684\u7c7b\u578b,\u5426\u5219\u4f1a\u5b58\u5728\u6ea2\u51fa\n    return std::numeric_limits&lt;uint16_t&gt;::max() * pair.x() + pair.y();\n  }\n};\n//e.g\nstd::unordered_map&lt;std::pair&lt;std::string, std::string&gt;, \n            std::string, PairHash&gt; var;\n\n//voxel vec3i as key\nstruct VoxelHash {\n  size_t operator()(const Voxel&amp; rhs) const {\n    //rhs\u7684x y z\u7684\u503c\u6709\u6b63\u6709\u8d1f\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u8be5\u65b9\u6cd5\u4f1a\u9020\u6210hash\u51b2\u7a81,\u4eca\u513f\u89e3\u51b3\u51b2\u7a81\u9700\u8981\u5927\u91cf\u65f6\u95f4\n    //\u5982\u4f7f\u7528\u8be5hash func\u9020\u6210pole extractor\u662f\u7528\u65f6\u7adf\u7136\u8d85\u8fc71000ms,\u800c\u4f7f\u7528\u4e0b\u9762\u7684hash-func\u5219\u4e3a15ms\n    auto xy_hash =\n        (std::hash&lt;int&gt;(rhs.x()) ^ (std::hash&lt;int&gt;(rhs.y()) &lt;&lt; 1)) &gt;&gt; 1;\n    return (xy_hash ^ (std::hash&lt;int&gt;(rhs.z()) &lt;&lt; 1)) &gt;&gt; 1;\n    /*or\n    const size_t kP1 = 73856093;\n    const size_t kP2 = 19349669;\n    const size_t kP3 = 83492791;\n    return vox.x * kP1 + vox.y * kP2 + vox.z * kP3;\n    ////or\n    return std::numeric_limits&lt;uint16_t&gt;::max() * rhs.x() + rhs.y() + rhs.z();\n    */\n  }\n};\n\n//struct as key\nstruct MyKey{\n  int id;\n  std::string name;\n  std::string uuid;\n  bool operator==(const MyKey&amp; rhs)const {\n    reutrn (id == rhs.id &amp;&amp; name == rhs.name &amp;&amp; uuid == rhs.uuid);\n  }\n};\nstruct MyKeyHash{\n  std::size_t operator()(const MyKey&amp; key)const {\n    return ((std::hash&lt;std::string&gt;()(key.name) ^ \n            (std::hash&lt;std::string&gt;()(key.uuid &lt;&lt; 1)))   &gt;&gt; 1) ^ \n          (std::hash&lt;int&gt;()(key.id)&lt;&lt;1);\n  }\n};\n//e.g\nstd::unordered_map&lt;MyKey, int, MyKeyHash&gt; var;\n</code></pre> \u4f7f\u7528\u65f6\u8d44\u6e90/\u6027\u80fd\u8003\u91cf</p> <p>\u5408\u7406\u9009\u62e9\u54c8\u5e0c\u51fd\u6570\uff1a\u54c8\u5e0c\u51fd\u6570\u7684\u8d28\u91cf\u76f4\u63a5\u5f71\u54cd\u5230 std::unordered_map \u7684\u6027\u80fd\u548c\u7a7a\u95f4\u5360\u7528\u3002\u9009\u62e9\u4e00\u4e2a\u5747\u5300\u5206\u5e03\u7684\u54c8\u5e0c\u51fd\u6570\u53ef\u4ee5\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81\uff0c\u63d0\u9ad8\u6027\u80fd\u3002C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u4f46\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u54c8\u5e0c\u51fd\u6570\u4ee5\u6ee1\u8db3\u7279\u5b9a\u9700\u6c42\u3002</p> <p>\u5408\u7406\u5206\u914d\u548c\u7ba1\u7406 <code>std::unordered_map</code> \u7684\u8d44\u6e90\u4ee5\u63d0\u9ad8\u6027\u80fd\u5e76\u63a7\u5236\u7a7a\u95f4\u5360\u7528\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a</p> <ul> <li> <p>\u9884\u4f30\u5143\u7d20\u6570\u91cf\uff1a\u9996\u5148\uff0c\u6839\u636e\u4f60\u7684\u5e94\u7528\u573a\u666f\u548c\u9700\u6c42\uff0c\u9884\u4f30\u5c06\u8981\u5b58\u50a8\u5728 <code>std::unordered_map</code> \u4e2d\u7684\u5143\u7d20\u6570\u91cf\u3002</p> </li> <li> <p>\u9009\u62e9\u6876\u7684\u6570\u91cf\uff1a<code>std::unordered_map</code> \u5185\u90e8\u4f7f\u7528\u6876\uff08buckets\uff09\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u6876\u7684\u6570\u91cf\u76f4\u63a5\u5f71\u54cd\u5230\u54c8\u5e0c\u8868\u7684\u6027\u80fd\u548c\u7a7a\u95f4\u5360\u7528\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9009\u62e9\u6876\u7684\u6570\u91cf\u4e3a\u5143\u7d20\u6570\u91cf\u7684 1.5 \u500d\u5de6\u53f3\u80fd\u591f\u63d0\u4f9b\u8f83\u597d\u7684\u6027\u80fd\u3002\u53ef\u4ee5\u4f7f\u7528 <code>reserve</code> \u51fd\u6570\u9884\u7559\u6876\u7684\u6570\u91cf\uff0c\u6216\u8005\u5728\u521b\u5efa\u5bb9\u5668\u65f6\u6307\u5b9a\u6876\u7684\u6570\u91cf\u3002 </p> </li> <li> <p>\u63a7\u5236\u8d1f\u8f7d\u56e0\u5b50\uff1a\u8d1f\u8f7d\u56e0\u5b50\uff08load factor\uff09\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5df2\u5b58\u50a8\u5143\u7d20\u7684\u6bd4\u4f8b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8d1f\u8f7d\u56e0\u5b50\u7684\u9608\u503c\u4e3a 1.0\uff0c\u5373\u5f53\u5143\u7d20\u6570\u91cf\u8fbe\u5230\u6876\u7684\u6570\u91cf\u65f6\u4f1a\u89e6\u53d1\u81ea\u52a8 rehash \u64cd\u4f5c\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 <code>max_load_factor</code> \u51fd\u6570\u8bbe\u7f6e\u8f83\u5c0f\u7684\u8d1f\u8f7d\u56e0\u5b50\u9608\u503c\uff0c\u4f8b\u5982 0.5\uff0c\u4ee5\u51cf\u5c11\u51b2\u7a81\u548c\u63d0\u9ad8\u6027\u80fd\u3002 </p> </li> <li> <p>\u9002\u5f53\u5206\u914d\u5185\u5b58\uff1a<code>std::unordered_map</code> \u5185\u90e8\u4f1a\u6839\u636e\u5143\u7d20\u6570\u91cf\u548c\u6876\u7684\u6570\u91cf\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002\u5f53\u9884\u4f30\u7684\u5143\u7d20\u6570\u91cf\u8f83\u5927\u65f6\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 <code>reserve</code> \u51fd\u6570\u9884\u5148\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ee5\u907f\u514d\u9891\u7e41\u7684\u5185\u5b58\u91cd\u65b0\u5206\u914d\u3002 </p> </li> <li> <p>\u9009\u62e9\u5408\u9002\u7684\u54c8\u5e0c\u51fd\u6570\uff1a<code>std::unordered_map</code> \u4f7f\u7528\u952e\u7684\u54c8\u5e0c\u503c\u6765\u51b3\u5b9a\u5143\u7d20\u5728\u6876\u4e2d\u7684\u4f4d\u7f6e\u3002\u9009\u62e9\u4e00\u4e2a\u826f\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u53ef\u4ee5\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81\uff0c\u63d0\u9ad8\u6027\u80fd\u3002C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u4f46\u5bf9\u4e8e\u7279\u5b9a\u7684\u952e\u7c7b\u578b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u54c8\u5e0c\u51fd\u6570\u4ee5\u6ee1\u8db3\u9700\u6c42\u3002 </p> </li> <li> <p>\u907f\u514d\u9891\u7e41\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff1a\u9891\u7e41\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4 <code>std::unordered_map</code> \u9891\u7e41\u5730\u8fdb\u884c rehash \u64cd\u4f5c\uff0c\u5f71\u54cd\u6027\u80fd\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5c3d\u91cf\u4e00\u6b21\u6027\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\uff0c\u4ee5\u51cf\u5c11\u8fd9\u79cd\u64cd\u4f5c\u7684\u6b21\u6570\u3002 </p> </li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#hash_map-vs-map","title":"hash_map vs map","text":"<p><code>std::map</code> \u548c <code>std::unordered_map</code> \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u4e24\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u548c\u7279\u70b9\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#stdmap","title":"std::map","text":"<ul> <li> <p>\u5e95\u5c42\u5b9e\u73b0\uff1a<code>std::map</code> \u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\uff08Red-Black Tree\uff09\u5b9e\u73b0\u7684\u6709\u5e8f\u5173\u8054\u5bb9\u5668\u3002\u5b83\u5c06\u952e\u503c\u5bf9\u5b58\u50a8\u4e3a\u6309\u952e\u6392\u5e8f\u7684\u4e00\u7cfb\u5217\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u952e\u548c\u4e00\u4e2a\u5173\u8054\u7684\u503c\u3002</p> </li> <li> <p>\u6392\u5e8f\u6027\uff1a<code>std::map</code> \u4e2d\u7684\u952e\u503c\u5bf9\u6309\u7167\u952e\u7684\u81ea\u7136\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002\u5728\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u5b83\u4f1a\u81ea\u52a8\u4fdd\u6301\u5143\u7d20\u7684\u6709\u5e8f\u6027\u3002</p> </li> <li> <p>\u67e5\u627e\u6548\u7387\uff1a\u67e5\u627e\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n)\uff0c\u5176\u4e2d n \u662f\u5143\u7d20\u7684\u6570\u91cf\u3002</p> </li> <li> <p>\u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u9700\u8981\u6309\u952e\u6392\u5e8f\u548c\u6709\u5e8f\u8bbf\u95ee\u7684\u573a\u666f\uff0c\u4f8b\u5982\u9700\u8981\u6309\u952e\u8303\u56f4\u904d\u5386\u5143\u7d20\u3001\u6309\u952e\u8fdb\u884c\u8303\u56f4\u67e5\u627e\u7b49\u3002 </p> </li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#stdunordered_map","title":"std::unordered_map","text":"<ul> <li>\u5e95\u5c42\u5b9e\u73b0\uff1a<code>std::unordered_map</code> \u662f\u57fa\u4e8e\u54c8\u5e0c\u8868\uff08Hash Table\uff09\u5b9e\u73b0\u7684\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\u3002\u5b83\u4f7f\u7528\u952e\u7684\u54c8\u5e0c\u503c\u5c06\u952e\u503c\u5bf9\u5b58\u50a8\u5230\u4e0d\u540c\u7684\u6876\uff08bucket\uff09\u4e2d\u3002</li> <li>\u65e0\u5e8f\u6027\uff1a<code>std::unordered_map</code> \u4e2d\u7684\u952e\u503c\u5bf9\u6ca1\u6709\u7279\u5b9a\u7684\u987a\u5e8f\uff0c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u4e0d\u4f1a\u6539\u53d8\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</li> <li>\u67e5\u627e\u6548\u7387\uff1a\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u67e5\u627e\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a O(n)\uff0c\u5176\u4e2d n \u662f\u6876\u7684\u6570\u91cf\u3002\u54c8\u5e0c\u8868\u7684\u6027\u80fd\u4e3b\u8981\u4f9d\u8d56\u4e8e\u54c8\u5e0c\u51fd\u6570\u7684\u8d28\u91cf\u548c\u6876\u7684\u6570\u91cf\u3002</li> <li>\u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u5feb\u901f\u67e5\u627e\u548c\u63d2\u5165\u5143\u7d20\u7684\u573a\u666f\uff0c\u4e0d\u5173\u5fc3\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u4f8b\u5982\u9700\u8981\u5feb\u901f\u67e5\u627e\u67d0\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\u3001\u9700\u8981\u9ad8\u6548\u5730\u63d2\u5165\u5927\u91cf\u5143\u7d20\u7b49\u3002</li> </ul> <p>\u4f7f\u7528\u573a\u666f\u7684\u9009\u62e9\u53d6\u51b3\u4e8e\u5177\u4f53\u9700\u6c42\uff1a</p> <ul> <li>\u5982\u679c\u4f60\u9700\u8981\u6309\u952e\u6392\u5e8f\u548c\u6709\u5e8f\u8bbf\u95ee\u5143\u7d20\uff0c\u6216\u8005\u9700\u8981\u6309\u8303\u56f4\u8fdb\u884c\u904d\u5386\u548c\u67e5\u627e\uff0c<code>std::map</code> \u662f\u4e00\u4e2a\u66f4\u5408\u9002\u7684\u9009\u62e9\u3002</li> <li>\u5982\u679c\u4f60\u66f4\u5173\u5fc3\u5feb\u901f\u7684\u63d2\u5165\u548c\u67e5\u627e\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u4fdd\u6301\u5143\u7d20\u7684\u6709\u5e8f\u6027\uff0c\u6216\u8005\u4f60\u6709\u4e00\u4e2a\u826f\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u5e76\u4e14\u9700\u8981\u9ad8\u6548\u5730\u63d2\u5165\u5927\u91cf\u5143\u7d20\uff0c\u90a3\u4e48 <code>std::unordered_map</code> \u662f\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>std::unordered_map</code> \u7684\u6027\u80fd\u4f18\u52bf\u5728\u4e8e\u5e73\u5747\u60c5\u51b5\u4e0b\u7684\u5feb\u901f\u67e5\u627e\u548c\u63d2\u5165\uff0c\u4f46\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u7279\u522b\u662f\u5f53\u54c8\u5e0c\u51b2\u7a81\u8f83\u591a\u65f6\uff0c\u6027\u80fd\u53ef\u80fd\u4f1a\u4e0b\u964d\u3002\u6b64\u5916\uff0c\u7531\u4e8e <code>std::unordered_map</code> \u662f\u65e0\u5e8f\u7684\uff0c\u4e0d\u9002\u5408\u4e8e\u9700\u8981\u6309\u952e\u7684\u7279\u5b9a\u987a\u5e8f\u8fdb\u884c\u8bbf\u95ee\u7684\u60c5\u51b5\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_11","title":"\u667a\u80fd\u6307\u9488","text":"<p><code>\u4e8e\u5934\u6587\u4ef6&lt;memory&gt;</code></p> <ul> <li><code>shared_ptr</code>\u5b9e\u73b0\u5171\u4eab\u62e5\u6709(shared ownership)\uff0c\u6807\u51c6\u5e93\u8fd8\u63d0\u4f9b\u4e86<code>weak_ptr\u00a0 bad_weak_ptr</code>\u548c<code>enable_shared_from_this</code>\u7b49\u8f85\u52a9\u7c7b; <code>shared_ptr</code>\u548c<code>weak_ptr</code>\u5185\u90e8\u9700\u989d\u5916\u7684\u8f85\u52a9\u5bf9\u8c61(\u5f15\u7528\u8ba1\u6570\u5668\u7b49)\uff0c\u56e0\u6b64\u65e0\u6cd5\u5b8c\u6210\u4e00\u4e9b\u4f18\u5316\u64cd\u4f5c</li> <li><code>unique_ptr</code>\u5b9e\u73b0\u72ec\u5360\u5f0f\u62e5\u6709(exclusive ownership/strict ownership); <code>unique_ptr</code>\u4e0d\u9700\u8981\u8fd9\u4e9b\u989d\u5916\u7684\u5f00\u9500(<code>unique_ptr</code>\u7279\u6b8a\u7684\u6784\u9020\u548c\u6790\u6784\u3001copy\u8bed\u4e49\u7684\u6d88\u9664)\uff0c<code>unique_ptr</code>\u6d88\u8017\u7684\u5185\u5b58\u548cnative pointer\u76f8\u540c\uff0c\u8fd8\u53ef\u4f7f\u7528function object(\u5305\u62eclambda)\u4f5c\u4e3adeleter\u8fbe\u6210\u6700\u4f73\u4f18\u5316\uff0c\u751a\u81f3\u96f6\u5f00\u9500\u3002</li> <li>smart pointer\u5e76\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u867d\u7136\u5b83\u6709\u9002\u7528\u67d0\u4e9b\u4fdd\u8bc1\u3002</li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#share_ptr","title":"share_ptr","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#_12","title":"\u6f5c\u5728\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898","text":"<p>\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u76f8\u4e92\u6307\u5411\u5c06\u4f1a\u5f15\u8d77\u5faa\u73af\u5f15\u7528,\u4f7f\u5f97\u5f15\u7528\u8ba1\u6570\u5931\u6548\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f</p> <pre><code>class B;\nclass A{\n  public:\n   std::shared_ptr&lt;B&gt; b_ptr;\n   ~A(){ std::cout&lt;&lt;\"A is delete!\"&lt;&lt;std::endl; }\n};\nclass B{\n  public:\n   std::shared_ptr&lt;A&gt; a_ptr;\n   ~B(){ std::cout&lt;&lt;\"B is delete!\"&lt;&lt;std::endl; }\n};\nint main(){\n  {\n    std::shared_ptr&lt;A&gt; ap(new A);\n    std::shared_ptr&lt;B&gt; bp(new B);\n    ap-&gt;b_ptr = bp;\n    bp-&gt;a_ptr = ap;//ap / bp\u5f15\u7528\u8ba1\u6570\u90fd\u4e3a2\n  }//\u9000\u51fa\u4f5c\u7528\u57df, ap/bp\u5f15\u7528\u8ba1\u6570\u90fd\u4e3a1\uff0c\u5e76\u6ca1\u6709\u51cf\u4e3a0\n  std::cout&lt;&lt;\"main leave\"&lt;&lt;std::endl;//\u5faa\u73af\u5f15\u7528\u5bfc\u81f4ap/bp\u9000\u51fa\u4f5c\u7528\u57df\u90fd\u6ca1\u6709\u6790\u6784\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#shared_ptr","title":"<code>shared_ptr</code>\u57fa\u672c\u4f7f\u7528","text":"<pre><code>//1. \u76f4\u63a5\u521d\u59cb\u5316\nshared_ptr&lt;string&gt; test(new string(\"nico\"));\nshared_ptr&lt;string&gt; test{new string(\"nico\")};\n\n//2. \u4f7f\u7528\u4fbf\u6377\u51fd\u6570make_shared(),\u5feb\u3001\u5b89\u5168\u3001\u4f7f\u7528\u4e00\u6b21\u5206\u914d\nshared_ptr&lt;string&gt; test = make_shared&lt;string&gt;(\"nico\");\n\n//3. \u5148\u58f0\u660e,\u7136\u540e\u8d4b\u503c(\u9700\u4f7f\u7528reset(),\u4e0d\u80fd\u4f7f\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26)\nshared_ptr&lt;string&gt; test;\ntest = new string(\"nico\");     //Error\ntest.reset(new string(\"nico\"));//OK\n\n//\u9519\u8bef\u4f7f\u7528\nint* p = new int;\nstd::shared_ptr&lt;int&gt; sp1(p);\nstd::shared_ptr&lt;int&gt; sp2(p); //Error:two shared pointers manage allocated int\n//\u6b63\u786e\u4f7f\u7528\nstd::shared_ptr&lt;int&gt; sp1(new int);\nstd::shared_ptr&lt;int&gt; sp2(sp1);\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#shared_ptrunique_ptr","title":"<code>shared_ptr</code>\u4e0e\u88f8\u6307\u9488\u6216unique_ptr\u5bf9\u6bd4","text":"<ul> <li>shared_ptr\u9700\u8981\u7ef4\u62a4ref_count\uff0c\u6240\u4ee5pass by value\u7684\u65f6\u5019\u6bd4\u88f8\u6307\u9488\u91cd\u4e0d\u5c11</li> <li>\u4f7f\u7528shared_ptr\u7684\u65f6\u5019\u5f88\u5bb9\u6613\u4ea7\u751f\u5b9e\u8d28\u7684pass by value\u800c\u4e0d\u81ea\u77e5</li> <li>sizeof(shared_ptr) == 16\uff0c\u800csizeof(unique_ptr) == 8</li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#thread-safe","title":"\u7ebf\u7a0b\u5b89\u5168(Thread-Safe)","text":"<p>shared pointer\u5e76\u975e\u7ebf\u7a0b\u5b89\u5168\uff0c\u901a\u5e38\u4e3a\u907f\u514ddata race\u987b\u4f7f\u7528\u5982mutex\u6216lock\u7b49\u3002\u4f46\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u5bf9\u8c61\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u8bfb\u53d6\u5176\u4f7f\u7528\u6b21\u6570\u5e76\u4e0d\u4f1a\u9020\u6210data race,\u867d\u7136\u53ef\u80fd\u8bfb\u5230\u7684\u503c\u4e0d\u662f\u6700\u65b0\u7684\u3002</p> <p>\u6307\u5b9a<code>deleter</code>: shared_ptr\u63d0\u4f9b\u7684default deleter\u8c03\u7528\u7684\u662fdelete,\u4e0d\u662fdeleter[]\u3002\u56e0\u6b64\u53ea\u6709\u5f53shared pointer\u62e5\u6709\u201c\u7531new\u5efa\u7acb\u7684\u5355\u4e00\u5bf9\u8c61\u201d\uff0cdefault deleter\u624d\u9002\u7528</p> <pre><code>std::shared_ptr&lt;int&gt; p(new int[10]); //Error,but compiles\nstd::shared_ptr&lt;int&gt; p(new int[10],  //new[]\u4e00\u4e2aarray of object\u987b\u5b9a\u4e49deleter\n                       [](int* p) {\n                         delete[] p;\n                       });\n//\u4f7f\u7528\u4e3aunique_ptr\u63d0\u4f9b\u7684\u8f85\u52a9\u51fd\u6570\u4f5c\u4e3adeleter(\u5185\u90e8\u8c03\u7528\u4e86delete[])\nstd::shared_ptr&lt;int&gt; p(new int[10],\n                       std::default_delete&lt;int[]&gt;());\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_13","title":"\u5904\u7406\u5171\u4eab\u5185\u5b58","text":"<pre><code>#include &lt;memory&gt;     //for shared_ptr\n#include &lt;sys/mman.h&gt; //for shared memory\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;cstring&gt;    //for strerror()\n#include &lt;cerrno&gt;     //for errno\n#include &lt;string&gt;\n#include &lt;iostream&gt;\n/**\n *@brief \u5378\u9664(detach) shared memory \n */\nclass SharedMemoryDetacher {\n public:\n  void operator() (int* p) {\n    std::cout&lt;&lt;\"unlink /tmp1234\"&lt;&lt;std::endl;\n    if (shm_unlink(\"/tmp1234\") != 0) {\n      std::cerr&lt;&lt;\"OOPS: shm_unlink() failed\"&lt;&lt;std::endl;\n    }\n  }\n};\n/**\n * @brief \u53d6\u5f97\u5e76\u9644\u7740(attach) shared memory\n */\nstd::shared_ptr&lt;int&gt; getSharedIntMemory (int num) {\n  void* mem;\n  int shmfd = shm_open(\"/tmp1234\", O_CREAT|O_RDWR, S_IRWXU|S_IRWXG);\n  if (shmfd &lt; 0) {\n    throw std::string(strerror(errno));\n  }\n\n  if (ftruncate(shmfd, num*sizeof(int)) == -1) {\n    throw std::string(strerror(errno));\n  }\n  mem = mmap(nullptr, num*sizeof(int), PROT_READ|PROT_WRITE, MAP_SHARED, shmfd, 0);\n  if (mem == MAP_FAILED) {\n    throw std::string(strerror(errno));\n  }\n\n  //SharedMemoryDetacher\u5c06\u5728\u6700\u540e\u4e00\u6b21\u88ab\u4f7f\u7528\u65f6\u8c03\u7528\n//   return std::shared_ptr&lt;int&gt;(static_cast&lt;int*&gt;(mem), SharedMemoryDetacher());\n  //\u4f7f\u7528lambda\n  return std::shared_ptr&lt;int&gt;(static_cast&lt;int*&gt;(mem),\n                              [](int* p){\n                                std::cout&lt;&lt;\"unlink /tmp1234 \"&lt;&lt;std::endl;\n                                if (shm_unlink(\"/tmp1234\") != 0) {\n                                  std::cerr&lt;&lt;\"OOPS: shm_unlink() failed\"&lt;&lt;std::endl;\n                                }\n                              });\n}\nint main() {\n  //get and attach shared memory for 100 ints\n  std::shared_ptr&lt;int&gt; smp(getSharedIntMemory(100));\n\n  //init the shared memory\n  for (int i = 0; i &lt; 100; ++i) {\n    smp.get()[i] = i*42;//\u901a\u8fc7get()\u83b7\u5f97\u88abshared_ptr\u5305\u88f9(wrapped)\u7684\u5185\u90e8\u6307\u9488\n  }\n\n  //deal with shared memory somewhere else\n\n  std::cout&lt;&lt;\"&lt;return&gt;\"&lt;&lt;std::endl;\n  std::cin.get();\n\n  //release shared memory here:\n  smp.reset();\n  return 0;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#weak_ptr","title":"weak_ptr","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#_14","title":"\u63cf\u8ff0\u53ca\u793a\u4f8b","text":"<p>weak_ptr\u7684\u6548\u7387\u5e76\u4e0d\u9ad8\uff0c\u5b9e\u9645\u4e0a\u53ef\u80fd\u6bd4\u76f4\u63a5\u7528shared_ptr\u8fd8\u8d39\u52b2\u4e00\u4e9b\u3002\u56e0\u4e3a\u6bcf\u6b21\u4f7f\u7528\u90fd\u9700\u8981\u91cd\u65b0\u6784\u9020\u51fa\u4e00\u4e2ashared_ptr\uff08\u8fd9\u91cc\u8fd8\u989d\u5916\u5f15\u5165\u4e86\u4e00\u6b21shared_ptr\u7684\u6790\u6784\uff09\u3002\u4e0d\u5982\u76f4\u63a5\u7528const raw_pointer -- from lulu.</p> <p>\u4e0b\u97622\u79cd\u60c5\u51b5shared_ptr\u5c06\u4f1a\u9047\u5230\u95ee\u9898</p> <ul> <li>cyclic reference(\u73af\u5f0f\u6307\u5411)\u3002\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u4f7f\u7528shared_ptr\u4e92\u76f8\u53ea\u60f3\u5bf9\u65b9\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u7684use_count()\u90fd\u4e3a1\uff0c\u53cd\u800c\u90fd\u65e0\u6cd5\u91ca\u653e\u3002</li> <li>\u5728\u4f60\u201c\u660e\u786e\u7684\u53ea\u662f\u60f3\u5171\u4eab\u4f46\u4e0d\u613f\u62e5\u6709\u201d\u67d0\u5bf9\u8c61\u7684\u60c5\u51b5\u4e0b\u3002\u4f60\u8981\u7684\u8bed\u4e49\u662f\uff1areference\u7684\u5bff\u547d\u6bd4\u5176\u6240\u6307\u5bf9\u8c61\u7684\u5bff\u547d\u66f4\u957f\u3002</li> </ul> <p>\u800c<code>weak_ptr</code>\u7684\u4f5c\u7528\u5c31\u662f\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002</p> <ul> <li>class wake_ptr\u5141\u8bb8\u4f60\u201c\u5171\u4eab\u4f46\u4e0d\u62e5\u6709\u201d\u5bf9\u8c61(use_count()\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u88abshared_ptr\u62e5\u6709\u7684\u6b21\u6570)\uff0c\u5373\u5728\u6700\u540e\u4e00\u4e2a\u62e5\u6709\u8be5\u5bf9\u8c61\u7684shared_ptr\u5931\u53bb\u62e5\u6709\u6743\u540e\uff0cweak_ptr\u4f1a\u81ea\u52a8\u6210\u7a7a(empty)\uff0cclass weak_ptr\u53ea\u63d0\u4f9b\u201c\u63a5\u53d7\u4e00\u4e2ashared_ptr\u201d\u7684\u6784\u9020\u51fd\u6570\u3002</li> <li>\u4e0d\u80fd\u4f7f\u7528\u64cd\u4f5c\u7b26*\u548c-&gt;\u8bbf\u95eeweak_ptr\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u5fc5\u987b\u53e6\u5916\u5efa\u7acb\u4e00\u4e2ashared_ptr,(weak_ptr\u53ea\u80fd\u7528\u6765\u521b\u5efa\u3001\u590d\u5236\u3001\u8d4b\u503cweak pointer\uff0c\u4ee5\u53ca\u8f6c\u6362\u4e3a\u4e00\u4e2ashared pointer\u6216\u68c0\u67e5\u81ea\u5df1\u662f\u5426\u6307\u5411\u67d0\u5bf9\u8c61)\u57fa\u4e8e\u4e0b\u97622\u4e2a\u7406\u7531</li> <li>\u5728wak pointer\u4e4b\u5916\u5efa\u7acb\u4e00\u4e2ashared pointer\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76f8\u5e94\u7684\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38\u6216\u3002\u3002\u3002</li> <li>\u5f53\u6307\u5411\u7684\u5bf9\u8c61\u6b63\u88ab\u5904\u7406\u65f6\uff0cshared pointer\u65e0\u6cd5\u88ab\u91ca\u653e</li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;memory&gt;\n\nclass Person {\n public:\n  std::string name;\n  std::shared_ptr&lt;Person&gt; mother;\n  std::shared_ptr&lt;Person&gt; father;\n//   std::vector&lt;std::shared_ptr&lt;Person&gt;&gt; kids; //\u51fa\u95ee\u9898\uff0c\u6bcf\u4e2aPerson\u7684\u6790\u6784\u4e0d\u4f1a\u88ab\u8c03\u7528\n  std::vector&lt;std::weak_ptr&lt;Person&gt;&gt; kids;//parent\u5230kids\u4e3aweak_ptr, kids\u5230parent\u4e3ashared_ptr\n\n  Person(const std::string&amp; n,\n         std::shared_ptr&lt;Person&gt; m = nullptr,\n         std::shared_ptr&lt;Person&gt; f = nullptr)\n      : name(n), mother(m), father(f) {\n  }\n  ~Person() {\n    std::cout&lt;&lt;\"delete \"&lt;&lt;name&lt;&lt;std::endl;\n  }\n};\nstd::shared_ptr&lt;Person&gt; initFamily(const std::string&amp; name) {\n  std::shared_ptr&lt;Person&gt; mom(new Person(name+\"'s mom\"));\n  std::shared_ptr&lt;Person&gt; dad(new Person(name+\"'s dad\"));\n  std::shared_ptr&lt;Person&gt; kid(new Person(name, mom, dad));\n\n  mom-&gt;kids.push_back(kid);\n  dad-&gt;kids.push_back(kid); \n  return kid;\n}\n\nint main() {\n  std::shared_ptr&lt;Person&gt; p = initFamily(\"nico\");\n//   p-&gt;mother-&gt;kids[0]-&gt;name;       //Error\uff0cweak_ptr\u4e0d\u80fd\u4f7f\u7528\u64cd\u4f5c\u7b26*\u548c-&gt;\n  if(!p-&gt;mother-&gt;kids[0].expired()){\n    p-&gt;mother-&gt;kids[0].lock()-&gt;name;//\u6b63\u786e\uff0c\u901a\u8fc7lock()\u83b7\u5f97shared_ptr\n  }\n  std::cout&lt;&lt;\"nico's family exists\"&lt;&lt;std::endl;\n  std::cout&lt;&lt;\"- nico is shared \"&lt;&lt;p.use_count()&lt;&lt;\" times\"&lt;&lt;std::endl;\n  std::cout&lt;&lt;\"- name of 1st kid of nico's mom:\"&lt;&lt;p-&gt;mother-&gt;kids[0]-&gt;name&lt;&lt;std::endl;\n\n  p = initFamily(\"jim\");\n  std::cout&lt;&lt;\"jim's family exists\"&lt;&lt;std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#this","title":"\u8fd4\u56dethis\u6307\u9488","text":"<p><code>std::enable_shared_from_this\u7c7b\u91cc\u9762\u6709\u4e00\u4e2aweak_ptr\u7528\u6765\u89c2\u5bdfthis\u667a\u80fd\u6307\u9488, \u5f53shared_from_shis()\u88ab\u8c03\u7528\u65f6\u4f1a\u8c03\u7528weak_ptr\u7684lock()\u65b9\u6cd5\u5c06\u6240\u89c2\u5bdf\u7684shared_ptr\u8fd4\u56de</code></p> <ul> <li>\u9519\u8bef\u505a\u6cd5(\u4e0d\u8981\u5c06this\u6307\u9488\u4f5c\u4e3ashared_ptr\u8fd4\u56de\u51fa\u6765\uff0c\u56e0\u4e3athis\u6307\u9488\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u88f8\u6307\u9488\u3002\u56e0\u6b64\uff0c\u8fd4\u56dethis\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u590d\u6790\u6784)</li> </ul> <pre><code>class A{\n  public:\n   A()=default;\n   ~A(){ std::cout&lt;&lt;\"Destructor A\"&lt;&lt;std::endl; }\n   std::shared_ptr&lt;A&gt; GetSelf(){ return std::shared_ptr&lt;A&gt;(this); } //error\n};\nint main() {\n    std::shared_ptr&lt;A&gt; sp1(new A);\n\n    //sp1\u548csp2\u6ca1\u6709\u5173\u7cfb,\u662f\u72ec\u7acb\u7684,\u5c06\u4f1a\u6267\u884c\u4e24\u6b21\u6790\u6784\u5e76\u5bfc\u81f4\u9519\u8bef\n    std::shared_ptr&lt;A&gt; sp2 = sp1-&gt;GetSelf(); \n    return 0;\n}\n</code></pre> <ul> <li>\u6b63\u786e\u505a\u6cd5(std::enable_shared_from_this)</li> </ul> <pre><code>class A : public std::enable_shared_from_this&lt;A&gt; {\n public:\n  shared_ptr&lt;A&gt; GetSelf() {\n    return shared_from_this();  //\u5185\u90e8\u7684weak_ptr\u5c06\u89c2\u5bdf\u7684shared_ptr\u8fd4\u56de\n  }\n  ~A() { cout &lt;&lt; \"Destructor A\" &lt;&lt; endl; }\n};\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_15","title":"\u5e38\u89c1\u7528\u6cd5","text":"<ul> <li>weak_ptr\u5728\u4f7f\u7528\u524d\u9700\u8981\u68c0\u67e5\u5408\u6cd5\u6027,<code>expired()</code>\u8fd4\u56de<code>false</code>\u65f6\u624d\u6709\u6548</li> <li>weak_ptr\u4e0d\u4f1a\u5f15\u8d77\u6240\u5171\u4eab\u7684shared_ptr\u7684\u5f15\u7528\u8ba1\u6570\u7684\u53d8\u5316</li> </ul> <pre><code>use_count() //\u83b7\u53d6\u5f53\u524d\u89c2\u5bdf\u8d44\u6e90\u7684\u5f15\u7528\u8ba1\u6570\nexpired()   //\u5224\u65ad\u6240\u89c2\u5bdf\u8d44\u6e90\u662f\u5426\u5df2\u7ecf\u91ca\u653e\n\n//expired()=false\u65f6\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5171\u4eab\u5bf9\u8c61\u7684shared_ptr,false\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7ashared_ptr\nlock() \n</code></pre> <pre><code>std::weak_ptr&lt;int&gt; wp;\n{\n  std::shared_ptr&lt;int&gt; sp(new int(1)); //sp.use_count() == 1\n  wp = sp; // wp\u4e0d\u4f1a\u5f15\u8d77sp\u7684\u5f15\u7528\u8ba1\u6570\u7684\u53d8\u5316, sp.use_count() \u8fd8\u662f 1\n  std::shared_ptr&lt;int&gt; sp_2 = wp.lock(); \n}//sp\u548csp_2\u7531\u4e8e\u79bb\u5f00\u4f5c\u7528\u57df,\u6545\u800c\u5176\u5bb9\u7eb3\u7684\u5bf9\u8c61\u5df2\u7ecf\u88ab\u91ca\u653e, \u6b64\u523bwp\u89c2\u5bdf\u7684\u5bf9\u8c61\u4e3a\u7a7a\n\n//sp_null.use_count() == 0, sp_null\u4e3a\u7a7a,\u5728\u4f7f\u7528\u524d\u9700\u8981\u4f7f\u7528expired()\u5224\u65ad\u4e00\u4e0b\nstd::shared_ptr&lt;int&gt; sp_null = wp.lock(); \nstd::shared_ptr&lt;int&gt; sp_ok;\nif(wp.expired()){\n  std::cout&lt;&lt;\"Observed shared_ptr object is destoried!\"&lt;&lt;std::endl;\n}else{\n  sp_ok = wp.lock();\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#unique_ptr","title":"unique_ptr","text":"<p>C++11\u8d77\u5f00\u59cb\u63d0\u4f9b\uff0c\u662f\u4e00\u79cd\u5728\u5f02\u5e38\u53d1\u751f\u65f6\u53ef\u5e2e\u52a9\u907f\u514d\u8d44\u6e90\u6cc4\u9732\u7684smart pointer, \u786e\u4fdd\u4e00\u4e2a\u5bf9\u8c61\u548c\u5176\u76f8\u5e94\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u88ab\u4e00\u4e2apointer\u62e5\u6709\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_16","title":"\u4f7f\u7528\u666e\u901a\u6307\u9488","text":"<p>\u56e0\u4e3a\u663e\u793a\u83b7\u5f97\u8d44\u6e90\uff0c\u4e0d\u4e0e\u4efb\u4f55\u5bf9\u8c61\u6346\u7ed1\uff0c\u6240\u4ee5\u5fc5\u987b\u88ab\u660e\u786e\u91ca\u653e\u3002\u4f46\u7a0b\u5e8f\u82e5\u5728delete\u524d\u53d1\u751f\u5f02\u5e38\u5c06\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f(\u8d44\u6e90\u6cc4\u6f0f),\u800c\u4f7f\u7528unique_ptr\u5219\u4e0d\u8bba\u7a0b\u5e8f\u6b63\u5e38\u6216\u5f02\u5e38\u7ed3\u675f\u90fd\u80fd\u591f\u5b9e\u73b0\u81ea\u52a8\u9500\u6bc1\u3002</p> <pre><code>/**\n*@brief \u4ee5new\u548cdelete\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\n*/\nvoid f() {\n  ClassA* ptr = new ClassA; //create an object explicitly\n  ...          //perform some operations\n  delete ptr;  //clean up(destory the object explicitly)\n}\n\n//\u4e3a\u907f\u514d\u8d44\u6e90\u6cc4\u9732\nvoid f() {\n  ClassA* ptr = new ClassA; //create an object explicitly\n  try {\n    ... //perform some operations\n  }\n  catch(...) {\n    delete ptr;  //clean up\n    throw;       //throw the exception\n  }\n  delete ptr;    //clean up normal\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#unique_ptr_1","title":"\u4f7f\u7528unique_ptr","text":"<p>\u4f7f\u7528*\u63d0\u9886(dereference)\u6307\u5411\u5bf9\u8c61\uff0c\u64cd\u4f5c\u7b26-&gt;\u7528\u6765\u8bbf\u95ee\u6210\u5458</p> <p><pre><code>//\u521d\u59cb\u5316\nstd::unique_ptr&lt;int&gt; ptr = new int; //Error\nstd::unique_ptr&lt;int&gt; ptr1(new int);  //OK\nstd::unique_ptr&lt;int&gt; ptr2(ptr1);//Error, unique_ptr\u4e0d\u652f\u6301copy\u6784\u9020\u548cassignment\nstd::unique_ptr&lt;int&gt; ptr3(std::move(ptr1));//Ok,ptr1\u5c06\u62e5\u6709\u6743\u79fb\u4ea4\u7ed9ptr3\n\nstd::unique_ptr&lt;int&gt; ptr4;\nptr4 = ptr1;           //Error,no possible\nptr4 = std::move(ptr1);//ok,\u4e0d\u80fd\u5171\u4eab\uff0c\u4f46\u53ef\u4ee5\u8f6c\u79fb\u62e5\u6709\u6743\n\n//\u6ca1\u6709\u4efb\u4f552\u4e2aunique_ptr\u4ee5\u540c\u4e00\u4e2apointer\u4f5c\u4e3a\u521d\u503c\nstd::string* sp = new std::string(\"hello\");\nstd:unique_ptr&lt;std::string&gt; up1(sp);\nstd:unique_ptr&lt;std::string&gt; up2(sp); //Error:up1 and up2 own same data\n\nstd::unique_ptr&lt;int&gt; ptr; //\u4e0d\u62e5\u6709,\u5373ptr == nullptr\u548cptr.reset()\u540c\u6837\u7f6e\u7a7a\nptr.reset(new int);\n\n//\u8c03\u7528release()\nstd::unique_ptr&lt;std::string&gt; up(new std::string(\"nico\"));\n...\n//`sp` own \"nico\" now, `up` lose ownership and `up` only own nullptr\nstd::string* sp = up.release();//\u91ca\u653e\u6240\u6709\u6743\nif (up) { ... }                   \nif (up != nullptr) { ... }       \nif (up.get() != nullptr) { ... }//`get`\u8fd4\u56de\u7ba1\u7406\u7684\u539f\u59cb\u6307\u9488\uff0c\u4f46\u5e76\u4e0d\u91ca\u653e\u6240\u6709\u6743\n</code></pre> from book\u300aC++\u6807\u51c6\u5e93\u300b\u7b2c5\u7ae0</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#function","title":"function","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#lambda","title":"lambda","text":"<pre><code>const auto local_infos=[]{};\nstatic LoaclInfos info = local_infos();\nauto greet = []() { std::cout &lt;&lt; \"Hello, World!\\n\"; };\n\n//\u5e26\u53c2\u6570\u548c\u8fd4\u56de\u503c\nauto add = [](int a, int b) -&gt; int { return a + b; };\n\n//\u5e26\u53c2\u6570\u548c\u8fd4\u56de\u503c, \u4e14\u6355\u83b7\u5916\u90e8\u53d8\u91cf,\u5982\u6355\u83b7`factor`\nint factor = 2;\nauto multiply = [factor](int a) -&gt; int { return a * factor; };\n\n//\u6355\u83b7\u65b9\u5f0f\nint x = 10;\nint y = 20;\nauto byValue = [x, y]() { ... };//\u6309\u503c\u6355\u83b7,\u4e0d\u5f71\u54cd x,y\nauto byValue = [=]() { ... };//\u6309\u503c\u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\n\nauto byRef = [&amp;x, &amp;y]() { ,,, };//\u6309\u5f15\u7528\u6355\u83b7\nauto byRef = [&amp;]() { ,,, };//\u6309\u5f15\u7528\u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\n\n//\u6cdb\u578blambda\u8868\u8fbe\u5f0f\uff08C++14 \u53ca\u66f4\u9ad8\u7248\u672c\uff09,\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u7684\u53c2\u6570\nauto add = [](auto a, auto b) { return a + b; };\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_17","title":"\u51fd\u6570\u8fd4\u56de","text":"<p>Two Names: It's a Copy</p> <p>One Name: It's a Move</p> <p>Zero Names: It's a Temporary</p> <pre><code>std::vector&lt;int&gt; GetSomeInts() {\n  std::vector&lt;int&gt; ret = {1, 2, 3, 4};\n  return ret;\n}\n\n// Just a move: either \"ret\" or \"foo\" has the data, but never both at once.\nstd::vector&lt;int&gt; foo = GetSomeInts();\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_18","title":"\u53ef\u88ab\u8c03\u7528\u5bf9\u8c61","text":"<p>Callable Object(\u53ef\u8c03\u7528\u5bf9\u8c61):\u53ef\u88ab\u67d0\u79cd\u65b9\u5f0f\u8c03\u7528\u67d0\u4e9b\u51fd\u6570\u7684\u5bf9\u8c61</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_19","title":"\u7c7b\u578b\u53ca\u793a\u4f8b","text":"<ul> <li>\u4e00\u4e2a\u51fd\u6570\uff0c\u63a5\u53d7\u989d\u5916\u4f20\u5165\u7684args\u4f5c\u4e3a\u53c2\u6570(argument)</li> <li>\u4e00\u4e2alambda(\u672c\u8d28\u4e3a\u51fd\u6570\u5bf9\u8c61)</li> <li>\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61(function object,\u62e5\u6709operator()),\u9644\u5e26\u7684args\u88ab\u4f20\u9012\u4f5c\u4e3a\u5b9e\u53c2</li> <li>\u4e00\u4e2a\u6307\u5411\u6210\u5458\u51fd\u6570\u7684\u6307\u9488\uff0c\u5f53\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u65f6\u8be5\u5bf9\u8c61\u88ab\u4f20\u9012\u4e3a\u7b2c\u4e00\u5b9e\u53c2(\u5fc5\u987b\u4e3areference\u6216pointer)\uff0c\u5176\u4ed6\u5b9e\u53c2\u5bf9\u5e94\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570</li> </ul> <pre><code>//\u666e\u901a\u51fd\u6570\nvoid func(int x, int y);\n//lambda\nauto lam = [](int x, int y) {\n  ...\n};\n\nclass C {\n public:\n  void memfunc(int x, int y) const; //\u6210\u5458\u51fd\u6570\n  void operator() (int x, int y) const; //\u51fd\u6570\u5bf9\u8c61\n};\n\nint main() {\n  C c_obj;\n  std::shared_ptr&lt;C&gt; sp(new C);\n\n  //bind() `#include &lt;functional&gt;`use callable objects to bind arguments \n  std::bind(func, 77, 33)(); //\u666e\u901a\u51fd\u6570 \n  std::bind(lam, 77, 33)();  //lambda \n  std::bind(C(),77, 33)();     //C::operator()(77,33) \n  std::bind(&amp;C::memfunc, c_obj, 77,33)();//c_obj.operator()(77, 33)\n  std::bind(&amp;C::memfunc, sp, 77,33)(); \n  std::bind(&amp;C::memfunc, sp,77,33)(); //sp-&gt;memfunc(77,33)\n\n  //async,`#include &lt;future&gt;`\u5f02\u6b65\u8c03\u7528\n  std::async(func, 77, 33);\n  std::async(lam, 77, 33);\n  std::async(c_obj, 77, 33);//c_obj.operator()(77, 33)\n  std::async(&amp;C::memfunc, &amp;c_obj, 77, 33);//c_obj.memfunc(77,33)\n  std::async(&amp;C::memfunc, sp, 77, 33);//sp-&gt;memfunc(77,33)\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#binder","title":"\u7ed1\u5b9a\u5668(binder)","text":"<p>bind()\u7528\u6765\u5c06\u53c2\u6570\u7ed1\u5b9a\u4e8e\u53ef\u8c03\u7528\u5bf9\u8c61(call object)<code>&lt;br&gt;</code></p> <p>\u5305\u62ec2\u7c7b: </p> <ol> <li>\u88ab\u4f20\u5165\u7684\u5b9e\u53c2\uff0c\u5229\u7528\u9884\u5b9a\u4e49\u5360\u4f4d\u7b26_1\u3001_2\u3001...,\u5b9a\u4e49\u4e8estd::placeholders  </li> <li>\u660e\u767d\u6307\u51fa\u7684\u5b9e\u53c2\uff0c\u5199\u51fa\u5176\u540d\u79f0</li> </ol> <pre><code>using namespace std::placeholders;\n//\u95f4\u63a5\u8c03\u7528:\u8ba1\u7b97\u67d0\u4f20\u5165\u7684\u53c2\u6570\u548c\u6570\u5b5710\u4e4b\u548c\nauto test = std::bind(std::plus`&lt;int&gt;`(),\n                      std::placeholders::_1,\n                      10);\ntest(55);//\u8c03\u7528bind\u7684\u51fd\u6570\uff0c\u8ba1\u7b9755+10 \n\n//\u76f4\u63a5\u8c03\u7528:\u8ba1\u7b97\u67d0\u4f20\u5165\u7684\u53c2\u6570\u548c\u6570\u5b5710\u4e4b\u548c\n//\u8c03\u7528bind\u7684\u51fd\u6570,\u4f20\u5165\u53c2\u657032,\u8ba1\u7b97total= 32+10\nint total = std::bind(std::plus`&lt;int&gt;`(), _1, 10)(32);\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#functypewrapper","title":"\u5916\u8986\u5668(FuncTypeWrapper)","text":"<p>std::function&lt;&gt;<code>\u4e8e&lt;functional&gt;</code></p> <pre><code>/**\n* normal func\n*/\nvoid func(int x, int y);\n\n//initialize collections of tasks\nstd::vector&lt;std::function&lt;void(int, int)&gt;&gt; tasks;\ntasks.push_back(func);\ntasks.push_back([](int x, int y) {\n                  ....\n                });\n\n//call each task\nfor(std::function&lt;void(int, int)&gt; f : tasks) {\n  f(33, 66);\n}\n\n/**\n* class member function\n*/ \nclass C {\n public: \n  void memfunc(int x, inty) const;\n};\n\nstd::function&lt;void(const C&amp;, int, int)&gt; mf;\nmf =  &amp;C::memfunc;\nmf(C(), 42, 77);\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#functionobject","title":"\u51fd\u6570\u5bf9\u8c61(FunctionObject)","text":"<p>function object\u5373functor(\u4eff\u51fd\u6570):\u5b9a\u4e49\u4e86operator()\u7684\u5bf9\u8c61</p> <pre><code>class FunctionObjectType {\n public:\n  void operator() () {\n      //...\n  }\n}\n\nFunctionObjectType fo; \nfo(...);//\u8c03\u7528\u51fd\u6570\u5bf9\u8c61\u7684operator(),\u800c\u975e\u8c03\u7528\u51fd\u6570fo()\n</code></pre> <p>\u51fd\u6570\u5bf9\u8c613\u5927\u4f18\u70b9</p> <ul> <li>\u6bd4\u4e00\u822c\u51fd\u6570\u66f4smart\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u62e5\u6709\u72b6\u6001</li> <li>\u6bcf\u4e2afunction object\u90fd\u6709\u5176\u7c7b\u578b</li> <li>function object\u901a\u5e38\u6bd4function pointer\u66f4\u5feb</li> </ul> <p>\u6848\u4f8b</p> <p>\u4ee5Function Object\u4e3a\u6392\u5e8f\u51c6\u5219</p> <pre><code>//fo/sort1.cpp\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;set&gt;\n#include &lt;algorithm&gt;\n\nclass Person {\n public:\n  std::string firstname() const;\n  std::string lastname()  const;\n  ...\n};\n\n//- operator() returns whether a person is less than another person\nclass PersonSortCriterion {\n public:\n  bool operator() (cosnt Person&amp; p1, const Person&amp; p2) const{\n      return p1.lastname() &lt; p2.lastname() ||\n             (p1.lastname() == p2.lastname() &amp;&amp;\n             p1.firstname() &lt; p2.firstname());\n  }\n};\nint main() {\n  //create a set with special soring criterion\n  //\u6392\u5e8f\u51c6\u5219PersonSortCriterion\u662f\u4e00\u4e2aclass,\u5176\u4ed6\u51fd\u6570\u5219\u4e0d\u4f1a\u8fd9\u4e48\u7b80\u6d01\n  std::set&lt;Person, PersonSortCriterion&gt; coll; \n}\n</code></pre> <p>for_each()\u53ef\u4ee5\u4f20\u56de\u5176function object,\u901a\u8fc7for_each()\u7684\u8fd4\u56de\u503c\u83b7\u53d6function_object\u7684\u72b6\u6001</p> <pre><code>// fo/foreach3.cpp\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\n//function object to process the mean value\nclass MeanValue {\n public:\n  MeanValue():num(0), sum(0){}\n  void operator() (int elem) {\n    ++num;\n    sum += elem;\n  }\n  double value() {\n    return static_cast&lt;double&gt;(sum)/static_cast&lt;double&gt;(num);\n  }\n private:\n  long num; //number of elements\n  long sum; //sum of all element values\n};\n\nint main(){\n  std::vector&lt;int&gt; coll = {1,2,3,4,5,6,7,8};\n  //- process and print mean value\n  //for_each\u8fd4\u56de\u7684\u51fd\u6570\u5bf9\u8c61\u88ab\u8d4b\u503c\u7ed9mv\n  MeanValue mv = for_each(coll.begin(), coll.end(),//range \n                          MeanValue());//operation,\u8fd4\u56de\u7684\n  std::cout&lt;&lt;\"mean value:\"&lt;&lt;mv.value()&lt;&lt;std::endl;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_20","title":"\u7c7b\u548c\u5bf9\u8c61","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#_21","title":"\u6784\u9020\u51fd\u6570","text":"<p>\u6784\u9020\u51fd\u6570\u8c03\u7528\u987a\u5e8f\u4ece\u57fa\u7c7b\u5230\u6d3e\u751f\u7c7b</p> <p>\u6784\u9020\u4ee3\u7801\u590d\u7528</p> <p>\u59d4\u6258\u6784\u9020\u51fd\u6570(delegating constructor) \u4e0e \u590d\u7528\u7236\u7c7b\u7684\u6784\u9020</p> <pre><code>class C {\n public:\n  C(int x, string s) { \u2026 }\n  explicit C(int x) : C(x, \"\") {}   //\u59d4\u6258\u6784\u9020\u51fd\u6570\n  explicit C(string s) : C(0, s) {} //\u59d4\u6258\u6784\u9020\u51fd\u6570\n  C() : C(0, \"\") {}\n};\n//\u5b50\u7c7b\u590d\u7528\u7236\u7c7b\u7684\u6784\u9020:\u524d\u63d0\u662f\u5b50\u7c7b\u672a\u6dfb\u52a0\u65b0\u7684\u6570\u636e\u6210\u5458\nclass D : public C{\n  public:\n   using C::C;         //inherit all constructors from C\n   void NewMethodOfD();\n};\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_22","title":"\u6790\u6784\u51fd\u6570","text":"<p>\u6790\u6784\u51fd\u6570\u8c03\u7528\u987a\u5e8f\u4ece\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b</p> <p>\u865a\u6790\u6784\u51fd\u6570: \u591a\u6001\u65f6\u4f7f\u7528,\u5373\u542b\u6709\u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u662f\u6790\u6784\u51fd\u6570\u9700\u4e3a\u865a\u6790\u6784\u51fd\u6570; \u865a\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u786e\u4fdd\u5728\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u5730\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570,\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u6216\u672a\u91ca\u653e\u6d3e\u751f\u7c7b\u7279\u5b9a\u8d44\u6e90\u7684\u60c5\u51b5,\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u53ea\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u6ca1\u6709\u6b63\u786e\u91ca\u653e\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_23","title":"\u591a\u6001","text":"<p>\u57fa\u7c7b\u8868\u793a\u5b50\u7c7b, \u8f6c\u6362\u4e3a\u5b50\u7c7b</p> <p>\u793a\u4f8b: \u5b9a\u4f4d\u7ea6\u675f\u7c7b\u578b <pre><code>struct Node {};\nstruct BasePair {\n  enum Type {\n    POINT_TO_POINT,\n    POINT_TO_LINE,\n  };\n  Type pair_type;\n  virtual ~BasePair() {}\n  virtual std::string name() { return \"BasePair\"; }\n};\n\nstruct PointToPointPair : BasePair {\n  Node src_point;\n  Node target_point;\n};\n\nstruct PointToLinePair : BasePair {\n  Node src_point;\n  Node target_line[];\n};\n\nusing BasePairPtr = std::shared_ptr&lt;BasePair&gt;;\nusing PointToPointPairPtr = std::shared_ptr&lt;PointToPointPair&gt;;\nusing PointToLinePairPtr = std::shared_ptr&lt;PointToLinePair&gt;; \n\nusing TypePointToPointPairsVec =\n    std::unordered_map&lt;FeatureType, std::vector&lt;PointToPointPairPtr&gt;&gt;;\nusing TypePointToLinePairsVec =\n    std::unordered_map&lt;FeatureType, std::vector&lt;PointToLinePairPtr&gt;&gt;;\n\n\n/**\n * util functions\n*/\nusing TypePairsVec = std::unordered_map&lt;FeatureType, std::vector&lt;BasePairPtr&gt;&gt;;\n\nTypePairsVec type_pairs;\nvoid AddPointToPointPair(const PointToPointPair&amp; cur_pair) {\n  BasePairPtr pair = std::make_shared&lt;PointToPointPair&gt;(cur_pair);\n  type_pairs[pair-&gt;feature_type].push_back(pair);\n}\n\nstd::optional&lt;std::vector&lt;PointToPointPairPtr&gt;&gt;\nGetPointToPointPairsByType(const FeatureType&amp; type) const {\n  if (type_pairs.count(type) == 0) return std::nullopt;\n\n  std::vector&lt;PointToPointPairPtr&gt; result;\n  const auto&amp; base_pairs = type_pairs.at(type);\n  result.reserve(base_pairs.size());\n  for (const auto&amp; pair : base_pairs) { \n    PointToPointPairPtr cur_pair =\n        std::dynamic_pointer_cast&lt;PointToPointPair&gt;(pair);\n    result.push_back(cur_pair);\n  }\n  if (result.empty())\n    return std::nullopt;\n  else\n    return result;\n}\n</code></pre></p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#class","title":"\u5c01\u88c5class\u5199\u6cd5","text":"<p>from chh</p> <pre><code>//header file\n#pragma once\n#include &lt;string&gt;\nnamespace lspro{\n  class Extractor{\n    public:\n     Extractor();\n     ~Extractor();\n\n     void Process();\n    private:\n     class Impl;\n     Impl* impl_;\n  };\n};\n\n\n//source file\n#include \".../...\"\nnamespace lspro{\nclass Extractor::Impl{\n  private:\n   //...variables or func\n  public:\n   Impl()=default;\n   ~Impl()=default;\n\n   void Process(){\n    //...\n   }\n};\nExtractor::Extractor(){  impl_ = nwe Impl(); }\nExtractor::~Extractor(){ delete impl_; }\nvoid Extractor::Process(){ impl_-&gt;Process(); }\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_24","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u5305\u62ec static_cast\u3001dynamic_cast\u3001const_cast \u548c reinterpret_cast\u3002\u6bcf\u79cd\u8f6c\u6362\u8fd0\u7b97\u7b26\u90fd\u6709\u5176\u7279\u5b9a\u7684\u7528\u9014\u548c\u9002\u7528\u6761\u4ef6\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u8be6\u7ec6\u8bf4\u660e\u53ca\u793a\u4f8b\uff1a</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#const_cast","title":"const_cast","text":"<p>\u7528\u4e8e\u5728\u7c7b\u578b\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u6216\u79fb\u9664 const \u6216 volatile \u4fee\u9970\u7b26\u3002\u5b83\u4e0d\u80fd\u7528\u4e8e\u975e\u6307\u9488\u6216\u975e\u5f15\u7528\u7c7b\u578b\u3002</p> <pre><code>void print(const int* numPtr) {\n    int* modifiablePtr = const_cast&lt;int*&gt;(numPtr);\n    *modifiablePtr = 10;\n    std::cout &lt;&lt; *numPtr &lt;&lt; \"\\n\"; // \u8f93\u51fa \"10\"\n}\n\nint main() {\n    int num = 5;\n    print(&amp;num); // \u4fee\u6539 num \u7684\u503c\n    std::cout &lt;&lt; num &lt;&lt; \"\\n\"; // \u8f93\u51fa \"10\"\n    return 0;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#static_cast","title":"static_cast","text":"<p>\u7528\u4e8e\u5728\u7c7b\u578b\u5c42\u6b21\u7ed3\u6784\u4e2d\u8fdb\u884c\u663e\u5f0f\u8f6c\u6362\uff0c\u9002\u7528\u4e8e\u5df2\u77e5\u7c7b\u578b\u7684\u5b89\u5168\u8f6c\u6362\uff08\u5982\u57fa\u672c\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u3001\u5b50\u7c7b\u548c\u7236\u7c7b\u4e4b\u95f4\u7684\u8f6c\u6362\u7b49\uff09</p> <ul> <li>\u7f16\u8bd1\u65f6\u68c0\u67e5\uff1astatic_cast \u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u786e\u4fdd\u7c7b\u578b\u4e4b\u95f4\u5b58\u5728\u5df2\u77e5\u7684\u8f6c\u6362\u5173\u7cfb\u3002</li> <li>\u4e0d\u5b89\u5168\u8f6c\u6362\uff1astatic_cast \u4e0d\u8fdb\u884c\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u6b64\u5982\u679c\u57fa\u7c7b\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u4e0d\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61(\u5982\u6307\u5411\u57fa\u7c7b\u81ea\u8eab)\uff0c\u8f6c\u6362\u540e\u7684\u6307\u9488\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002</li> <li>\u6548\u7387\u9ad8\uff1astatic_cast\u4e0d\u9700\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5</li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#dynamic_cast","title":"dynamic_cast","text":"<p>\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684\u5b89\u5168\u8f6c\u6362\uff0c\u901a\u5e38\u7528\u4e8e\u591a\u6001\u7c7b\u578b\u3002\u5b83\u53ef\u4ee5\u5411\u4e0b\u8f6c\u6362\uff08downcast\uff0c\u57fa\u7c7b\u8f6c\u5b50\u7c7b\uff09\uff0c\u5e76\u5728\u8f6c\u6362\u5931\u8d25\u65f6\u8fd4\u56de nullptr</p> <ul> <li>\u8fd0\u884c\u65f6\u68c0\u67e5\uff1adynamic_cast \u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u57fa\u7c7b\u6307\u9488\u5b9e\u9645\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002</li> <li>\u5b89\u5168\u8f6c\u6362\uff1a\u5982\u679c\u8f6c\u6362\u5931\u8d25\uff0cdynamic_cast \u8fd4\u56de nullptr\uff08\u5bf9\u4e8e\u6307\u9488\uff09\u6216\u629b\u51fa std::bad_cast \u5f02\u5e38\uff08\u5bf9\u4e8e\u5f15\u7528\uff09\uff0c\u4ece\u800c\u907f\u514d\u672a\u5b9a\u4e49\u884c\u4e3a\u3002</li> <li>\u6548\u7387\u4f4e\uff1adynamic_cast\u9700\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff08RTTI\uff09\u6765\u8fdb\u884c\u68c0\u67e5\u3002</li> </ul> <pre><code>class Base {\npublic:\n    void sayHello() { std::cout &lt;&lt; \"Hello from Base!\\n\"; }\n    virtual ~Base() = default;\n};\n\nclass Derived : public Base {\npublic:\n    void sayHello() { std::cout &lt;&lt; \"Hello from Derived!\\n\"; }\n};\n\nint main() {\n    Base* basePtr = new Derived();\n\n    //option1: \u4f7f\u7528 static_cast \u5c06 Base \u6307\u9488\u8f6c\u6362\u4e3a Derived \u6307\u9488\n    Derived* derivedPtr = static_cast&lt;Derived*&gt;(basePtr);//\u5982\u679cbasePtr\u6307\u5411Base\u5bf9\u8c61\u5c06\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\n    derivedPtr-&gt;sayHello(); // \u8f93\u51fa \"Hello from Derived!\"\n    basePtr-&gt;sayHello(); // \u8f93\u51fa \"Hello from Base!\"\n\n    //option2: \u4f7f\u7528 dynamic_cast \u5c06 Base \u6307\u9488\u8f6c\u6362\u4e3a Derived \u6307\u9488\n    Derived* derivedPtr = dynamic_cast&lt;Derived*&gt;(basePtr);\n    if (derivedPtr) {\n        derivedPtr-&gt;sayHello(); // \u8f93\u51fa \"Hello from Derived!\"\n    } else {\n        std::cout &lt;&lt; \"Conversion failed!\\n\";\n    }\n\n\n    delete basePtr;\n    return 0;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#reinterpret_cast","title":"reinterpret_cast","text":"<p>\u7528\u4e8e\u5bf9\u6307\u9488\u6216\u5f15\u7528\u7c7b\u578b\u8fdb\u884c\u4f4e\u7ea7\u522b\u7684\u91cd\u65b0\u89e3\u91ca\u7c7b\u578b\u8f6c\u6362\u3002\u901a\u5e38\u7528\u4e8e\u786c\u4ef6\u7f16\u7a0b\u6216\u9700\u8981\u64cd\u4f5c\u5e95\u5c42\u5185\u5b58\u7684\u573a\u666f\u3002\u4f7f\u7528\u65f6\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u53ef\u80fd\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a</p> <pre><code>int main() {\n    int num = 65;\n    // \u5c06 int \u6307\u9488 reinterpret_cast \u4e3a char \u6307\u9488\n    char* charPtr = reinterpret_cast&lt;char*&gt;(&amp;num);\n    std::cout &lt;&lt; *charPtr &lt;&lt; \"\\n\"; // \u8f93\u51fa 'A'\uff0c\u5047\u8bbe\u5c0f\u7aef\u5b57\u8282\u5e8f\n\n    return 0;\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_25","title":"\u667a\u80fd\u6307\u9488\u7684\u7c7b\u578b\u8f6c\u6362","text":"<p>\u9664\u4e86\u524d\u9762\u63d0\u5230\u7684 <code>std::dynamic_pointer_cast</code>\uff0cC++ \u8fd8\u63d0\u4f9b\u4e86 <code>std::static_pointer_cast</code> \u548c <code>std::const_pointer_cast</code>\uff0c\u7528\u4e8e std::shared_ptr \u548c std::unique_ptr \u7684\u7c7b\u578b\u8f6c\u6362\u3002</p> <ul> <li> <p><code>std::static_pointer_cast</code>\u7528\u4e8e\u667a\u80fd\u6307\u9488\u7684\u9759\u6001\u7c7b\u578b\u8f6c\u6362   <pre><code>class Base {\npublic:\n    virtual ~Base() = default;\n};\n\nclass Derived : public Base {\npublic:\n    void sayHello() { std::cout &lt;&lt; \"Hello from Derived!\\n\"; }\n};\n\nint main() {\n    std::shared_ptr&lt;Base&gt; basePtr = std::make_shared&lt;Derived&gt;();\n\n    // \u4f7f\u7528 static_pointer_cast \u5c06 Base \u6307\u9488\u8f6c\u6362\u4e3a Derived \u6307\u9488\n    std::shared_ptr&lt;Derived&gt; derivedPtr = std::static_pointer_cast&lt;Derived&gt;(basePtr);\n    derivedPtr-&gt;sayHello(); // \u8f93\u51fa \"Hello from Derived!\"\n\n    return 0;\n}\n</code></pre></p> </li> <li> <p><code>std::const_pointer_cast</code>\u7528\u4e8e\u667a\u80fd\u6307\u9488\u7684 const \u7c7b\u578b\u8f6c\u6362   <pre><code>void modifyValue(const std::shared_ptr&lt;int&gt;&amp; ptr) {\n    std::shared_ptr&lt;int&gt; nonConstPtr = std::const_pointer_cast&lt;int&gt;(ptr);\n    *nonConstPtr = 20;\n}\n\nint main() {\n    auto ptr = std::make_shared&lt;int&gt;(10);\n    std::cout &lt;&lt; \"Before: \" &lt;&lt; *ptr &lt;&lt; \"\\n\"; // \u8f93\u51fa \"Before: 10\"\n    modifyValue(ptr);\n    std::cout &lt;&lt; \"After: \" &lt;&lt; *ptr &lt;&lt; \"\\n\";  // \u8f93\u51fa \"After: 20\"\n    return 0;\n}\n</code></pre></p> </li> <li> <p><code>std::dynamic_pointer_cast</code>\u7528\u4e8e\u652f\u6301\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\uff08RTTI\uff09\uff0c\u5728\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u8fdb\u884c\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\uff08downcast,\u57fa\u7c7b\u8f6c\u5b50\u7c7b\uff09   <pre><code>class Base {\npublic:\n    virtual ~Base() = default;  // \u5fc5\u987b\u662f\u591a\u6001\u7c7b\u578b\n};\n\nclass Derived : public Base {\npublic:\n    void sayHello() {\n        std::cout &lt;&lt; \"Hello from Derived!\\n\";\n    }\n};\n\nint main() {\n    std::shared_ptr&lt;Base&gt; basePtr = std::make_shared&lt;Derived&gt;();\n\n    // \u4f7f\u7528 dynamic_pointer_cast \u5c06 basePtr \u8f6c\u6362\u4e3a Derived \u7c7b\u578b\u7684 shared_ptr\n    std::shared_ptr&lt;Derived&gt; derivedPtr = std::dynamic_pointer_cast&lt;Derived&gt;(basePtr);\n\n    if (derivedPtr) {\n        derivedPtr-&gt;sayHello();  // \u8f93\u51fa \"Hello from Derived!\"\n    } else {\n        std::cout &lt;&lt; \"Conversion failed!\\n\";\n    }\n\n    return 0;\n}\n</code></pre></p> </li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_26","title":"\u591a\u7ebf\u7a0b\u4e0e\u9501","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#_27","title":"\u5e38\u89c1\u7528\u6cd5","text":"<pre><code>std::mutex mut_buffer;\n//...\nmut_buffer.lock();\n//...\nmut_buffer.unlock();\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_28","title":"\u5176\u4ed6","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#enum","title":"enum\u679a\u4e3e\u76f8\u5173","text":"<ul> <li>enum\u4e0e\u6570\u503c</li> </ul> <p><pre><code>//enum: \u4e0d\u6307\u5b9a\u6570\u5b57\u65f6\u5019\u9ed8\u8ba4\u4ece0\u5f00\u59cb\u6392\u5e8f\nenum Color{Red, Green, Blue}; //red=0, green=1,blue=2\nif(Color::Red == 0 ) {....}   //valid\n\nenum class Color{Red, Green, Blue}; //red=0, green=1,blue=2\nif(Color::Red == 0 ) {....}   //invalid\nif(static_cast&lt;int&gt;(Color::Red) == 0 ) {....}   //valid\n</code></pre> - enum\u91cd\u8f7dostream</p> <p><pre><code>enum Color{Red, Green, Blue}; \nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; ostr, const Color&amp; color){\n  switch(color){\n    case Color::Red: \n      ostr&lt;&lt;\"Red\";\n      break;\n    case Color::Green: \n      ostr&lt;&lt;\"Green\";\n      break;\n  }\n  return ostr;\n} \n</code></pre> - \u904d\u5386enum</p> <pre><code>enum Type : uint8_t {\n  MAPPING = 0,\n  TUNNEL = 1,\n  PARKING = 2,\n};\nstd::unordered_map&lt;std::string, geometry::PolygonGeometry::Type&gt;\n    polygon_geometry_type = {\n        {\"MAPPING\", geometry::PolygonGeometry::MAPPING},\n        {\"TUNNEL\", geometry::PolygonGeometry::TUNNEL},\n        {\"PARKING\", geometry::PolygonGeometry::PARKING},\n    };\nfor (const auto&amp; [type_str, geometry_type] : polygon_geometry_type) {\n  const geometry::PolygonGeometry::Type&amp; type = geometry_type;\n  polygon_type_menu-&gt;addAction(\n      QString::fromStdString(type_str), viewer_, [this, type]() {//\u6355\u83b7type\u9700\u8981\u660e\u786e\u7c7b\u578b,\u65e0\u6cd5\u81ea\u52a8\u8bc6\u522bauto\u7684type\u7c7b\u578b\n        const std::vector&lt;geometry::Geometry*&gt; polygon_geometries =\n            viewer_-&gt;SelectedPolygonGeometries();\n        for (int i = 0; i &lt; polygon_geometries.size(); ++i) {\n          geometry::PolygonGeometry* polygon_geometry =\n              static_cast&lt;geometry::PolygonGeometry*&gt;(\n                  polygon_geometries[i]);\n          polygon_geometry-&gt;SetPolygonGeometryType(type);\n        }\n        viewer_-&gt;RestartRender();\n      });\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#pragma-onceifndef","title":"pragma once\u548cifndef","text":"<p><code>pragma once</code>\u672a\u5199\u5165\u6807\u51c6\uff0c\u4f46\u9664\u8001\u7f16\u8bd1\u5668\u5916\u4e3b\u6d41\u7f16\u8bd1\u5668\u90fd\u652f\u6301\uff0c<code>ifndef</code>\u5f88\u65e9\u5199\u5165\u4e86\u6807\u51c6</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_29","title":"\u5c3d\u53ef\u80fd\u4f7f\u7528\u4f4d\u8fd0\u7b97","text":"<ul> <li>std::vector <code>&lt;bool&gt;</code>:\u4e0d\u662f\u5bb9\u5668\u54e6,\u53ef\u52a8\u6001\u589e\u957f\uff0c\u4f46\u662f\u4f4d\u8fd0\u7b97\u53d7\u9650</li> <li>std::bitset:bitset\u662f\u6807\u51c6\u5bb9\u5668\uff0c\u652f\u6301\u591a\u6837\u7684\u4f4d\u8fd0\u7b97\u4f46\u662f\u5927\u5c0f\u56fa\u5b9a\uff0c\u65e0\u6cd5\u52a8\u6001\u589e\u957fsize</li> <li>boost::dynamic_bitset\u5219\u662f\u7efc\u5408\u4e24\u8005\u7684\u4f18\u70b9,boost::dynamic_bitset ref</li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#absl","title":"Absl\u4f7f\u7528","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#time","title":"time","text":"<pre><code>absl::ToUnixMicros(absl::Now())\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#string","title":"string","text":"<ul> <li>join string   <pre><code>//join by format\nstd::string full_dir = absl::StrFormat(\"%s/%s\",path,file);\n//join by add\nstd::string full_dir = absl::StrCat(path,\"/user/\",23,file);\n</code></pre></li> <li>string and vector   <pre><code>//string2vector\nconst std::string raw_msg = \"/home/root/note/traj.txt\";\n//absl::string_view\nstd::vector&lt;std::string&gt; msg_arr = absl::StrSplit(raw_msg, \"/\");\n//str split \n//vector2str\nconst std::string msgs = absl::StrJoin(msg_arr, \"/\");\n\n//todo\nabsl::StrReplaceAll()\nabsl::StrAppend()\n\n//str2number\nconst std::string str = ...;\nuint64 id;\nif(!absl::SimpleAtoi(str, id)) continue;\n</code></pre></li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#status","title":"\u8fd4\u56destatus","text":"<ul> <li>\u4ee3\u66ff\u8fd4\u56devoid\u51fd\u6570   <pre><code>//mode\nabsl::Status FuncA(){\n    ....\n    if(...false...){\n        //return absl::NotFoundError(\"error message\");\n        return absl::Status(absl::StatusCode::kNotFound,\"error msg\");\n    }\n    return absl::OkStatus();\n}\n//usage\nabsl::Status ret = FuncA();\nCHECK_NQ(ret.code(), absl::StatusCode::kUnknown);\nif(!ret.ok()){\n    return absl::InternalError(ret.message());\n}\n\n//example\n  absl::Status FuncA(){\n  return absl::InternalError(\"message1...\");\n  return absl::NotFoundError(\"message1...\");\n  return absl::UnavailableError(\"message1...\");\n  return absl::AbortedError(\"message1...\");\n  return absl::OkStatus();\n}\n\nabsl::StatusOr&lt;T&gt; FuncB(){\n  return T();\n  return absl::InternalError(\"message1...\");\n  return absl::InvalidArgumentError(\"message1...\");\n}\n</code></pre></li> <li>\u4ee3\u66ff\u8fd4\u56de\u503c\u51fd\u6570   <pre><code>//mode\nabsl::StatusOr&lt;double&gt; FuncA(){\n    double ret = ...\n    if(...ok...){\n        return ret;\n    } else {\n        return absl::FailedPreconditionError(\"error message\");\n    }\n}\n//usage\nconst auto ret = FuncA();\nif(ret.ok()){\n    const double num = ret.value();\n} else{\n    return absl::AbortError(ret.message());\n}\n</code></pre></li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#abslcleanup","title":"absl::Cleanup","text":"<pre><code>absl::Status FuncA(){\n    static int cnt=0;\n    ...\n    //The lambda will be run at the function exit.\n    const absl::Cleanup cleanup = [=]{\n        cnt++;//update last \n    }\n    ...\n    return absl::Status();\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_30","title":"\u5f02\u5e38\u5904\u7406","text":"<pre><code>const char* warning_msg = \"warning\";\nabsl::AbortedError(warning_msg);\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#mutex","title":"mutex","text":"<pre><code>absl::Mutex image_mutex_;\nvoid FuncA(){\n    ...\n    absl::WriteMutexLock lock(&amp;image_mutex_);\n    ...\n}\nvoid FuncB(){\n    ...\n    absl::ReaderMutexLock lock(&amp;image_mutex_);\n    ...\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#boost","title":"Boost\u4f7f\u7528","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#dumpload","title":"\u5e8f\u5217\u5316(\u6587\u4ef6dump&amp;load)","text":"<pre><code>struct ImageryV2Cell {\n  double elevation = 0;\n  int sum_of_intensity = 0;\n  int num_of_points = 0;\n  /**\n   * reserve for more pointcloud type\n   * 0: normal\n   * 1: dynamic\n   */\n  uint8_t type = 0;\n\n private:\n  friend class boost::serialization::access;\n  template &lt;typename Archive&gt;\n  void serialize(Archive&amp; ar, const unsigned int version) {  // NOLINT\n    ar&amp; elevation;\n    ar&amp; sum_of_intensity;\n    ar&amp; num_of_points;\n    ar&amp; type;\n  }\n};\nstruct ImageryV2Patch {\n  int level;\n  uint_64 patch_id;\n  std::map&lt;MapPatch::PixelId, std::map&lt;double, ImageryV2Cell&gt;&gt;\n      pixel_id_to_cells;\n\n private:\n  friend class boost::serialization::access;\n  template &lt;typename Archive&gt;\n  void serialize(Archive&amp; ar, const unsigned int version) {  // NOLINT\n    ar&amp; level;\n    ar&amp; patch_id;\n    ar&amp; pixel_id_to_cells;\n  }\n};\n\nvoid LoadImageryV2Patch(const std::string&amp; path, ImageryV2Patch* patch) {\n  std::ifstream ifs(path);\n  if (ifs.is_open()) {\n    boost::archive::binary_iarchive ia(ifs);\n    ia &gt;&gt; *patch;\n    ifs.close();\n  }\n}\n\nvoid SaveImageryV2Patch(const std::string&amp; path, const ImageryV2Patch&amp; patch) {\n  std::ofstream ofs(path);\n  if (ofs.is_open()) {\n    boost::archive::binary_oarchive oa(ofs);\n    oa &lt;&lt; patch;\n    ofs.close();\n  }\n}\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#c-tips","title":"C++ Tips(\u5de5\u7a0b\u5316\uff5c\u6027\u80fd\u63d0\u5347)","text":"<p>coding stype of Drake(google style\u52a0\u5f3a)</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#tips_1","title":"\u57fa\u672ctips","text":"<ul> <li>vector\u4f7f\u7528\u4e4b\u524d\u4e00\u5b9areserve  \u6700\u540eshrink_to_fit</li> <li>\u51fd\u6570\u4f20\u53c2\u6570\uff0c\u5bf9\u4e8e\u57fa\u7840\u7c7b\u578b\u6bd4\u5982int/float/double/bool\u7b49\u53ef\u4ee5\u4e0d\u7528\u5f15\u7528\uff0c\u76f4\u63a5<code>const double</code>, \u65e0\u9700<code>const double&amp;</code>, \u81ea\u5b9a\u4e49\u7c7b\u578bstruct\u548cclass\u7b49\u9700\u8981<code>const A&amp;</code>, \u5b9a\u4e49\u53d8\u91cf\u521d\u59cb\u5316\u7684\u65f6\u5019\u540c\u7406</li> <li>int\u4e0d\u53ef\u4e0e size_t\u7b26\u53f7\u4e0d\u540c\u65f6\u5019\u4e0d\u80fd\u8fdb\u884c\u6bd4\u8f83,\u5426\u5219\u6709\u5927\u95ee\u9898,\u6bd4\u5982   <pre><code>int val = -1;\nif(val &gt; 0u){ //  -1 &gt; 0u \u7ed3\u679c\u672atrue\u3002\u3002\u3002\n  ...\n}\n</code></pre></li> <li>\u907f\u514dstd::sqrt\u8ba1\u7b97\uff0c\u6bd4\u5982\u6bd4\u8f83\u8ddd\u79bb\u65f6\u5019\u6bd4\u8f83<code>squaredNorm()</code></li> <li><code>constexpr int kScaleFactor = 100'000;</code></li> <li><code>absl::SleepFor(absl::Seconds(1));</code></li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#debug","title":"debug\u91cd\u8f7d&lt;&lt;","text":"<pre><code>class MyClass {\npublic:\n    int value;\n    MyClass(int v) : value(v) {}\n    // \u91cd\u8f7d\u8f93\u51fa\u6d41\u8fd0\u7b97\u7b26\uff08&lt;&lt;\uff09\n    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const MyClass&amp; obj) {\n        os &lt;&lt; \"Value: \" &lt;&lt; obj.value;\n        return os;\n    }\n};\n</code></pre>"},{"location":"coding/c%2B%2B/note_tips_cpp/#_31","title":"\u5bb9\u5668\u76f8\u5173","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#stdmap-vs-boosts-flat_map","title":"std::map vs boost's flat_map","text":"<p><pre><code>template &lt;typename Key, typename T, typename Compare = std::less&lt;Key&gt;&gt;\nusing FlatMap = boost::container::flat_map&lt;Key, T, Compare&gt;;\n</code></pre> <code>boost::container::flat_map</code> \u548c <code>std::map</code> \u662f\u4e24\u79cd\u4e0d\u540c\u7684\u5173\u8054\u5bb9\u5668\uff0c\u5b83\u4eec\u5728\u6027\u80fd\u548c\u7279\u6027\u4e0a\u6709\u6240\u4e0d\u540c\u3002\u4e0b\u9762\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u8be6\u7ec6\u6bd4\u8f83\uff1a</p> <ol> <li> <p>\u5185\u5b58\u5e03\u5c40\uff1a<code>boost::container::flat_map</code> \u4f7f\u7528\u8fde\u7eed\u7684\u5185\u5b58\u5757\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u800c <code>std::map</code> \u4f7f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u3002\u8fd9\u5bfc\u81f4\u5728\u5185\u5b58\u5e03\u5c40\u4e0a\u7684\u5dee\u5f02\uff0c<code>flat_map</code> \u7684\u5143\u7d20\u5b58\u50a8\u66f4\u7d27\u51d1\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u788e\u7247\u548c\u6307\u9488\u8df3\u8f6c\uff0c\u6709\u52a9\u4e8e\u63d0\u9ad8\u7f13\u5b58\u53cb\u597d\u6027\u3002</p> </li> <li> <p>\u63d2\u5165\u548c\u8bbf\u95ee\u6027\u80fd\uff1a\u7531\u4e8e <code>flat_map</code> \u4f7f\u7528\u8fde\u7eed\u5185\u5b58\u5b58\u50a8\u5143\u7d20\uff0c\u63d2\u5165\u548c\u8bbf\u95ee\u5143\u7d20\u7684\u6027\u80fd\u901a\u5e38\u6bd4 <code>std::map</code> \u66f4\u597d\u3002\u8fd9\u662f\u56e0\u4e3a <code>flat_map</code> \u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u5177\u6709\u66f4\u597d\u7684\u5c40\u90e8\u6027\uff0c\u51cf\u5c11\u4e86\u7f13\u5b58\u672a\u547d\u4e2d\u7684\u6b21\u6570\u3002\u800c <code>std::map</code> \u7684\u7ea2\u9ed1\u6811\u7ed3\u6784\u5bfc\u81f4\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u4e0d\u8fde\u7eed\u5b58\u50a8\uff0c\u8bbf\u95ee\u5143\u7d20\u65f6\u9700\u8981\u8fdb\u884c\u6307\u9488\u8df3\u8f6c\uff0c\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u7684\u7f13\u5b58\u672a\u547d\u4e2d\u3002</p> </li> <li> <p>\u67e5\u627e\u6027\u80fd\uff1a\u7531\u4e8e <code>std::map</code> \u4f7f\u7528\u7ea2\u9ed1\u6811\u7ed3\u6784\uff0c\u5176\u67e5\u627e\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a O(logN)\uff0c\u5176\u4e2d N \u662f\u5143\u7d20\u6570\u91cf\u3002\u800c <code>flat_map</code> \u5728\u6709\u5e8f\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u590d\u6742\u5ea6\u4e5f\u4e3a O(logN)\uff1b\u5728\u65e0\u5e8f\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fdb\u884c\u7ebf\u6027\u67e5\u627e\uff0c\u590d\u6742\u5ea6\u4e3a O(N)\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u548c\u9891\u7e41\u67e5\u627e\u7684\u573a\u666f\uff0c<code>std::map</code> \u7684\u67e5\u627e\u6027\u80fd\u901a\u5e38\u4f18\u4e8e <code>flat_map</code>\u3002</p> </li> <li> <p>\u5185\u5b58\u5360\u7528\uff1a\u7531\u4e8e <code>flat_map</code> \u4f7f\u7528\u8fde\u7eed\u5185\u5b58\u5b58\u50a8\u5143\u7d20\uff0c\u5176\u5360\u7528\u7684\u5185\u5b58\u901a\u5e38\u6bd4 <code>std::map</code> \u5c11\u3002<code>std::map</code> \u4f7f\u7528\u7ea2\u9ed1\u6811\u7ed3\u6784\uff0c\u9700\u8981\u989d\u5916\u7684\u6307\u9488\u548c\u8282\u70b9\u5f00\u9500\u3002</p> </li> <li> <p>\u8fed\u4ee3\u5668\u7a33\u5b9a\u6027\uff1a<code>flat_map</code> \u7684\u8fed\u4ee3\u5668\u5728\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\u901a\u5e38\u4f1a\u4fdd\u6301\u7a33\u5b9a\uff0c\u800c <code>std::map</code> \u7684\u8fed\u4ee3\u5668\u5728\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\u53ef\u80fd\u4f1a\u5931\u6548\u3002\u8fd9\u662f\u7531\u4e8e <code>flat_map</code> \u7684\u8fde\u7eed\u5185\u5b58\u5b58\u50a8\u7279\u6027\uff0c\u800c <code>std::map</code> \u7684\u7ea2\u9ed1\u6811\u7ed3\u6784\u53ef\u80fd\u5f15\u8d77\u5e73\u8861\u64cd\u4f5c\u5bfc\u81f4\u8282\u70b9\u91cd\u65b0\u5206\u914d\u3002</p> </li> </ol> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c<code>boost::container::flat_map</code> \u5728\u63d2\u5165\u548c\u8bbf\u95ee\u6027\u80fd\u3001\u5185\u5b58\u5360\u7528\u548c\u8fed\u4ee3\u5668\u7a33\u5b9a\u6027\u65b9\u9762\u901a\u5e38\u4f18\u4e8e <code>std::map</code>\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u548c\u9891\u7e41\u7684\u67e5\u627e\u64cd\u4f5c\uff0c<code>std::map</code> \u7684\u67e5\u627e\u6027\u80fd\u66f4\u597d\u3002\u9009\u62e9\u9002\u5408\u7684\u5bb9\u5668\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u4f7f\u7528\u573a\u666f\u548c\u9700\u6c42\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#vectorabsl","title":"vector\u7684absl\u66ff\u4ee3","text":"<p><code>absl::Span</code>\u4ee3\u66ff <code>const std::vector&lt;T&gt;&amp;</code> <pre><code>void PrintVec(absl::Span&lt;Vec2d&gt; vec_data){\n  ...\n}\nstd::vector&lt;Vec2d&gt; vec_data;\n...\nPrintVec(absl::MakeSpan(vec_data));\n</code></pre></p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#deletekaiqi","title":"delete\u672c\u8d28(kaiqi)","text":"<p>C++ delete\u91ca\u653e\u5185\u5b58\u7684\u672c\u8d28 \u5728C++\u4e2d\uff0c\u8c03\u7528delete\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528\u5df2\u5206\u914d\u7684\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u7136\u540e\u91ca\u653e\u6307\u5b9a\u5185\u5b58,delete\u6240\u8c13\u7684\u91ca\u653e\u5185\u5b58\uff0c\u53ea\u662f\u5c06\u6307\u5b9a\u7a7a\u95f4\u5b9a\u4e49\u4e3a\u53ef\u5206\u914d\u5185\u5b58\uff0c\u8be5\u7a7a\u95f4\u4ecd\u4fdd\u7559\u539f\u6709\u7684\u503c\uff0c\u4e14\u53ef\u4ee5\u8bbf\u95ee\u3002</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#protobuf-c","title":"Protobuf C++","text":""},{"location":"coding/c%2B%2B/note_tips_cpp/#data-type","title":"data type","text":"<p>proto-int32 fixed32 sfixe32</p> type info int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. uint32 Uses variable-length encoding. sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. sfixed32 Always four bytes."},{"location":"coding/c%2B%2B/note_tips_cpp/#proto-enum","title":"proto enum","text":"<p><pre><code>message MapMetaProto {\n  enum Country {\n    CHINA = 0;\n    US = 1;\n    JAPAN = 2;\n  }\n  optional string map_name = 1;\n  optional string repo_dir = 2;\n}\n</code></pre> - get all values of enum <pre><code>const auto* country_desc = MapMetaProto::Country_descriptor();\nfor (int i = 0; i &lt; country_desc-&gt;value_count(); i++) {\n    const auto region_name =\n        MapMetaProto::Country(country_desc-&gt;value(i)-&gt;number());\n    country_list_-&gt;addItem(\n        QString::fromStdString(MapMetaProto::Country_Name(region_name)));\n}\n</code></pre></p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#proto-map","title":"proto map","text":"<p><pre><code>message CameraExtrinsicCalibrateResult {\n  optional double timestamp = 1;\n  map&lt;int32, CameraId&gt; camera_id_map = 2;\n}\n</code></pre> <pre><code>///proto map --&gt; std::map\nstd::map&lt;int32_t, CameraId&gt; camera_id_map(\n      calibrate_result-&gt;camera_id_map().begin(),\n      calibrate_result-&gt;camera_id_map().end());\n///std::map --&gt; proto map\nstd::map&lt;int32_t, CameraId&gt; camera_id_std_map = ...\nauto* camera_id_map_out = calibrate_result.mutable_camera_id_map();\ngoogle::protobuf::Map&lt;int32_t, CameraId&gt; camera_id_map_temp(\n      camera_id_std_map.begin(), camera_id_std_map.end());\n*camera_id_map_out = camera_id_map_temp;\n\n//string --&gt; proto_enu type\nstd::ostringstream oss;\n    oss &lt;&lt; type;\n    FeatureTypeProto type_proto;\n    CHECK(FeatureTypeProto_Parse(oss.str(), &amp;type_proto));\n\n//proto enu type---&gt; string\n</code></pre></p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#mr-tips","title":"MR Tips","text":"<ul> <li>\u4e0e\u5176\u4f7f\u7528\u590d\u6742\u7684pair\u7b49\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u5982\u5b9a\u4e49\u5c0f\u7684struct, \u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801 ---- from dong, review the guoqiang</li> <li>\u5c3d\u53ef\u80fd\u4f7f\u7528\u88f8\u6307\u9488raw pointer\uff0c\u6bd4\u5982\u51fd\u6570\u53c2\u6570\u5217\u8868\u91cc\u4fee\u6539\u7684\u503c</li> </ul>"},{"location":"coding/c%2B%2B/note_tips_cpp/#gperftools","title":"\u6027\u80fd\u5206\u6790Gperftools","text":"<p>gcc\u80af\u5b9a\u652f\u6301\uff0c\u5bf9clang\u7684\u652f\u6301\u6027 https://stackoverflow.com/questions/3769057/alternative-to-pg-with-clang</p> <p>https://github.com/gperftools/gperftools</p> <p>https://gperftools.github.io/gperftools/</p> <p>https://qcraft.feishu.cn/docs/doccnbdAq2SkvlLB4FDfYxhTLed#</p>"},{"location":"coding/c%2B%2B/note_tips_cpp/#usage_1","title":"usage","text":"<pre><code>#\u5148\u7f16\u8bd1\u51fa\u6765\u5e26\u6709profiling\u80fd\u529b\u7684binary\nbazel build -c opt --config gperftools //offboard/tools/run_processor:run_processor\n#Check memory leak  ref(https://gperftools.github.io/gperftools/heap_checker.html)\n HEAPCHECK=normal &lt;binary&gt;\n #Check where cost most memory ref(https://gperftools.github.io/gperftools/heapprofile.html)\n #\u8bbe\u7f6eHEAP_PROFILE_INUSE_INTERVAL\u4ee3\u8868\u7a0b\u5e8f\u6bcf\u589e\u52a01G\u7684memory cost\u5c31\u8bb0\u5f55\u4e00\u6b21heap cost\uff0c\u8fd9\u6837\u5bf9\u8fd0\u884c\u901f\u5ea6\u7684\u5f71\u54cd\u4f1a\u6bd4\u8f83\u5c0f\n HEAPPROFILE=/tmp/mybin.hprof HEAP_PROFILE_INUSE_INTERVAL=1073741824 &lt;binary&gt;\n</code></pre>"},{"location":"coding/c%2B%2B/test/","title":"Test","text":""},{"location":"coding/c%2B%2B/test/#_1","title":"\u6b63\u592a\u5206\u5e03","text":"<pre><code>double horizontal_noise_variance=4;\n\nstd::default_random_engine genrator();\nstd::normal_distribution&lt;double&gt; horizontal_noise_distribution(0.0, std::sqrt(horizontal_noise_variance));\n\ndouble random_noise = horizontal_noise_distribution(genrator);\n</code></pre>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/","title":"Bjarne Strooustrup:The Essence of C++","text":"<p>This page is the note of Bjarne's speech at Edinburgh from youtobe.</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#what-diddo-i-want","title":"What did/do I want?","text":"<p>Type safety - Encapsulate necessary unsafe operations</p> <p>Resource safety - it's not all memory</p> <p>Performance - For some parts of almost all systems,it's important</p> <p>Predictability - For hard and soft real time</p> <p>Teachability - Complexity of code should be proportional to the complexity of the task</p> <p>Readability - People and machines(\"analyzability\")</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#who-diddo-i-want-it-for","title":"Who did/do I want it for?","text":"<p>Primary concerns - Systems propramming - Embedded systems - Resource constrained systems - Large systems</p> <p>Experts - \"c++ is expert friendly\"</p> <p>Novices - \"c++ is not just expert friendly\"</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#c-in-two-lines","title":"C++ in two lines","text":""},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#what-is-c","title":"What is C++?","text":"<p>Direct map to hardware - of instructions and dundamental data types - Initially from C</p> <p>Zero-Overhead abstraction - Classes with constructors and destructors,inheritance,generic programming,functional programming techniques - Initially from Simula</p> <p>Much of the inspiration came from operating systems What does C++ wants to be when it grows up? - See above - And better at it for more modern hardware and techniques - Compatibility/stability is a feature</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#cpp-is-a-light-weight-abstraction-programming-language","title":"Cpp is a light-weight abstraction programming language","text":"<p>building and using efficient and elegant abstractions</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#key-strengths","title":"Key strengths:","text":"<ul> <li>software infrastructure</li> <li>resource-constrained applications</li> </ul>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#resource-management","title":"Resource Management","text":""},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#a-resource-is-something-that-must-be-acquired-and-latter-released","title":"A resource is something that must be acquired and latter released","text":"<ul> <li>Explicitly or implicitly</li> <li>Resource management should not be manual</li> <li>we don't want leaks(\u6cc4\u9732)</li> </ul>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#a-resource-should-have-an-owner","title":"A resource should have an owner","text":"<ul> <li>Usually a \"handle\"</li> <li>A \"handle\" should present a well-defined and useful abstraction</li> </ul>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#all-the-standard-library-containers-manage-their-elements","title":"All the standard-library containers manage their elements","text":"<ul> <li>vector</li> <li>list,forward_list(singly-linked list),...</li> <li>map,unordered_map(hash table),...</li> <li>set,multi_set,...</li> <li>string</li> </ul>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#other-standard-library-classes-manage-other-resoures","title":"Other standard-library classes manage other resoures","text":"<ul> <li>Not just memory(Garbage collection is not sufficient)</li> <li>thread,lock_guard,...</li> <li>istream,fstream,...</li> <li>unique_ptr,shared_ptr,...</li> </ul>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#use-constructors-and-destructor","title":"Use constructors and destructor","text":"<pre><code>template&lt;typename T&gt;\nclass Vector {\n public:\n  Vector(initializer_list&lt;T&gt;);//vector of elements of type T\n  ~Vector();\n  //...\n private:\n  T* elem; //pointer to elements\n  int sz;  //number of  elements\n};\n\nvoid fct(){\n    Vector&lt;double&gt; vd{1, 1.625, 3.14, 2.998e8};\n    Vector&lt;string&gt; vs{\"Strachey\", \"Richards\"};\n}\n</code></pre>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#pointer-misuse","title":"Pointer Misuse","text":"<p>Many(most) uses of pointers in local scope are not exception safe <pre><code>void f(int n, int x){\n    Gadget* p = new Gadget(n);\n    //...\n    if(x &lt; 100) throw std::runtime_error(\"Weird!\");//leak\n    if(x &lt; 200) return;                            //leak\n    //...\n    delete p; //I want my garbage collector!\n}\n</code></pre> <pre><code>But garbage collection would not release non-memory resources\nWhy use a \"naked\" pointer?\n</code></pre></p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#resource-handles-and-pointers","title":"Resource Handles and Pointers","text":"<p>A std::shared_ptr releases its object at when the last shared_ptr to it is destroyed <pre><code>void f(int n, int x){\n    auto p = make_shared&lt;Gadget&gt;(n); //manage that pointer!\n    //...\n    if(x &lt; 100) throw std::runtime_error(\"Weird!\");//no leak\n    if(x &lt; 200) return;                            //no leak\n    //...\n}\n</code></pre> shared_ptr provides a form of garbage collection(But I'm not sharing anything!) A std::unique_ptr releases its object at when it goes out of scope <pre><code>void f(int n, int x){\n    auto p = make_unique&lt;Gadget&gt;(n); //manage that pointer!\n    //...\n    if(x &lt; 100) throw std::runtime_error(\"Weird!\");//no leak\n    if(x &lt; 200) return;                            //no leak\n    //...\n}\n</code></pre> This is simple and cheap No more expensive than a \"plain old pointer\"</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#error-handling-and-resources","title":"Error Handling and Resources","text":"<p>\"Resource Acquistion Is Intialization\"(RAII) 1. Acquire during construction 2. Release in destructor</p> <p>Throw exception in case of failure</p> <p>In particular, throw is a constructor cannot construct and object</p> <p>Never throw while holding a resource not owned by a handle</p> <p>Never leak</p> <p>In general</p> <p>Leave established invariants intact when leaving a scope</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#why-do-we-use-pointers","title":"Why do we use pointers?","text":"<p>And references,iterators,etc. To represent ownership</p> <ul> <li>Don't Stop! Instead, use handles</li> </ul> <p>To reference resources</p> <ul> <li>from within a handle</li> </ul> <p>To represent positions</p> <ul> <li>Be careful</li> </ul> <p>To pass large amounts of data(into a function)</p> <ul> <li>E.g. pass by const reference</li> </ul> <p>To return large amount of data(out of a function)</p> <ul> <li>Don't! Instead use move operations</li> </ul>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#how-to-get-a-lot-of-data-cheaply-out-of-a-function","title":"How to get a lot of data cheaply out of a function?","text":"<p>Consider</p> <ul> <li>factory functions</li> <li>functions returning lots of objects</li> </ul> <p>Return a pointer to a new'd object?</p> <ul> <li>M* operator+(const M&amp;, const M&amp;);</li> <li>M* pm = m1 + m2;  //ugly: and who does the delete?</li> <li>M q = pm + m3;  //ugly: and who does the delete?</li> </ul> <p>Return a reference to a new'd object?</p> <ul> <li>M&amp; operator+(const M&amp;, const M&amp;);</li> <li>M m = m1 + m2; //looks OK; but who does the delete? delete what?</li> </ul> <p>Pass a target object?</p> <ul> <li>void operator+(const M&amp;, const M&amp;, M&amp; result);</li> <li>M m;</li> <li>operator+(m1, m2, m); //ugly: We are regressing(\u9000\u5316,\u56de\u5f52) towards assembly code(\u6c47\u7f16\u4ee3\u7801)</li> </ul> <p>conslusion - Consider factory functions functions returning lots of objects(in containers) - Return an object! <code>M operator+(const M&amp;, const M&amp;);</code> How? Becase copies are expensive Tricks to avoid copying are brittle Tricks to avoid copying are not general - Return a handle sample and cheap</p>"},{"location":"coding/c%2B%2B/the_essence_of_c%2B%2B/#move-semantics","title":"Move semantics","text":"<ul> <li>Direct support in C++11:Move constructor   <pre><code>class  Matrix{\n  Representation rep;\n  //...\n  Matrix(Matrix&amp;&amp; a) //move constructor\n  {\n    rep = a.rep; //*this gets a's elements\n    a.rep = {};  //a becomes the empty Matrix\n  }\n};\nMatrix res = a + b;\n</code></pre></li> <li>Often, you can avoid writing copy and move operations Easily avoid   <pre><code>class Matrix{\n  vector&lt;double&gt; elem; //elements here\n  //...matrix access...\n};\n</code></pre></li> <li>Matrix just \"inherit\" resource management from vector</li> <li>Copy and a move operations can often be implicitly generated from members Good copy and move operations, e.g from the standard library</li> </ul>"},{"location":"coding/python/000_summary/","title":"Summary","text":"<p>In this chapter, we learned the knowledge of Python programming language. We learned how to write and run Python code, how to use variables, data types, and operators, and how to use conditional statements and loops. We also learned about functions, modules, and file I/O.</p> <p>Note of Python From books"},{"location":"coding/python/00_book_basic_note/","title":"Python Basic Note","text":""},{"location":"coding/python/00_book_basic_note/#_1","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b","text":"<p><code>int,float,str,bool,list,tuple,dict</code></p> <pre><code>isinstance( 3,                 int)#True\nisinstance( 3.0,             float)#True\nisinstance( '2==3',            str)#True\nisinstance( '',                str)#True\nisinstance( None == None,     bool)#True\nisinstance( [1,2,'a'],        list)#True\nisinstance( (1,2,'a'),       tuple)#True\nisinstance( {'a':89,'b':100}, dict)#True\n\nclass Point:\n    \"\"\"\n    \"\"\"\n    x = 0\npt = Point()\nisinstance( pt, Point) #True \u5185\u7f6e\u51fd\u6570isinstance\u53ef\u8bc6\u522b\u81ea\u5b9a\u4e49\u7c7b\u578b\n</code></pre> <p>\u8fd4\u56de<code>bool</code>\u7684\u60c5\u51b5:</p> <ol> <li>\u4f7f\u7528\u5173\u7cfb\u8fd0\u7b97\u7b26(\u6761\u4ef6\u8fd0\u7b97\u7b26):&lt;\u3001&gt;\u3001&lt;=\u3001&gt;=\u3001==\u3001\uff01= </li> <li>\u4f7f\u7528<code>in</code>\u548c<code>not in</code>\u8fd0\u7b97\u7b26</li> <li>\u4f7f\u7528\u8fd4\u56de<code>bool</code>\u7684\u51fd\u6570</li> <li>\u4f7f\u7528\u903b\u8f91\u8fd0\u7b97\u7b26<code>\u4e0e\u6216\u975e:and or not</code></li> </ol> <p>\u57fa\u672c\u8fd0\u7b97 <pre><code>a += 5 #\u652f\u6301\u590d\u5408\u8fd0\u7b97\u7b26:\na = 3 + 4 #a = 7\na = 3 + \\\n    4     #a = 7\n\na++ #\u4e0d\u652f\u6301: \u53ea\u80fda+=1\n</code></pre></p>"},{"location":"coding/python/00_book_basic_note/#chapter-5","title":"chapter 5 \u6761\u4ef6\u548c\u9012\u5f52","text":"<pre><code>## (condition and recursion) \n\na = 2 ** 3 #2\u76843\u6b21\u65b9\na = 105/60 #result:1.75,  python2\u7684\u8bdd\u8fdb\u884c\u5730\u677f\u9664\uff0c\u7ed3\u679c\u4e3a1\uff0c 105.0/60\u624d\u4e3a1.75\na = 105 // 60#result:1    \"//\"(\u5730\u677f\u9664) is floor division operator,keep the int part of result\na = 105 % 60 #\u6c42\u4f59\u8fd0\u7b97(modules operator)  result:45\n\n#py##\u5e03\u5c14\u8fd0\u7b97(boolean expression)\n5==5 #result:True\n5==6 #result:False\n#py##\u5173\u7cfb\u8fd0\u7b97\u7b26(realtional operator)\nx != y\nx &gt;  y\nx &gt;= y\nx &lt;= y\n...\n#py##\u903b\u8f91\u8fd0\u7b97\u7b26(logical operators): and or not\nnot (3 &lt; 5) #result: False\n#py##\u6761\u4ef6\u8bed\u53e5(conditional statements): if boolean's condition:\nif x &lt; 0:\n    pass #todo, it can be operated normally\nif x % 2 == 0:\n    print(\"x is even\")\nelif: x &lt; 0:\n    print(\"x is less than zero\")\nelse:\n    print(\"x is odd\")\n#py##\u9012\u5f52(recursive,recursion)\ndef countdown(n):\n    if n &lt;= 0:\n        print(\"asdf\") #base case,end condition\n    else:\n        print(n)\n        countdown(n-1)\ndef print_n(s, n):\n    if n &lt;= 0:        #base case\n        return\n    print(s)\n    print_n(s, n-1)\n#py##\u952e\u76d8\u8f93\u5165: python3 'input()'   python2 'raw_input()',\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u7528\u6237\u952e\u5165\u7684\u5185\u5bb9\ntext = input() #\u6682\u505c\u7a0b\u5e8f\u6267\u884c(\u4e0d\u63d0\u793a\u4fe1\u606f),\u7b49\u5f85user\u8f93\u5165(\u8f93\u5165\u9047\u5230\u6362\u884c\u7b26\u7ed3\u675f), \u8f93\u516533.3,\u5219text\u4e3a\"33.3\", \u7136\u540e\u7ee7\u7eed\u6267\u884c\ntext = input(\"input your id:\") #\u6682\u505c\u7a0b\u5e8f\u6267\u884c(\u63d0\u793a\u4fe1\u606f)\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#chapter-6","title":"chapter 6 \u6709\u8fd4\u56de\u503c\u51fd\u6570","text":""},{"location":"coding/python/00_book_basic_note/#_2","title":"\u51fd\u6570\u793a\u4f8b","text":"<pre><code>import math\ndef area(radius):\n    radius = abs(radius) #radius\u4e3a\u8d1f\u65f6\u53d6\u53cd\n    return math.pi * radius * 2\nresult = area(5)\n\n## \u589e\u91cf\u5f0f\u5f00\u53d1(incremental development):\n### \u6bcf\u6b21\u53ea\u589e\u52a0\u548c\u6d4b\u8bd5\u5c11\u91cf\u4ee3\u7801\uff0c\u6765\u907f\u514d\u957f\u65f6\u95f4\u7684\u8c03\u8bd5\ndef distance(x1, y1, x2, y2):\n    dsquared = (x1 - x2) ** 2 + (y1 - y2) ** 2\n    # print(\"debug dsquared:\",dsquared) #\u811a\u624b\u67b6\u4ee3\u7801(scaffolding),\u8c03\u8bd5ok\u540e\u5e94\u5220\u9664\n    return math.sqrt(dsquared)\n\n##\u5e03\u5c14\u51fd\u6570(booleans returned func)\ndef is_divisible(x, y):\n    if x % y == 0:\n        return True\n    else:\n        return False\nif is_divisible(4, 2):\n    print(\"x is divisible by y\")\nelse:\n    print(\"x isn't divisible by y\")\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_3","title":"\u9012\u5f52\u51fd\u6570\u793a\u4f8b","text":"<p>\u6590\u6ce2\u90a3\u5951\u6570\u5217(fibonacci)</p> <ul> <li>questin:</li> </ul> <pre><code>fibonacci(0) = 0\nfibonacci(1) = 1\nfibonacci(n) = fibonacci(n - 1) + fibonacci(n - 2)\n</code></pre> <ul> <li>solution:</li> </ul> <pre><code>def fibonacci(n):\n    #guardian 1\n    if not isinstance(n, int): #\u4f7f\u7528\u5185\u5efa\u51fd\u6570isinstance\u786e\u8ba4\u53c2\u6570\u7c7b\u578b\n        print(\"func is only defined for integers.\")\n        return None\n    #guardian 2\n    elif n &lt; 0:\n        print(\"func is not defined for negative integers.\")\n        return None\n    #run normally\n    elif n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#chapter-7","title":"chapter 7 \u8fed\u4ee3","text":"<pre><code>#py##while\ndef countdown(n):\n    while n &gt; 0:\n        print(n)\n        if n == 5:\n            break\n        n = n - 1 #n--\u5c06\u8bed\u6cd5\u9519\u8bef, python\u4e0d\u652f\u6301\u81ea\u589e\u81ea\u51cf\n    print(\"Blastoff!\")\n\n#py##for\ndef print_n(n):\n    for i in range(n):#traverse: 0 -&gt; n-1\n        print(i)\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#chapter-8","title":"chapter 8 \u5b57\u7b26\u4e32","text":""},{"location":"coding/python/00_book_basic_note/#str","title":"<code>str</code>\u6027\u8d28\u5982\u4e0b:","text":"<ol> <li><code>[]</code>\u4e0b\u6807\u8bbf\u95ee:  <code>\u4f7f\u7528str[index]</code>\u8bbf\u95ee\u5b57\u7b26,\u4f46\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u6539\u53d8\u5b57\u7b26</li> <li><code>find</code>\u83b7\u53d6\u7d22\u5f15:\u5373<code>find('single_char')</code>\u8fd4\u56de\u7d22\u5f15,\u627e\u4e0d\u5230\u5219\u8fd4\u56de<code>-1</code></li> <li>\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u610f\u4e49\u4e00\u6837</li> <li>\u5b57\u7b26\u4e32\u4e4b\u95f4\u62fc\u63a5\u7528<code>+</code>\u5373\u53ef</li> <li>\u53ef\u7528<code>str * int</code>,\u5982<code>a='he ' * 3 #'he he he '</code></li> <li>\u652f\u6301<code>in</code>\u548c<code>not in</code>\u8fd0\u7b97\u7b26\u5224\u65ad\u5355\u4e2a\u5b57\u7b26\u6216\u5b50\u5b57\u7b26\u4e32\u662f\u5426\u5728\u67d0\u5b57\u7b26\u4e32\u4e2d</li> <li>\u4e0d\u652f\u6301<code>str</code>\u5173\u952e\u5b57\u521d\u59cb\u5316,\u5982\u4f7f\u7528<code>s1 = str()</code>\u975e\u6cd5</li> </ol>"},{"location":"coding/python/00_book_basic_note/#_4","title":"\u6570\u503c\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32","text":"<pre><code>str(&lt;numbre&gt;) \u548c %g(\u4ee3\u66ff%d\u548c%f)\u66f4\u901a\u7528\n#str\nres = str(43)         #'43'\n#%: \u6570\u503c %d %f %g  str:%s\nres = '%d' % 43       #'43'\nres = '%.3d' % 43     #'043' \u4ee53\u4f4d\u6570\u7684\u5f62\u5f0f\u6253\u5370\u4e00\u4e2a\u6570\u5b57\nres = '%d' % (43,)    #'43'\nres = '%d' % 43.0     #'43'\nres = '%f' % 43.0     #'43.000000'\nres = '%f' % 43.123456   #'43.123456'\nres = '%10f' % 43.123456  #' 43.123456'    \u603b\u957f10\u4f4d\uff0c(\u5982\u679c\u4e0d\u591f\u5219\u524d\u9762\u8865\u7a7a) (\u5982\u679c\u8d85\u8fc7\u5219\u4fdd\u7559\u6240\u6709\u6574\u6570\u90e8\u5206(\u5373\u662f\u6574\u6570\u670920\u4f4d)\uff0c\u5c0f\u6570\u70b9\u540e\u6700\u591a\u4fdd\u75596\u4f4d)\nres = '%.10f' % 43.123456 #'43.1234560000' \u5c0f\u6570\u70b9\u540e10\u4f4d\nres = 'I have %d apples.' % 2  #'I have 2 apples.'\nres = 'a:%d,b:%d is fine' % (1,2) #'a:1,b:2 is fine'\nres = 'are you %s , hi %s, OK' % ('dex', 'shuai') # 'are you dex , hi shuai, OK'\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_5","title":"\u904d\u5386\u548c\u62fc\u63a5","text":"<pre><code>a = \"asdf\"    #\u5b57\u7b26\u4e32\u4e3a\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217,\u53ef\u7528 [] \u8bbf\u95ee\u5355\u4e2a\u5b57\u7b26,index\u4ece0\u5f00\u59cb\nresult = a[1] #result: 's'\nindex = a.find('s')#\u8fd4\u56de's'43,, 1\nlength =len(a)#length: 4 \u5185\u5efa\u51fd\u6570\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6,\u5373\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u4e2a\u6570\nlast_char=a[len(a) - 1] #\u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n\nindex = 0            #traverse \u5b57\u7b26\u4e32 by while loop\nwhile index &lt; len(a):\n    single_char = a[index]\n    print(single_char)\n    index = index + 1\nfor single_char in a:#traverse \u5b57\u7b26\u4e32 by for loop\n    output = single_char + ' is ok'\n    print(output)\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_6","title":"\u5b57\u7b26\u4e32\u5207\u7247","text":"<ul> <li><code>s[i : j]</code>\u4e3a\u7d22\u5f15<code>i</code>\u5230<code>j-1</code>\u7684\u5b50\u4e32, \u82e5<code>i&gt;=j</code>,\u5219\u7ed3\u679c\u4e3a\u957f\u5ea60\u7684\u7a7a\u5b57\u7b26\u4e32</li> <li><code>s[ : j]</code>\u4e3a\u7d22\u5f15<code>0</code>\u5230<code>j-1</code>\u7684\u5b50\u4e32</li> <li><code>s[i : ]</code>\u4e3a\u7d22\u5f15<code>i</code>\u5230<code>s</code>\u7ed3\u5c3e\u7684\u5b50\u4e32</li> <li><code>s[ : ]</code>\u4e3a\u9996\u5230\u5c3e\u7684\u5168\u90e8</li> </ul> <pre><code>s = 'Monty Python'\nresult = s[0 : 5] #result:\"Monty\"\ns = \"asdf jkl\"\nresult = s[:3]\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#immutable","title":"\u5b57\u7b26\u4e32\u5185\u5b57\u7b26\u4e0d\u53ef\u6539\u53d8(immutable)","text":"<pre><code>greeting = \"hello susha\"\ngreeting[0] = 'H' #\u62a5\u9519\nnew_str = 'H' + greeting[1 : ] #\u53ea\u80fd\u521b\u5efa\u65b0\u7684\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_7","title":"\u5b57\u7b26\u4e32\u65b9\u6cd5","text":"\u65b9\u6cd5\u540d \u529f\u80fd <code>str.find(sub_str, start_index, end_index)</code> \u8fd4\u56desub_str\u9996\u5b57\u7b26\u5728str\u4e2d\u7684\u7d22\u5f15,start_index\u9ed8\u8ba4\u4e3a0,\u82e5\u8bbe\u7f6eend_index\uff0c\u5219\u641c\u7d22\u8303\u56f4\u4e0d\u5305\u542bend_index <code>str.capitalize()</code> \u5c06str\u9996\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5e76\u8fd4\u56de,\u672a\u6539\u53d8\u539f\u5b57\u7b26\u4e32 <code>str.upper()</code> \u5c06str\u5168\u90e8\u8f6c\u6362\u4e3a\u5927\u5199\u5e76\u8fd4\u56de,\u672a\u6539\u53d8\u539f\u5b57\u7b26\u4e32 <code>str.lower()</code> \u5c06str\u5168\u90e8\u8f6c\u6362\u4e3a\u5c0f\u5199\u5e76\u8fd4\u56de,\u672a\u6539\u53d8\u539f\u5b57\u7b26\u4e32 <code>str.isupper()</code> \u68c0\u67e5str\u5168\u90e8\u5b57\u7b26\u662f\u5426\u4e3a\u5927\u5199,\u662f\u8fd4\u56deTrue <code>str.islower()</code> \u68c0\u67e5str\u5168\u90e8\u5b57\u7b26\u662f\u5426\u4e3a\u5c0f\u5199,\u662f\u8fd4\u56deTrue <code>str.strip()</code> \u5220\u9664\u5b57\u7b26\u4e32\u9996\u5c3e\u7a7a\u683c(\u4e2d\u95f4\u6709\u7a7a\u683c\u4e0d\u5904\u7406)\u5e76\u8fd4\u56de,\u672a\u6539\u53d8\u539f\u5b57\u7b26\u4e32 <code>str.split(delimiter)</code> \u5c06\u5b57\u7b26\u4e32\u6839\u636edelimiter(default<code>' '</code>)\u8f6c\u6362\u4e3a\u5217\u8868\u5e76\u8fd4\u56de,\u672a\u6539\u53d8\u539f\u5b57\u7b26\u4e32"},{"location":"coding/python/00_book_basic_note/#innot-in","title":"<code>in</code>\u548c<code>not in</code>\u8fd0\u7b97\u7b26","text":"<p><code>sub_str in str</code>:sub_str\u51fa\u73b0\u5728str\u4e2d,\u5219\u8fd4\u56deTrue,\u5426\u5219\u4e3aFalse</p> <p><code>sub_str not in str</code>:sub_str\u4e0d\u51fa\u73b0\u5728str\u4e2d,\u5219\u8fd4\u56deTrue,\u5426\u5219\u4e3aFalse</p>"},{"location":"coding/python/00_book_basic_note/#_8","title":"\u5b57\u7b26\u4e32\u6bd4\u8f83","text":"<p><code>str1 == str2</code>:\u76f8\u7b49\u5219\u8fd4\u56deTrue,\u6bd4\u8f83\u4e4b\u524d\u53ef\u7edf\u4e00\u5927\u5c0f\u5199</p>"},{"location":"coding/python/00_book_basic_note/#chapter-9-list","title":"chapter 9 \u5217\u8868(list)","text":"<p>\u5b57\u7b26\u4e32\u662f\u7531\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217,\u800c\u5217\u8868\u662f\u540c\u4e00\u6216\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20(element\u6216item)\u7ec4\u6210\u7684\u5e8f\u5217</p>"},{"location":"coding/python/00_book_basic_note/#list","title":"<code>list</code>\u6027\u8d28:","text":"<ol> <li>\u53ef\u7528<code>[index]</code>\u8bbf\u95ee\u5143\u7d20,\u53ef\u901a\u8fc7\u4e0b\u6807\u6539\u53d8\u5143\u7d20</li> <li>\u53ef\u7528<code>for</code>\u904d\u5386: <code>for elem in sample_list: ...</code></li> <li>\u53ef\u7528<code>in</code>\u548c<code>not in</code>\u8fd0\u7b97\u7b26</li> <li>\u53ef\u7528<code>+</code>\u8fd0\u7b97\u7b26\u62fc\u63a5\u591a\u4e2a\u5217\u8868</li> <li>\u53ef\u7528<code>list * int</code>,\u5982<code>a=[0] * 3 #[0,0,0]</code></li> <li> <p>\u4e0d\u652f\u6301<code>list</code>\u5173\u952e\u5b57\u521d\u59cb\u5316,\u5982\u4f7f\u7528<code>l1 = list()</code>\u975e\u6cd5   <pre><code>empty_list = [] #\u7a7a\u5217\u8868\nsimple_list= [1, 2, 3, 4] #\u7b80\u5355\u5217\u8868\nnested_list = [1, 4.3, 'dexter', [10, 20]] #(\u5d4c\u5957nested\u5217\u8868)\nprint(\"different list:\", empty_list, simple_list, nested_list)\n</code></pre></p> </li> <li> <p>\u5217\u8868\u5143\u7d20\u53ef\u88ab\u6539\u53d8(update element)   <pre><code>test = [1, 2, 3]\ntest[1] = 44 #test\u6210\u4e3a[1, 44, 3]\n</code></pre></p> </li> <li>\u5217\u8868\u64cd\u4f5c   <pre><code># +\u8fd0\u7b97\u7b26\u62fc\u63a5\u591a\u4e2a\u5217\u8868,\u8fd4\u56de\u65b0\u5217\u8868\na = [1, 2, 3]\nb = [4, 5, 6]\nc = a + b #c\u4e3a [1, 2, 3, 4, 5, 6]\n# *\u8fd0\u7b97\u7b26\u4ee5\u7ed9\u5b9a\u6b21\u6570\u7684\u91cd\u590d\u4e00\u4e2a\u5217\u8868,\u8fd4\u56de\u65b0\u5217\u8868\na=[0] * 3 #[0,0,0]\n</code></pre></li> <li> <p>\u5217\u8868\u5207\u7247 slice:\u540c\u5b57\u7b26\u4e32\u5207\u7247,\u8fd4\u56de\u65b0\u5217\u8868</p> </li> <li> <p>\u5217\u8868\u548c\u5b57\u7b26\u4e32\u4e92\u76f8\u8f6c\u6362   <pre><code>#str-&gt;list\nstr = 'sp ok '\nstr_list = list(str)  #['s', 'p', ' ', 'o', 'k', ' ']\nstr_list = str.split()#['sp', 'ok']\n\nstr = ' spam1-spam2-spam3 '\ndelimiter = '-'\nstr_list = str.split(delimiter) #[' spam1', 'spam2', 'spam3 '],\u6307\u5b9a\u5206\u9694\u7b26'-`\n\n#list-&gt;str\nstr = delimiter.join(str_list)\n</code></pre></p> </li> <li> <p>\u5bf9\u8c61\u548c\u503c:\u5217\u8868\u4e0d\u540c\u4e8e\u6570\u503c\u548c\u5b57\u7b26\u4e32</p> <p>\u521b\u5efa\u76f8\u540c\u7684\u6570\u503c\u6216\u5b57\u7b26\u4e32\u53d8\u91cf\u4ec5\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u76f8\u540c\u7684\u5217\u8868\u53d8\u91cf\u5219\u4e3a\u4e0d\u540c\u7684\u5bf9\u8c61   <pre><code>a = 4\nb = 4\na is b #\u8fd4\u56deTrue\na = 1  #b=4\na is b #\u8fd4\u56deFalse\n\na = 'hello'\nb = 'hello'\na is b #\u8fd4\u56deTrue\nc = a  #\u5b57\u7b26\u4e32\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61,\u53ef\u4f7f\u7528\u522b\u540d\nc is a #\u8fd4\u56deTrue\n\n#\u907f\u514d\u5bf9\u4e8e\u53ef\u53d8\u5bf9\u8c61\u4f7f\u7528\u522b\u540d\u76f8\u5bf9\u66f4\u5b89\u5168\na = [1,2]\nb = [1,2]\na is b #\u8fd4\u56deFalse\nc = a  #c\u4e3aa\u7684\u522b\u540dor\u5f15\u7528,\u901a\u8fc7c\u548ca\u90fd\u53ef\u6539\u53d8\u5bf9\u5e94\u7684\u5bf9\u8c61\nc is b #\u8fd4\u56deTrue, \n</code></pre></p> </li> <li> <p>\u5217\u8868\u53c2\u6570</p> <p>\u5c06\u4e00\u4e2a\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u5c06\u5f97\u5230\u8fd9\u4e2a\u5217\u8868\u7684\u4e00\u4e2a\u5f15\u7528\uff0c\u51fd\u6570\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4f1a\u5728\u8c03\u7528\u8005\u4e2d\u6709\u6240\u4f53\u73b0   <pre><code>def delete_head(t):\n  del t[0]\n\nletters = ['a', 'b', 'c']\ndelete_head(letters) #letters\u6240\u6307\u5bf9\u8c61\u5728main\u4ee5\u53cadelete_head\u51fd\u6570\u5185\u5171\u4eab\n#letters \u5df2\u4e3a ['b', 'c']\n</code></pre></p> </li> </ol>"},{"location":"coding/python/00_book_basic_note/#_9","title":"\u5217\u8868\u65b9\u6cd5","text":"<p>(\u5927\u90e8\u5206\u7684\u5217\u8868\u65b9\u6cd5\u90fd\u662f\u65e0\u8fd4\u56de\u503c\u7684,\u4f1a\u6539\u53d8\u5217\u8868)</p> \u65b9\u6cd5\u540d \u529f\u80fd <code>list.append(elem)</code> \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20,\u8fd4\u56deNone <code>list.extend(list2)</code> \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u53e6\u4e00\u4e2a\u5217\u8868,\u7c7b\u4f3c<code>+\u8fd0\u7b97\u7b26\u62fc\u63a5\u591a\u4e2a\u5217\u8868</code>,\u8fd4\u56deNone <code>list.sort()</code> \u5bf9\u5217\u8868\u5143\u7d20\u8fdb\u884c\u6392\u5e8f,\u6539\u53d8\u5217\u8868\u5185\u5143\u7d20\u987a\u5e8f,\u8fd4\u56deNone <code>list.pop()</code> \u79fb\u9664\u5217\u8868\u672b\u5c3e\u5143\u7d20,\u5e76\u8fd4\u56de\u88ab\u5220\u5143\u7d20**str <code>list.pop(index)</code> \u79fb\u9664\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u88ab\u5220\u5143\u7d20 <code>list.remove(elem)</code> \u79fb\u9664\u6307\u5b9a\u5143\u7d20(\u4e0d\u77e5\u9053index\u65f6),\u4f1a\u6539\u53d8\u5217\u8868,\u8fd4\u56deNone <code>list.clear()</code> \u6e05\u7a7a\u5217\u8868 <code>list.count(elem)</code> \u8fd4\u56de\u6307\u5b9a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 <code>list.index(elem)</code> \u8fd4\u56de\u6307\u5b9a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15 <code>list.reverse()</code> \u53cd\u8f6c\u5217\u8868 <code>list.copy()</code> \u8fd4\u56de\u5217\u8868\u7684\u6d45\u62f7\u8d1d <code>list.insert(index, elem)</code> \u5728\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20,\u8fd4\u56deNone <code>del list[index]</code> \u5220\u9664\u6307\u5b9aindex\u7684\u5143\u7d20\uff0c\u4f1a\u6539\u53d8\u5217\u8868 <code>sum(list)</code> \u5bf9\u5217\u8868list\u5185\u5143\u7d20\u6c42\u548c <code>min(list\\|tuple\\|dict)</code> \u8fd4\u56de\u5217\u8868\u6216\u5143\u7ec4\u6216\u5b57\u5178\u4e2d\u6700\u5c0f\u503c <code>max(list\\|tuple\\|dict)</code> \u8fd4\u56de\u5217\u8868\u6216\u5143\u7ec4\u6216\u5b57\u5178\u4e2d\u6700\u5927\u503c"},{"location":"coding/python/00_book_basic_note/#chapter-10-dictionary-","title":"chapter 10 \u5b57\u5178(dictionary)-\u5373\u6620\u5c04","text":""},{"location":"coding/python/00_book_basic_note/#dict","title":"<code>dict</code>\u6027\u8d28:","text":"<ol> <li>\u5143\u7d20element\u6216\u9879item\u4e3a\u952e\u503c\u5bf9\uff08key-value pair),key\u4e0d\u53ef\u91cd\u590d, value\u4e5f\u53ef\u4ee5\u4e3a\u5217\u8868</li> <li>\u5b57\u5178\u5185\u5143\u7d20\u987a\u5e8f\u4e0d\u53ef\u9884\u6d4b,\u5b57\u5178\u7684\u5143\u7d20\u4e0d\u4f7f\u7528\u6574\u6570\u7d22\u5f15\u6765\u7d22\u5f15\uff0c\u800c\u662f\u7528\u952e\u6765\u67e5\u627e\u5bf9\u5e94\u7684\u503c</li> <li>\u5b57\u5178\u901a\u8fc7<code>[]</code>\u7ed3\u5408key\u53ef\u4e3a\u5143\u7ec4tuple</li> <li>\u652f\u6301<code>dict</code>\u5173\u952e\u5b57\u521d\u59cb\u5316,\u5982\u4f7f\u7528<code>d1 = dict()</code></li> <li>\u53ef\u7528<code>in</code>\u548c<code>not in</code>\u8fd0\u7b97\u7b26\u5224\u65ad\u5b57\u5178\u5185\u662f\u5426\u5305\u542b\u67d0<code>key</code></li> <li>\u4e0d\u652f\u6301<code>+</code>\u548c<code>*</code>\u62fc\u63a5\u5b57\u5178</li> </ol>"},{"location":"coding/python/00_book_basic_note/#_10","title":"\u521b\u5efa\u53ca\u521d\u59cb\u5316","text":"<pre><code>dict_test1 = dict() #\u521b\u5efa\u7a7a\u5b57\u5178 {}\ndict_test2 = {}     #\u521b\u5efa\u7a7a\u5b57\u5178 {}\ndict_test2['one'] = 'dexter' #dict_test2\u4e2d\u6dfb\u52a0\u5143\u7d20\n\ndict_test3 = {'one': 'uno', 'two': 'dos', 'three': 'tres'}#\u521b\u5efa\u975e\u7a7a\u5b57\u5178\nvalue = dict_test3['one'] #\u6839\u636ekey\u8bbf\u95eevalue\nnum = len(dict_test3)     #\u83b7\u53d6\u5143\u7d20\u4e2a\u6570\n\n#\u5b57\u5178\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u952e, \u5b58\u5728-&gt;True,\u5426\u5219False\n#\u5b57\u5178\u539f\u7406\u4e3a\u54c8\u5e0c\u8868\uff08hashtable\uff09\u7b97\u6cd5,\u65e0\u8bba\u5b57\u5178\u4e2d\u6709\u591a\u5c11\u9879\uff0cin \u8fd0\u7b97\u7b26\u641c\u7d22\u6240\u9700\u7684\u65f6\u95f4\u90fd\u4e00\u6837\nis_item = 'one' in dict_test3\n\n#\u901a\u8fc7dict\u548czip\u7ed3\u5408\u521b\u5efa\u5b57\u5178\nd = dict(zip('abc', range(4))) #{'a': 0, 'b': 1, 'c': 2}\nd = dict(zip('abcd', range(3)))#{'a': 0, 'b': 1, 'c': 2}\nd['dexter','lyu'] = 1214 #tuple\u5143\u7ec4\u4f5c\u4e3a\u952e,\u7b49\u540c\u4e8e d[('dexter','lyu')] = 1214\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_11","title":"\u5b57\u5178\u65b9\u6cd5","text":"<p><code>items()</code>\u8fd4\u56de\u7531\u591a\u4e2a\u5143\u7ec4\u7ec4\u6210\u7684\u5e8f\u5217,\u5176\u4e2d\u6bcf\u4e2a\u5143\u7ec4\u662f\u4e00\u4e2a\u952e\u503c\u5bf9   <pre><code>d = {'a':0, 'b':1, 'c':2}\nt = d.items() #dict_items object ([('c', 2), ('a', 0), ('b', 1)])\n#\u904d\u5386\u5b57\u5178-\u8f6c\u6362\u4e3atuple\u540e\u904d\u5386tuple\nfor k, v in d.tiems():\n    print(k, v) #\u540c\u65f6\u6253\u5370key-value\n#\u904d\u5386\u5b57\u5178-\u76f4\u63a5\u904d\u5386\nfor k in d:\n    print(k, d[k])\n# \u5982\u679c\u8981\u4ee5\u786e\u5b9a\u7684\u987a\u5e8f\u904d\u5386\u5b57\u5178\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u65b9\u6cd5 sorted\ndef print_dict_sorted(d):\n    for key in sorted(d):\n        print(key, d[key])\n</code></pre></p>"},{"location":"coding/python/00_book_basic_note/#_12","title":"\u5b57\u5178\u4f5c\u4e3a\u8ba1\u6570\u5668\u96c6\u5408","text":"<pre><code>def histogram(str):\n    d = {}\n    for c in str:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    return d\nh = histogram(\"a\")  #\u5047\u8bbe h = {'a': 2}\nnum = h.get('a')    #\u8fd4\u56de2,\u82e5\u5b57\u5178h\u5185\u6ca1\u6709\u5173\u952e\u5b57\u4e3a'a',\u8fd4\u56deNone\nnum = h.get('a', 0) #\u8fd4\u56de2   get(key, default_value)\nnum = h.get('a', 11)#\u8fd4\u56de2  h\u5185\u6ca1\u6709key\u4e3a'a'\u7684\u952e,\u8fd4\u56de\u5b9e\u9645\u7684value\nnum = h.get('b', 11)#\u8fd4\u56de11,h\u5185\u6ca1\u6709key\u4e3a'b'\u7684\u952e,\u8fd4\u56dedefault_value\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#value-key","title":"\u9006\u5411\u67e5\u627e(\u901a\u8fc7value \u627e key)","text":"<p>\u67e5\u627e\u901f\u5ea6\u6bd4\u901a\u8fc7key-&gt;value\u6162\u5f88\u591a   <pre><code>#\u63a5\u53d7\u4e00\u4e2a\u503c\u5e76\u8fd4\u56de\u6620\u5c04\u5230\u8be5\u503c\u7684\u7b2c\u4e00\u4e2a\u952e\ndef reverse_lookup(d, v):\n    for k in d:\n        if d[k] == v:\n            return k\n    raise LookupError('value does not appear in the dictionary') #raise\u8bed\u53e5\u89e6\u53d1\u5f02\u5e38,\u8868\u793a\u67e5\u8be2\u5931\u8d25\n</code></pre></p>"},{"location":"coding/python/00_book_basic_note/#_13","title":"\u5012\u8f6c\u5b57\u5178","text":"<pre><code>def invert_dict(d):\n    d_inverse = dict() #\u540cd_inverse = {}\n    for key in d:\n        val = d[key]\n        if val no in d_inverse:\n            d_inverse[val] = [key]\n        else:\n            d_inverse[val].append(key)\n    return d_inverse\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_14","title":"\u793a\u4f8b:\u5907\u5fd8\u5f55","text":"<p>\u6590\u6ce2\u90a3\u5951\u6570\u5217(fibonacci)</p> <ul> <li> <p><code>questin:</code> <pre><code>fibonacci(0) = 0\nfibonacci(1) = 1\nfibonacci(n) = fibonacci(n - 1) + fibonacci(n - 2)\n</code></pre></p> </li> <li> <p><code>solution:</code> <pre><code>konw = {0:0, 1:1}\ndef fibonacci(n):\n    if n in know:\n        return know[n]\n    res = fibonacci(n - 1) + fibonacci(n - 2)\n    know[n] = res\n    return res\n</code></pre></p> </li> </ul>"},{"location":"coding/python/00_book_basic_note/#chapter-11-tuple","title":"chapter 11 \u5143\u7ec4(tuple)","text":"<p>\u4e0e\u5217\u8868\u76f8\u4f3c,\u5143\u7d20\u7c7b\u578b\u4e5f\u53ef\u4e0d\u4e00\u6837,\u4f46\u5143\u7d20\u4e0d\u53ef\u6539\u53d8</p>"},{"location":"coding/python/00_book_basic_note/#_15","title":"\u57fa\u672c\u6027\u8d28","text":"<ol> <li>\u5217\u8868\u5927\u591a\u64cd\u4f5c\u9002\u7528\u4e8e\u5143\u7ec4,\u5982\u4e0b\u6807<code>[]</code>\u8bbf\u95ee\u3001\u5207\u7247\u3001\u4e0d\u53ef\u901a\u8fc7\u4e0b\u6807\u6539\u53d8\u5143\u7d20\u901a\u8fc7<code>[]</code>\u4fee\u6539\u5143\u7d20\u5c06\u62a5\u9519</li> <li>\u548c\u5217\u8868\u7c7b\u4f3c,\u5b8c\u5168\u76f8\u540c\u7684\u4e24\u4e2a\u5143\u7ec4t1\u548ct2, <code>t1 is t2</code>\u4e3a<code>False</code>. <code>t1 = t2</code>\u540e<code>t1 is t2</code>\u624d\u4e3a<code>True</code>.\u4f7f\u7528\u522b\u540d\u5b89\u5168,\u56e0\u4e3a\u5143\u7d20\u4e0d\u53ef\u6539</li> <li>\u5173\u7cfb\u8fd0\u7b97\u7b26\u9002\u7528(\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u6bd4\u8f83)<code>(0, 1, 2) &lt; (0, 3, 4)</code>-&gt;<code>True</code>,\u800c<code>(0, 1, 2000000) &lt; (0, 3, 4)</code>-&gt;<code>False</code></li> <li>\u652f\u6301<code>tupe</code>\u5173\u952e\u5b57\u521d\u59cb\u5316,\u5982\u4f7f\u7528<code>t1 = tuple()</code></li> <li>\u652f\u6301<code>t1+t2</code>,\u8fd4\u56de\u62fc\u63a5\u540etuple,  \u4f46t1\u548c2\u5143\u7d20\u4e2a\u6570\u548c\u7c7b\u578b\u987b\u76f8\u540c</li> <li>\u652f\u6301<code>t1*3</code>,\u8fd4\u56de\u62fc\u63a5\u540etuple</li> <li>\u652f\u6301<code>in</code>\u548c<code>not in</code>\u8fd0\u7b97\u7b26</li> </ol>"},{"location":"coding/python/00_book_basic_note/#_16","title":"\u521b\u5efa\u53ca\u521d\u59cb\u5316","text":"<pre><code>t = tuple() #\u521b\u5efa\u7a7a\u7684tuple\nt = ()      #\u521b\u5efa\u7a7a\u7684tuple\nt = 'a', 'b', 'c', 'd', 'e'\nt = ('a', 'b', 'c', 'd', 'e')\n\nt2 = 'a',   #t2\u4e3a\u4e00\u4e2a\u5143\u7d20\u7684tuple\nt2 = ('a',) #t2\u4e3a\u4e00\u4e2a\u5143\u7d20\u7684tuple\nt2 = 'a'    #t2\u4e3a\u5b57\u7b26 'a'\nt2 = ('a')  #t2\u4e3a\u5b57\u7b26 'a'\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_17","title":"\u5143\u7ec4\u8d4b\u503c","text":"<pre><code>#\u4ea4\u6362-1\ntmp = a\na = b\nb = tmp\n\n#\u4ea4\u6362-2\na,b = b,a\n#\u8d4b\u503c,\u4e00\u4e0b\u4e0d\u7528\u65b9\u5f0f\u8d4b\u503c\u7ed3\u679c\u90fd\u4e00\u81f4,a = 1,b=2,c=3\na,b,c = 1,2,3   #\u7b49\u53f7\u4e24\u8fb9\u6570\u76ee\u987b\u76f8\u540c\na,b,c = [1,2,3] #list assignment\na,b,c = (1,2,3) #tuple assignment\na,b,c = {1:'a',2:'b',3:'c'} #dict assignment\n\n#also list assignment\naddr = 'monty@python.org'\nuname, domain = addr.split('@') #uname:monty  domain:python.org\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_18","title":"\u5143\u7ec4\u4f5c\u4e3a\u8fd4\u56de\u503c","text":"<pre><code>res = divmod(7, 3) #res=(2, 1) \u5206\u522b\u4e3a\u5546\u548c\u4f59\u6570\nresult, mod = res  #result:2  mod:1\n\n#\u8fd4\u56de\u5143\u7ec4\u7684\u51fd\u6570\ndef min_max(t):\n    return min(t), max(t)\nres = min_max([0,1,2,-5]) #res=(-5, 2)\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_19","title":"\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5143\u7ec4","text":"<pre><code>#\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570\u3002 \u4ee5 \u201c*\u201d \u5f00\u5934\u7684\u5f62\u53c2\u5c06\u8f93\u5165\u7684\u53c2\u6570 \u6c47\u96c6 \u5230\u4e00\u4e2a\u5143\u7ec4\u4e2d\ndef printall(*args):\n    print(args)\nprintall(1, 2.0, '3')\n\nt = (7, 3)\nres = divmod(t) #TypeError: divmod expected 2 arguments, got 1\nres = divmod(*t)#ok, \u5c06\u8fd9\u4e2a\u5143\u7ec4\u5206\u6563\uff0c\u5b83\u5c31\u53ef\u4ee5\u88ab\u4f20\u9012\u8fdb\u51fd\u6570\nres = max(t)    #ok,\nres = min(t)    #ok,\nres = sum(t)    #ok,\nres = sum((7,3))  #ok\nres = sum(7,3)  #error\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_20","title":"\u5143\u7ec4\u548c\u5217\u8868","text":"<pre><code>s = 'abc'\nt = [0,1,2]\nzip_obj = zip(s, t) #\u8fd4\u56dezip\u5bf9\u8c61 ('a', 0) ('b', 1) ('c', 2)\n\n#[('a', 0), ('b', 1), ('c', 2)]\nzip_list = list(zip_obj) #zip_obj\u5c06\u4e3a\u7a7a\uff0c\u5185\u5bb9\u88ab\u7a83\u53d6\n\n#zip\u5bf9\u8c61\u4f7f\u7528for\u904d\u5386\nfor pair in zip(s, t):\n    print(pair)\n\n#enumerate\u7684\u8fd4\u56de\u7ed3\u679c\u662f\u4e00\u4e2a\u679a\u4e3e\u5bf9\u8c61\uff08enumerate object\uff09\nfor idx, elem in enumerate('abc'):#\u5206\u522b\u8f93\u51fa\u4e0b\u6807\u53ca\u5bf9\u5e94\u7684\u6bcf\u4e2a\u5b57\u7b26\n    print(idx, elem)\n</code></pre>"},{"location":"coding/python/00_book_basic_note/#_21","title":"\u5143\u7ec4\u548c\u5b57\u5178","text":"<p>\u53c2\u89c1\u7b2c\u5341\u7ae0\u5b57\u5178\u90e8\u5206</p>"},{"location":"coding/python/00_book_basic_note/#appendix-tips","title":"Appendix: tips","text":"<ul> <li> <p>\u5168\u5c40\u53d8\u91cf<code>global</code></p> <p>\u51fd\u6570\u5916\u7533\u660e\u7684\u90fd\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u7533\u660e\u4e4b\u540e\u7684\u5730\u65b9\u624d\u80fd\u4f7f\u7528\uff0c\u51fd\u6570\u5185\u540c\u540d\u53d8\u91cf\u5c06\u66ff\u6362\u51fd\u6570\u5916\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u51fd\u6570\u5185\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u9700\u7528global\u5173\u952e\u5b57   <pre><code>var1 = 1 #\u51fd\u6570\u5916\u5168\u5c40\u53d8\u91cf\n\ndef func1():\n  var1 = 2 #\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u4e0d\u4f1a\u4fee\u6539\u51fd\u6570\u5916\u7684\u540c\u540d\u53d8\u91cf\n\ndef func2():\n  global var1\n  var1 = 2 #\u4fee\u6539\u51fd\u6570\u5916\u7684var1\n</code></pre></p> </li> <li> <p>\u5c40\u90e8\u53d8\u91cf</p> <p>\u51fd\u6570\u5185\u7684\u90fd\u662f\u5c40\u90e8\u53d8\u91cf\uff0cfor\u5185\u5b9a\u4e49\u7684\u4e34\u65f6\u53d8\u91cf\u5728for\u5916\u4e5f\u662f\u53ef\u7528\u7684\uff0c\u4f46\u51fa\u4e86\u51fd\u6570\u5c31\u4e0d\u53ef\u7528   <pre><code>def func():\n  local_var = 1\n  for i range(5):\n    tmp_var = 2 #\u4f5c\u7528\u57df\u4e0d\u4ec5\u662ffor\u5185\uff0cfor\u5916\u540e\u9762\u4e5f\u53ef\u4ee5\uff0c\u548cC++\u7684\u91cd\u5927\u533a\u522b\uff01\uff01\uff01\uff01\n\n  #local_var\u548ctmp_var\u90fd\u4e3a\u5f53\u524d\u51fd\u6570`func`\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u7533\u660e\u540e\u90fd\u53ef\u7528\n  sum_var = local_var + tmp_var \n</code></pre></p> </li> <li> <p>\u5217\u8868list\u7684clear\u548c<code>=[]</code> <pre><code>list1 = [1,2,3]\nlist2 = [4,5,6]\ndata = []\ndata.append(list1) \ndata.append(list2) \n\nlist1.clear() #\u5c06\u4f1a\u5bfc\u81f4\u5171\u540c\u5f15\u7528\u7684data\u5185\u7684\u6570\u636e\u4e5f\u6e05\u7a7a\nlist2 = []    #\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u7a7a\u5217\u8868\u5bf9\u8c61\u5e76\u5c06list2\u5f15\u7528\u65b0\u7684\u5bf9\u8c61\n</code></pre></p> </li> </ul>"},{"location":"coding/python/01_book_basic_class/","title":"Python \u7c7b\u548c\u5bf9\u8c61","text":""},{"location":"coding/python/01_book_basic_class/#chapter-15","title":"chapter 15 \u7c7b\u548c\u5bf9\u8c61","text":""},{"location":"coding/python/01_book_basic_class/#_1","title":"\u5b9e\u4f8b","text":"<pre><code>    class Point:\n        \"\"\"Represent a point in 2D space.\n        attributes. x, y.\n        \"\"\"\n        current_pt = 0 #\u7c7b\u7684\u53d8\u91cf, \u76f8\u5f53\u4e8ecpp\u7684static\u6210\u5458\u53d8\u91cf\n        \"\"\"\u7279\u6b8a\u65b9\u6cd5\"\"\"\n        \"\"\"\u901a\u5e38__init__\u65b9\u6cd5\u7684\u53c2\u6570\u548c\u5c5e\u6027\u540d\u79f0\u4e00\u6837\"\"\"\n        def __init__(self, x = 0, y = 0):\n            #\u7c7b\u5b9e\u4f8b\u7684\u53d8\u91cf\n            self.x = x\n            self.y = y\n\n    class Rectangle:\n        \"\"\"Represents a rectangle.\n\n        attributes: width, height, corner(Point's object:x,y).\n        \"\"\"\n\n        \"\"\"\u7279\u6b8a\u65b9\u6cd5\"\"\"\n        \"\"\"\u901a\u5e38__init__\u65b9\u6cd5\u7684\u53c2\u6570\u548c\u5c5e\u6027\u540d\u79f0\u4e00\u6837\"\"\"\n        def __init__(self, width = 0, height = 0, corner = Point()):\n            #\u7c7b\u5b9e\u4f8b\u7684\u53d8\u91cf\n            self.width = width\n            self.height = height\n            self.corner = corner\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#features","title":"Features","text":"<ul> <li>\u5bf9\u8c61\u662f\u53ef\u53d8\u7684 <p>\u53ef\u4ee5\u901a\u8fc7\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\u6765\u6539\u53d8\u8fd9\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001</p> </li> <li>\u5bf9\u8c61\u8d4b\u503c <p>\u522b\u540d\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5730\u65b9\u7684\u53d8\u52a8\u53ef\u80fd\u5bf9\u53e6\u4e00\u4e2a\u5730\u65b9\u9020\u6210\u9884\u6599\u4e4b\u5916\u7684\u5f71\u54cd   <pre><code>import copy #\u53ef\u4ee5\u590d\u5236\u4efb\u4f55\u5bf9\u8c61(\u4ec5\u4ec5\u5c40\u9650\u4e8e\u7c7b\u7684\u5c5e\u6027\u90fd\u4e3a\u5185\u7f6e\u7c7b\u578b)\np1 = Point()\np.x = 3.0\np.y = 4.0\n#copy\np2 = copy.copy(p1)\np1 is p2 #False \u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\np1 == p2 #False \u53d8\u91cf\u6807\u8bc6\u7b26\u4e5f\u4e0d\u540c\nisinstance(p1, Point) #\u5185\u7f6e\u51fd\u6570\u5224\u65ad\u81ea\u5b9a\u4e49\u7c7b\u578b True\nhasattr(p1, 'x') #\u5185\u7f6e\u51fd\u6570\u5224\u65ad\u5bf9\u8c61p1\u662f\u5426\u6709\u5c5e\u6027'x'\nvars(p1) #\u5185\u7f6e\u51fd\u6570\u8bbf\u95ee\u7c7b\u5bf9\u8c61\u7684\u5c5e\u6027,\u8fd4\u56de\u5b57\u5178 {'y': 4, 'x': 3}\ndef print_attributes(obj):\n    for attr in var(obj):\n        print(attr, getattr(obj, attr)) #\u5185\u7f6e\u51fd\u6570getattr\u6839\u636e\u5bf9\u8c61\u548c\u5c5e\u6027\u540d\u79f0(\u5b57\u7b26\u4e32)\u8fd4\u56de\u5c5e\u6027\u7684\u503c\ntry:\n    x = p1.x\nexcept AttributeError:\n    x = 0\n\nbox1 = Rectangle()\nbox2 = copy.copy(box1)\nbox1 is box2 #False\nbox1.corner is box2.corner #True \u6d45\u590d\u5236,\u6ca1\u6709\u590d\u5236\u5d4c\u5957\u7684Point\u5bf9\u8c61\n\n#\u6df1\u590d\u5236\n#\u4e0d\u4ec5\u53ef\u4ee5\u590d\u5236\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u590d\u5236\u8fd9\u4e2a\u5bf9\u8c61\u6240\u5f15\u7528\u7684\u5bf9\u8c61\uff0c \u751a\u81f3\u53ef\u4ee5\u590d\u5236\u8fd9\u4e2a\u5bf9\u8c61\u6240\u5f15\u7528\u7684\u5bf9\u8c61\u6240\u5f15\u7528\u7684\u5bf9\u8c61\nbox3 = copy.deepcopy(box1) \nbox3.corner is box1.corner #False\n</code></pre></p> </li> </ul>"},{"location":"coding/python/01_book_basic_class/#chapter-16","title":"chapter 16 \u7c7b\u548c\u51fd\u6570","text":""},{"location":"coding/python/01_book_basic_class/#_2","title":"\u7c7b\u793a\u4f8b","text":"<pre><code>class Time:\n    \"\"\"Represents the time of day.\n\n    attribute:hour, minute, second\n    \"\"\"\n    current_time = 0 #\u7c7b\u7684\u53d8\u91cf, \u76f8\u5f53\u4e8ecpp\u7684static\u6210\u5458\u53d8\u91cf\n    \"\"\"\u7279\u6b8a\u65b9\u6cd5\"\"\"\n    \"\"\"\u901a\u5e38__init__\u65b9\u6cd5\u7684\u53c2\u6570\u548c\u5c5e\u6027\u540d\u79f0\u4e00\u6837\"\"\"\n    def __init__(self, hour = 0, minute = 0, second = 0):\n        #\u7c7b\u5b9e\u4f8b\u7684\u53d8\u91cf\n        self.hour = hour\n        self.minute = minute\n        self.second = second\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#_3","title":"\u51fd\u6570\u5b9e\u4f8b","text":"<pre><code>def print_time(time):\n    print('%.2d:%.2d:%.2d' % (time.hour, time.minute, time.second))\ndef time_to_int(time):\n    minutes = time.hour * 60 + time.minute\n    seconds = minutes * 60 + time.second\n    return seconds\ndef int_to_time(seconds):\n    time = Time()\n    minutes, time.second   = divmod(seconds, 60)\n    time.hour, time.minute = divmod(minutes, 60)\n    return time\ndef valid_time(time):\n    if time.hour &lt; 0 or time.minute &lt; 0 or time.second &lt; 0:\n        return False\n    elif: time.minute &gt;= 60 or time.second &gt;=60:\n        return False\n    else:\n        return True\ndef add_time_v1(t1, t2):\n    if not valid_time(t1) or not valid_time(t2):\n        raise ValueError('invalid Time object in add_time') #raise\u89e6\u53d1\u5f02\u5e38,\u5e76\u63d0\u793a\u5931\u8d25\u4fe1\u606f\n    seconds = time_to_int(t1) + time_to_int(t2)\n    return int_to_time(seconds)\ndef add_time_v2(t1, t2):\n    assert valid_time(t1) and valid_time(t2)\n    seconds = time_to_int(t1) + time_to_int(t2)\n    return int_to_time(seconds)\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#chapter-17","title":"chapter 17 \u7c7b\u548c\u65b9\u6cd5","text":"<p><code>self</code>\u9700\u8981\u4e3a\u65b9\u6cd5\u5b9a\u4e49\u65f6\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570,\u65b9\u6cd5\u88ab\u5b9e\u4f8b\u8c03\u7528\u65f6\u53ef\u5ffd\u7565\u7b2c\u4e00\u4e2a\u53c2\u6570self</p> <ul> <li> <p>\u7c7b\u65b9\u6cd5: \u7c7b\u65b9\u6cd5\u662f\u4e0e\u7c7b\u76f8\u5173\u8054\u7684\u65b9\u6cd5, \u5b83\u4eec\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u5c31\u53ef\u4ee5\u8c03\u7528, \u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7c7b\u672c\u8eab, \u901a\u5e38\u7528<code>@classmethod</code>\u88c5\u9970\u5668\u6765\u5b9a\u4e49 <pre><code>class Time:\n    \"\"\"Represents the time of day.\n    attribute:hour, minute, second\n    \"\"\"\n    current_time = 0 #\u7c7b\u7684\u53d8\u91cf, \u76f8\u5f53\u4e8ecpp\u7684static\u6210\u5458\u53d8\u91cf\n\n    \"\"\"\u7279\u6b8a\u65b9\u6cd5\"\"\"\n    \"\"\"\u901a\u5e38__init__\u65b9\u6cd5\u7684\u53c2\u6570\u548c\u5c5e\u6027\u540d\u79f0\u4e00\u6837\"\"\"\n    def __init__(self, hour = 0, minute = 0, second = 0):\n        #\u7c7b\u5b9e\u4f8b\u7684\u53d8\u91cf\n        self.hour = hour\n        self.minute = minute\n        self.second = second\n\n    \"\"\"\u7279\u6b8a\u65b9\u6cd5:\u65b9\u4fbf\u8c03\u8bd5, \u53ef\u76f4\u63a5\u4f7f\u7528\u5185\u7f6eprint\u51fd\u6570\u6253\u5370\u5bf9\u8c61\u4fe1\u606f\n    time1 = Time()\n    print(time1) #\u540ctime1.print_time()\u4f5c\u7528\u4e00\u6837\n    \"\"\"\n    def __str__(self):\n        return '%.2d:%.2d:%.2d' % (self.hour, self.minute, self.second)\n\n\n    \"\"\"\u91cd\u8f7d\u8fd0\u7b97\u7b26(operator overloading)\n    \u91cd\u8f7d'__add__':\u53ef\u76f4\u63a5\u4f7f\u7528'+'\u8fd0\u7b97\u7b26,\u4f46'+'\u5de6\u4fa7\u5fc5\u987b\u4e3a\u5f53\u524d\u7c7b\u5bf9\u8c61\n    \"\"\"\n    def __add__(self, other):\n    \"\"\"\u7c7b\u578b\u5206\u53d1: type-based dispatch\n    other\u7c7b\u578b\u53ef\u4ee5\u4e3a\u5f53\u524d\u7c7b\u5bf9\u8c61,\u4e5f\u53ef\u4e3a\u666e\u901a\u6570\u503c\n    \"\"\"\n        if isinstance(other, Time):\n            return add_time(other)\n        else:\n            return increment(other)\n    def __radd__(self, other):\n    \"\"\"\u652f\u6301'+'\u5de6\u4fa7\u4e3a\u666e\u901a\u6570\u503c\u7c7b\u578b,\u53f3\u4fa7\u4e3a\u5f53\u524d\u7c7b\u5bf9\u8c61\n    \"\"\"\n        return self.__add__(other)\n\n\n    \"\"\"\u81ea\u5b9a\u4e49\u65b9\u6cd5\"\"\"\n    def add_time(self, other):\n        seconds = self.time_to_int() + other.time_to_init()\n        return init_to_time(seconds)\n    def increment(self, seconds):\n        seconds += self.time_to_int()\n        return init_to_time(seconds)\n    def time_to_int(self):\n        minutes = self.hour * 60 + self.minute\n        seconds = minutes * 60 + self.second\n        return seconds\n    def int_to_time(seconds):\n        time = Time()\n        minutes, time.second   = divmod(seconds, 60)\n        time.hour, time.minute = divmod(minutes, 60)\n        return time\n    def print_time(self):\n        print('%.2d:%.2d:%.2d' % (self.hour, self.minute, self.second))\n    def is_after(self, other):\n        return self.time_to_init() &gt; other.time_to_init()\n\n#obj of the class Time\nstart = Time()      #00:00:00\nstart = Time(9)     #09:00:00\nstart = Time(9,45)  #09:45:00\nstart = Time(9,45,1)#09:45:01 \u63d0\u4f9b\u4e09\u4e2a\u53c2\u6570\uff0c\u5b83\u4eec\u4f1a\u8986\u76d6\u4e09\u4e2a\u9ed8\u8ba4\u503c\nprint(start) #\u5185\u7f6e\u65b9\u6cd5print\u65f6, python\u8c03\u7528time\u7684str\u65b9\u6cd5\n\nduration_obj = Time(1, 35)\nprint(start + duration) #\u56e0\u4e3a\u91cd\u8f7d\u4e86'__add__',\u53ef\u76f4\u63a5\u4f7f\u7528'+'\u8fd0\u7b97\u7b26,\u91cd\u8f7d\u4e86'__str__',\u53ef\u76f4\u63a5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570'print'\u6253\u5370\u7ed3\u679c\nduration_num = 123\n\n#'+'\u5de6\u4fa7\u4e3a\u7c7b\u5bf9\u8c61,\u53f3\u4fa7\u4e3a\u666e\u901a\u6570\u503c\nprint(start + duration_num)#\u76f4\u63a5\u8c03\u7528\u91cd\u8f7d\u7684'__add__'\n#'+'\u53f3\u4fa7\u4e3a\u7c7b\u5bf9\u8c61,\u5de6\u4fa7\u4e3a\u666e\u901a\u6570\u503c\nprint(duration_num + start)#\u901a\u8fc7\u8c03\u7528'__radd__'\u95f4\u63a5\u8c03\u7528\u91cd\u8f7d\u7684'__add__'\n</code></pre></p> </li> <li> <p>\u591a\u6001\u51fd\u6570:\u9002\u7528\u4e8e\u591a\u79cd\u7c7b\u578b\u7684\u51fd\u6570</p> <p>\u5982\u5185\u7f6e\u51fd\u6570<code>sum</code>\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7684\u5143\u7d20\u6c42\u548c, \u53ea\u8981\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u652f\u6301\u52a0\u6cd5\u5373\u53ef   <pre><code>#\u5bf9\u524d\u9762\u7684Time\u5bf9\u8c61(\u91cd\u8f7d\u4e86'+'\u8fd0\u7b97\u7b26),sum\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8be5\u5bf9\u8c61\nt1 = Time(7, 43)\nt2 = Time(7, 41)\nt3 = Time(7, 37)\ntotal = sum([t1, t2, t3]) #\nprint(total)              #\u8c03\u7528Time\u7c7b\u7684str\u65b9\u6cd5\n</code></pre></p> </li> </ul>"},{"location":"coding/python/01_book_basic_class/#chapter-18-inhert","title":"chapter 18 \u7c7b\u7684\u7ee7\u627f(inhert)","text":"<p>\u5361\u724c:<code>playing cards</code> \u4e00\u526f\u724c:<code>deck of hands</code> \u724c\u578b:<code>poker hand</code></p>"},{"location":"coding/python/01_book_basic_class/#card","title":"Card","text":"<pre><code>class Card:\n    \"\"\"\u4ee3\u8868\u4e00\u5f20\u6807\u51c6\u7684\u6251\u514b\u5361\u724c\"\"\"\n\n    def __init__(self, suit = 0, rank = 2):\n    \"\"\"\u5b9e\u4f8b\u5c5e\u6027: self.suit  self.rank,\u5173\u8054\u5230\u7279\u5b9a\u7684\u7c7b\u7684\u5b9e\u4f8b\"\"\"\n       self.suit = suit\n       self.rank = rank\n\n    \"\"\"\u7c7b\u5c5e\u6027:\u76f8\u5f53\u4e8ecpp \u7684static\u6210\u5458\u53d8\u91cf, \u8bbf\u95ee\u901a\u8fc7\u7c7b\u540d\"\"\"\n    suit_names = ['Clubs', 'Diamonds', 'Hearts', 'Spades']\n    rank_names = [None, 'Ace', '2', '3', '4', '5', '6', '7',\n              '8', '9', '10', 'Jack', 'Queen', 'King']\n\n    \"\"\"\u91cd\u8f7d\u8fd0\u7b97\u7b26(operator overloading)\n    \u91cd\u8f7d'__lt__',\u5c0f\u4e8e\u8fd0\u7b97\u7b26\n    \"\"\"\n    def __lt__(self, other):\n        # #\u5224\u65ad\u6362\u8272\n        # if self.suit &lt; other.suit: return True\n        # if self.suit &gt; other.suit: return False\n        # #\u82b1\u8272\u76f8\u540c,\u5224\u65ad\u7b49\u7ea7\n        # return self.rank &lt; other.rank\n\n        #\u4f7f\u7528tuple\u8fdb\u884c\u6bd4\u8f83\n        t1 = self.suit, self.rank\n        t2 = other.suit, other.rank\n        return t1 &lt; t2\n\n\n\n    def __str__(self):\n        return '%s of %s' % (Card.rank_names[self.rank],\n                             Card.suit_names[self.suit])\n\ncard1 = Card(2,11)\nprint(card1) #Jack of Hearts\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#deck","title":"Deck","text":"<pre><code>class Deck:\n    def __init__(self):\n        self.cards = []\n        for suit in range(4):\n            for rank in range(1, 14):\n                card = Card(suit, rank)\n                self.cards.append(card)\n    def __str__(self):\n        res = []\n        for card in cards:\n            res.append(str(card))#\u5185\u5efa\u51fd\u6570str\u8c03\u7528\u7c7b\u7684\u5185\u90e8\u7279\u6b8a\u51fd\u6570'__str__'\n        return '\\n'.join(res)\n    \"\"\"\u666e\u901a\u65b9\u6cd5\"\"\"\n    def pop_card(self):\n        #\u79fb\u9664\u6700\u540e\u4e00\u4e2a\n        return self.cards.pop()\n    def add_card(self, card):\n        self.cards.append(card)\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#handdeck","title":"\u5b50\u7c7bHand,\u7ee7\u627f\u81eaDeck","text":"<p>\u6709\u70b9\u7c7b\u4f3cjavascript\u54af,\u5bf9\u4e8e\u7236\u7c7b\u7684\u65b9\u6cd5\u5b50\u7c7b\u82e5\u4e0d\u91cd\u5199\u7684\u8bdd\u5c06\u5168\u90e8\u7ee7\u627f,\u91cd\u5199\u7684\u8bdd\u5c06\u8986\u76d6\u7236\u7c7b\u540c\u540d\u65b9\u6cd5 \u5b50\u7c7b<code>Hand</code>\u7ee7\u627f\u4e86<code>Deck</code>\u7684<code>__init__</code>,\u63d0\u4f9b\u4e00\u4e2a<code>Hand</code>\u7684<code>__init__</code>\u65b9\u6cd5\u540e\u4f1a\u8986\u76d6\u4ece\u7236\u7c7b<code>Deck</code>\u7ee7\u627f\u6765\u7684\u540c\u540d\u65b9\u6cd5</p> <pre><code>class Hand(Deck):\n    \"\"\"Represents a hand of playing cards.\"\"\"\n\n    \"\"\"\u8986\u76d6Deck\u7684__init__\u65b9\u6cd5,\u521b\u5efaHand\u5b9e\u4f8b\u65f6\u5c06\u4e0d\u518d\u8c03\u7528Deck\u7684\u540c\u540d\u65b9\u6cd5\"\"\"\n    def __init__(self, label=''):\n        self.cards = []\n        self.label = label\n    def move_cards(self, hand, num):\n        #\u5c06\u5f53\u524d\u5b9e\u4f8b\u7684num\u4e2acard\u8f6c\u79fb\u5230\u53e6\u4e00Hand\u5b9e\u4f8b'hand',\u7136\u540e\u8fd4\u56deNone\n        for i in range(num):\n            hand.add_card(self.pop_card())\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#_4","title":"\u6570\u636e\u5c01\u88c5","text":"<pre><code>class Markov:\n    def __init__(self):\n        self.suffix_map = {}\n        self.prefix = ()\n    def process_word(self, word, order = 2):\n        if len(self.prefix) &lt; order:\n            self.prefix += (wrod,)\n            return\n        try:\n            self.suffix_map[self.prefix].append(word)\n        except KeyError:\n            #if there is no entry for this prefix,make one\n            self.suffix_map[self.prefix] = [word]\n        self.prefix = shift(self.prefix, word)\n</code></pre>"},{"location":"coding/python/01_book_basic_class/#_5","title":"\u8c03\u8bd5","text":"<pre><code>def find_defining_class(obj, method_name):\n    for ty in type(obj).mro():\n        if method_name in ty.__dict__:\n            return ty\n\nhand = Hand() \nfind_defining_class(hand, 'move_cards')#&lt;class '__main__.Hand'&gt;\nfind_defining_class(hand, 'pop_card')  #&lt;class '__main__.Deck'&gt;\nfind_defining_class(hand, '__init__')  #&lt;class '__main__.Hand'&gt;\n</code></pre>"},{"location":"coding/python/02_book_advance/","title":"Python advance","text":""},{"location":"coding/python/02_book_advance/#chapter-19","title":"chapter 19 \u8fdb\u9636\u5c0f\u6280\u5de7","text":"<ul> <li>\u6761\u4ef6\u8868\u8fbe\u5f0f   <pre><code>#normal way\nif x &gt; 0:\n  y = math.log(x)\nelse:\n  y = float('nan')\n#conditional way\ny = math.log(x) if x &gt; 0 else float('nan')\n</code></pre></li> <li>\u5217\u8868\u63a8\u5bfc\u5f0f   <pre><code>#normal way\ndef capitalize_all(t):\n  res = []\n  for s in t:\n      res.append(s.capitalize())\n  return res\n#new way\ndef capitalize_all(t):\n  return [s.capitalize() for s in t]\n</code></pre></li> <li>\u751f\u6210\u5668\u8868\u8fbe\u5f0f</li> </ul> <p>TODO: \u8865\u5145</p> <ul> <li>any\u548call <code>any</code>\u6709\u4e00\u4e2aTrue\u5373\u4e3aTrue,<code>all</code>\u6709\u4e00\u4e2aFalse\u5373\u4e3aFalse</li> </ul> <pre><code>any( [False, False, True] ) #True\nany( letter == 't' for letter in 'monty' )\n</code></pre>"},{"location":"coding/python/02_book_advance/#chapter-21","title":"chapter 21 \u7b97\u6cd5\u5206\u6790","text":""},{"location":"coding/python/02_book_advance/#_1","title":"\u5b9e\u73b0\u54c8\u5e0c\u8868","text":"<p>ref\u5b9e\u73b0\u54c8\u5e0c\u8868 <pre><code>class LinearMap:\n\"\"\"aotim map\"\"\"\n    def __init__(self):\n        self.items = []\n    def add(self, k, v):\n        self.items.append((k,v))\n    def get(self, k):\n        for key, val in self.items:\n            if key == k:\n                return val\n        raise KeyError\nclass BetterMap:\n\"\"\"\u9884\u8ba1\u6bd4LinearMap\u5feb100\u500d,\u4f46\u589e\u957f\u91cf\u7ea7\u4ecd\u662f\u7ebf\u6027\u7684,\u8fd8\u4e0d\u5982\u54c8\u5e0c\u8868\u597d\u7528\"\"\"\n    def __init__(self, n = 100):\n        self.maps = []\n        for i in range(n):\n            self.maps.append(Linear())\n    def find_map(self, k):\n        #\u4f7f\u7528\u5185\u5efa\u7684hash\u51fd\u6570,\u53ef\u63a5\u53d7\u4efb\u4f55python\u5bf9\u8c61(\u5217\u8868\u548c\u5b57\u5178\u7b49\u53ef\u53d8\u7c7b\u578b\u4e0d\u80fd\u54c8\u5e0c\u7684\u9664\u5916)\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\n        index = hash(k) % len(self.maps)\n        return self.maps[index]\n    def add(self, k, v):\n        m = self.find_map(k)\n        return m.add(k, v)\n    def get(self, k):\n        m = self.find_map(k)\n        return m.get(k)\nclass HashMap:\n\"\"\"hash map\"\"\"\n    def __init__(self):\n        self.maps = BetterMap(2)\n        self.num = 0\n    def get(self, k):\n        return self.maps.get(k)\n    def add(self, k, v):\n        #add\u901a\u5e38\u662f\u5e38\u6570\u65f6\u95f4O(1),\u9700\u8981\u91cd\u65b0\u8c03\u6574\u6267\u884cresize()\u65f6\u624d\u6d88\u8017\u7ebf\u6027\u65f6\u95f4\n        if self.num == len(self.maps.maps):\n            self.resize()\n        self.maps.add(k, v)\n        self.num += 1\n    def resize(self):\n        new_maps = BetterMap(self.num * 2)\n        for m in self.maps.maps:\n            for k, v in m.items:\n                new_maps.add(k, v)\n\n        self.maps = new_maps\n</code></pre></p>"},{"location":"coding/python/02_book_advance/#chapter","title":"chapter \u4f7f\u7528\u6587\u4ef6","text":""},{"location":"coding/python/02_book_advance/#_2","title":"\u8bfb\u5199\u6587\u4ef6","text":"<pre><code>mode = 'r';\n#mode:'w':\u5199\u5165(\u6587\u4ef6\u6ca1\u6709\u5219\u65b0\u5efa\uff0c\u6587\u4ef6\u5b58\u5728\u5c06\u6e05\u7a7a\u6587\u4ef6\u539f\u6709\u6570\u636e)\n#mode:'a':\u5199\u5165(\u6587\u4ef6\u6ca1\u6709\u5219\u65b0\u5efa\uff0c\u6587\u4ef6\u5b58\u5728\u5c06\u8ffd\u52a0\u5185\u5bb9)\n#mode:'r':\u53ea\u8bfb,\u4e0d\u53ef\u5199\u5165(\u6587open()\u4ef6\u4e0d\u5b58\u5728\u5c06\u62a5\u9519)\ntry:\n    fout = open(\"file.txt\", mode)#'w' or 'a'\nexcept:\n    print(\"couldn't open the file\")\nfout.write(\"hello\")#\u8fd4\u56de\u5199\u5165\u7684\u5b57\u7b26\u4e2a\u6570\nx = 54\nfout.write(str(x))#\u5199\u5165number\u524d,\u8f6c\u4e3a\u5b57\u7b26\u4e32\nfout.close()\n\nfin = open(\"file.txt\", mode) #open(...) \u6587\u4ef6\u5bf9\u8c61,mode\u9ed8\u8ba4\u4e3a'r'\ncopen()urrent_line = fin.readline() #\u9047\u5230\u6362\u884c\u7b26\u505c\u6b62\uff0c\u5373\u8bfb\u53d6\u4e00\u884c\nword = current_line.strip() #\u5220\u9664\u5b57\u7b26\u4e32\u9996\u5c3e\u7a7a\u683c\n#py##\u4f7f\u7528for loop\u904d\u5386\u6587\u4ef6\u5bf9\u8c61\nfopen()or line in fin:\n    word = line.strip()\n    print(word)\nfin.close()\n</code></pre>"},{"location":"coding/python/02_book_advance/#pickleopenopen","title":"\u4f7f\u7528\u6570\u636e\u5e93(pickle\u6a21\u5757)open()open()","text":"<p>\u5927\u591a\u6570\u7684\u6570\u636e\u5e93\u91c7\u7528\u7c7b\u4f3c\u5b57\u5178\u7684\u5f62\u5f0f\uff0c\u5373\u5c06\u952e\u6620\u5c04\u5230\u503c,\u4e0d\u540c\u4e8e\u5b57\u5178,\u6570\u636e\u5e93\u7684\u952e\u7684\u7c7b\u578b\u987b\u4e3a<code>str</code></p> <ul> <li> <p>dbm   \u4f7f\u7528dbm:\u952e\u548c\u503c\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u8282,\u7528\u5176\u5b83\u6570\u636e\u7c7b\u578b\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u8bef   <pre><code>import dbm\ndb = dbm.open('db_test', 'c')#mode:'c' \u8868\u793a\u6570\u636e\u5e93\u4e0d\u5b58\u5728\u5c06\u521b\u5efa\ndb['45'] = 'hello' #\u5199\u5165\u6570\u636e\u5e93\nvalue = db['45']   #\u8bbf\u95ee\u6570\u636e\u5e93 \u8fd4\u56de\u5b57\u8282\u5bf9\u8c61(\u540c\u5b57\u7b26\u4e32\u7c7b\u4f3c)\"b'hello'\"\n\n#\u8bbf\u95ee\nfor key in db:\n    print(key, db[key])\ndb.close()\n</code></pre></p> </li> <li> <p>pickle   \u5c06\u51e0\u4e4e\u6240\u6709\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u5316\u4e3a\u9002\u5408\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u5c06\u90a3\u4e9b\u5b57\u7b26\u4e32\u8fd8\u539f\u4e3a\u539f\u6765\u7684\u5bf9\u8c61   <pre><code>import pickle\nt = [1,2,3,'s']\ns = pickle.dumps(t)\nt2 = pickle.loads(s) #\u5373\u4e3at\u7684\u5185\u5bb9\nt2 == t #True \u5e8f\u5217\u5316\u7136\u540e\u53cd\u5e8f\u5217\u5316\u7b49\u6548\u4e8e\u590d\u5236\u4e00\u4e2a\u5bf9\u8c61\nt2 is t #False\n</code></pre></p> </li> </ul>"},{"location":"coding/python/02_book_advance/#_3","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"\u5b57\u7b26 \u8868\u793a \u5b9e\u4f8b \\d 0-9\u7684\u4efb\u4f55\u6570\u5b57 \\D 0-9\u7684\u4ee5\u5916\u7684\u4efb\u4f55\u5b57\u7b26 \\w \u4efb\u4f55\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf,\u53ef\u8ba4\u4e3a\u5339\u914d\u5355\u8bcd \\W \\w\u4ee5\u5916\u7684\u4efb\u4f55\u5b57\u7b26 \\s \u7a7a\u683c\u3001\u5236\u8868\u7b26\\t\u3001\u6362\u884c\u7b26\\n,\u53ef\u8ba4\u4e3a\u662f\u5339\u914d\u2019\u7a7a\u767d\u2018\u5b57\u7b26 \\S \\s\u4ee5\u5916\u7684\u4efb\u4f55\u5b57\u7b26 <pre><code>import re #re\u6a21\u5757\u5305\u542b\u6b63\u5219\u8868\u8fbe\u76f8\u5173\u542b\u51fd\u6570\n#\u5339\u914d\"asfasf123-123-1234asfasf\"\u4e2d\u7684123-123-1234\nreg  = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d')\nreg1 = re.compile(r'(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)') #\u548creg\u4e00\u6837,\u53ea\u662f\u5206\u4e3a2\u7ec4\nreg2 = re.compile(r'\\d{3}-\\d{3}-\\d{4}')\n#------------------------------------\n#title:\u4f7f\u7528\u7ba1\u9053'|'\u5339\u914d\u591a\u4e2a\u5206\u7ec4\n#tips :\u5982\u679c\u8981\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684'|',\u5219\u9700\u8981\u4f7f\u7528\u5012\u659c\u6760\u8f6c\u4e49,\u5373\\|\n#------------------------------------\nreg  = re.compile(r'Batman|Tina Fey')  #\u5339\u914d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u6587\u672c\n#\u5bf9\u4e8e'Batman and Tina Fey'\u7684\u5339\u914d\uff0c\u7ed3\u679c\u4e3a'Batman'\n#\u5bf9\u4e8e'Tina Fey and Batman'\u7684\u5339\u914d\uff0c\u7ed3\u679c\u4e3a'Tina Fey'\nreg1 = re.compile(r'Bat(man|mobile|bat|copter)') #\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u542b\u6709Batman\u3001Batmobile\u3001Batbat\u3001Batcopter\u4e2d\u7684\u67d0\u4e00\u4e2a\n#------------------------------------\n#title:\u4f7f\u7528'?'\u5b9e\u73b0\u53ef\u9009\u5339\u914d\n#tips :\u5982\u679c\u8981\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684'\uff1f',\u5219\u9700\u8981\u4f7f\u7528\u5012\u659c\u6760\u8f6c\u4e49,\u5373\\\uff1f\n#------------------------------------\nreg  = re.compile(r'Bat(wo)?man') #\u6a21\u5f0fwo\u4e3a\u53ef\u9009\u7684\u5206\u7ec4,wo\u51fa\u73b00\u6b21\u62161\u6b21,\u65e2\u53ef\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684Batman,\u4e5f\u53ef\u5339\u914dBatwoman\n#------------------------------------\n#title:\u4f7f\u7528'*'\u5339\u914d0\u6b21\u6216\u591a\u6b21\n#tips :\u5982\u679c\u8981\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684'*',\u5219\u9700\u8981\u4f7f\u7528\u5012\u659c\u6760\u8f6c\u4e49,\u5373\\*\n#------------------------------------\nreg  = re.compile(r'Bat(wo)*man') #(wo)*\u5339\u914d'wo'\u96f6\u6b21\u6216\u591a\u6b21,\u53ef\u5339\u914dBatman\u3001Batwoman\u3001Batwowoman...\n#------------------------------------\n#title:\u4f7f\u7528'+'\u5339\u914d1\u6b21\u6216\u591a\u6b21\n#tips :\u5982*\u679c\u8981\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684'+',\u5219\u9700\u8981\u4f7f\u7528\u5012\u659c\u6760\u8f6c\u4e49,\u5373\\+\n#------------------------------------\nreg  = re.compile(r'Bat(wo)+man') #(wo)+\u5339\u914d'wo'1\u6b21\u6216\u591a\u6b21,\u53ef\u5339\u914dBatwoman\u3001Batwowoman...\n#------------------------------------\n#title:\u4f7f\u7528'{}'\u5339\u914d\u7279\u5b9a\u6b21\u6570\n#tips :\n#------------------------------------\nreg  = re.compile(r'(Ha){3}') #'Ha'\u51fa\u73b03\u6b21,\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684\u2019HaHaHa',\u4f46\u4e0d\u4f1a\u5339\u914d'HaHa'\n#{3,5} \u51fa\u73b03-5\u6b21   {3\uff0c}\u81f3\u5c11\u51fa\u73b03\u6b21\u4ee5\u4e0a\n\n#------------------------------------\n#title:\u8d2a\u5fc3(Ha){3,5}\u548c\u975e\u8d2a\u5fc3(Ha){3,5}\uff1f\u5339\u914d\n#tips :\n#------------------------------------\n#\u5bf9\u4e8e\u5305\u542b'HaHaHaHaHa'\u7684\u5b57\u7b26\u4e32\nreg1 = re.compile(r'(Ha){3,5}')    #\u8d2a\u5fc3\u5339\u914d\u7ed3\u679c\u4e3aHaHaHaHaHa,Ha\u51fa\u73b05\u6b21\u7684\nreg2 = re.compile(r'(Ha){3,5}\uff1f')  #\u975e\u8d2a\u5fc3\u5339\u914d\u7ed3\u679c\u4e3aHaHaHa,Ha\u51fa\u73b03\u6b21\u7684\n</code></pre> <pre><code>#[0-5] \u548c (0|1|2|3|4|5) \u4f5c\u7528\u4e00\u6837\uff0c\u5339\u914d0-5\u4e2d\u7684\u4e00\u4e2a\n#[aeiouAEIOU]\u5339\u914d\u5143\u97f3\u5b57\u7b26,\u4e0d\u8bba\u5927\u5c0f\u5199  [^aeiouAEIOU] \u5219\u662f\u5339\u914d\u975e\u5143\u97f3\u5b57\u7b26\n#[a-zA-Z0-9] \u5339\u914d\u6240\u6709\u7684\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\n#\u65b9\u62ec\u53f7[]\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u7b26\u53f7\u4e00\u822c\u4e0d\u88ab\u89e3\u91ca,\u4e0d\u9700\u8981\u5728'.'\u3001'?'\u3001'()'\u7528'\\'\u8f6c\u4e49\n</code></pre> <pre><code>#------------------------------------\n#title:\u5f00\u59cb'^'\u672b\u5c3e'$'\n#tips :\u63d2\u5165\u7b26\u53f7'^'\n#------------------------------------\nreg  = re.compile(r'^Hello') #\u5339\u914d\u4ee5'Hello'\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\n#r'\\d$' \u5339\u914d\u4ee50-9\u4e2d\u67d0\u4e2a\u6570\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\n#r'^\\d+$' \u5339\u914d\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\u90fd\u662f\u6570\u5b57\u7684\u5b57\u7b26\u4e32\n\n#------------------------------------\n#title:\u901a\u914d\u7b26'.'\n#tips :\u5339\u914d\u9664\u6362\u884c\u4e4b\u5916\u6240\u6709\u5b57\u7b26,\u5982\u679c\u8981\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684'.',\u5219\u9700\u8981\u4f7f\u7528\u5012\u659c\u6760\u8f6c\u4e49,\u5373\\.\n#------------------------------------\n#r'.at' \u5339\u914dcat\u3001lat\u3001hat....,        '.'\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u5b57\u7b26  \n#r'.*at' \u5339\u914dcccccat\u30019-098.\\.at...., '.*'\u5339\u914d\u6240\u6709\u5b57\u7b26, \u5982r'First Name:(.*) Last Name:(.*)'  \n##\u5bf9\u4e8e'&lt;To serve man&gt; for dinner.&gt;'\n##r'&lt;.*&gt;'  \u5339\u914d\u7ed3\u679c\u4e3a'&lt;To serve man&gt; for dinner.&gt;' \u8d2a\u5fc3\u5339\u914d\n##r'&lt;.*?&gt;' \u5339\u914d\u7ed3\u679c\u4e3a'&lt;To serve man&gt;'              \u975e\u8d2a\u5fc3\u5339\u914d\n</code></pre>"},{"location":"coding/python/02_book_advance/#modules","title":"Modules","text":""},{"location":"coding/python/02_book_advance/#random","title":"random","text":"<pre><code>import random\nrandom_f = random.random() #\u751f\u6210[0.0 ~ 1.0)\u7684float\u968f\u673a\u6570\nrandom_int = random.randint(2, 89)#\u751f\u6210[2, 89]\u5185\u7684\u6574\u6570\n\nt = [1,2,3,'a']\nelem = random.choice(t)#\u4ecet\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u5143\u7d20\n\n#\u8fd8\u63d0\u4f9b\u751f\u6210\u7b26\u5408\u9ad8\u65af\u3001\u6307\u6570\u3001\u4f3d\u9a6c\u7b49\u8fde\u7eed\u5206\u5e03\u7684\u968f\u673a\u503c\n</code></pre>"},{"location":"coding/python/02_book_advance/#math","title":"math","text":"<pre><code>import math\nres = math.hypot(3, 4)  #res = 5, \u8fd4\u56de\u6b27\u51e0\u91cc\u5fb7\u8303\u6570,\u7b49\u540c\u4e8esqrt(x*x + y*y), \nres = math.atan2(dy, dx)#res = atan(dy/dx), unit:radian, not degree\n</code></pre>"},{"location":"coding/python/02_book_advance/#numpy","title":"numpy","text":"<ul> <li>numpy.ndarray</li> </ul> <pre><code>import numpy as np\nres = np.arange(start, end, interval) #\u8fd4\u56de\u7c7b\u578b'np.ndarray', \u5143\u7d20\u4e4b\u95f4\u95f4\u9694\u95eeinterval  (default=1),\u6570\u7ec4\u8303\u56f4[start, end)\nres = np.arange(1, 6, 2) # array([1, 3, 5])\n\na = np.array(['a',1,3,4]) #\nisinstance(a,np.ndarray)  #true\n\nnp_array = np.random.random(5) #\u8fd4\u56de\u7c7b\u578b'np.ndarray',\u5305\u542b5\u4e2a\u4f4d\u4e8e[0,1)\u7684\u5143\u7d20\n\nres = np.copy(arg) #arg\u53ef\u4e3a\u666e\u901a'list'\u6216'np.ndarray'\uff0c\u8fd4\u56de\u7c7b\u578b'np.ndarray'\n</code></pre> <ul> <li>matrix usage</li> </ul> <pre><code>A = np.array([\n      [1.1, 0.5, 0., 0.],\n      [2., 1.2, 0., 0.],\n      [3., 0., 1.3, 0.5],\n      [4., 0., 0., 1.4]\n  ])\nA.T             #\u77e9\u9635A\u7684\u8f6c\u7f6e\nnp.linalg.inv(A)#\u77e9\u9635A\u7684\u9006\u77e9\u9635\nA.shape    #\u8fd4\u56de\u77e9\u9635\u7684\u884c\u5217\u6570:\u884c(np.array\u91cc\u9762list\u7684\u4e2a\u6570), \u5217(list\u7684\u957f\u5ea6)\nA.shape[0] #\u884c\u6570 4, np.array\u91cc\u9762list\u7684\u4e2a\u6570\nA.shape[1] #\u5217\u65704, np.array\u91cc\u9762list\u4e2d\u5143\u7d20\u7684\u4e2a\u6570,\u4e0d\u540c\u7684list\u5143\u7d20\u4e2a\u6570\u4e0d\u4e00\u6837\u65f6\u5c06\u62a5\u9519\n\nnp.zeros((3,5))#3*5\u7684\u96f6\u77e9\u9635,\u5373np.array\u91cc\u9762list\u4e2a\u6570\u4e3a3,\u6bcf\u4e2alist\u6709\u5168\u90e8\u4e3a0\u76845\u4e2a\u5143\u7d20\nnp.ones((3,5)) #3*5\u7684\u77e9\u9635,\u5143\u7d20\u503c\u90fd\u4e3a1\nnp.eye(4)      #\u7ed3\u679c\u5982\u4e0b,4*4\u7684\u5355\u4f4d\u77e9\u9635\n\"\"\"\narray([[1., 0., 0., 0.],\n     [0., 1., 0., 0.],\n     [0., 0., 1., 0.],\n     [0., 0., 0., 1.]])\n\"\"\"\n\na = np.array([0.8, 0.1, 0.1]).reshape((-1, 1))#\u7ed3\u679c\u5982\u4e0b\n\"\"\"\narray([[0.8],\n     [0.1],\n     [0.1]])\n\"\"\"\n</code></pre>"},{"location":"coding/python/03_dev_env/","title":"Python\u5f00\u53d1\u73af\u5883\u642d\u5efa","text":""},{"location":"coding/python/03_dev_env/#1-python","title":"1. \u4e0b\u8f7d\u5b89\u88c5python","text":"<p>\u4e0b\u8f7d\u5b89\u88c5python3.x\u7248\u672c\uff0c\u63a8\u8350\u4e0b\u8f7d\u5b89\u88c5Anaconda\uff0cAnaconda\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u53d1\u884c\u7248\u672c\uff0c\u5305\u542b\u4e86conda\u3001pip\u3001jinja2\u3001numpy\u3001scipy\u3001matplotlib\u3001pandas\u7b49\u5e38\u7528\u6570\u636e\u79d1\u5b66\u5e93\u3002</p> <p>Anaconda\u5b89\u88c5\u5305\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.anaconda.com/products/individual</p>"},{"location":"coding/python/03_dev_env/#2","title":"2. \u914d\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u8bc6\u522b\u5230python\uff0c\u5e76\u8bbe\u7f6e\u9ed8\u8ba4python\u7248\u672c\u3002</p> <pre><code># \u67e5\u770b\u7cfb\u7edf\u4e2d\u9ed8\u8ba4\u4f7f\u7528\u7684python\u7248\u672c, python2\u6216python3\npython --version\n\n# \u67e5\u770b\u7cfb\u7edf\u4e2d\u5df2\u5b89\u88c5\u7684pip\u7248\u672c\npip --version\npip3 --version\n\n# \u914d\u7f6e\u73af\u5883\u53d8\u91cf\n# 1.  `.bashrc`\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\nexport PATH=\"/usr/local/bin:$PATH\"\nexport PATH=\"/usr/local/anaconda3/bin:$PATH\"\n\n# 4. \u5237\u65b0\u73af\u5883\u53d8\u91cf\nsource ~/.bashrc\n\n# 5. \u67e5\u770b\u73af\u5883\u53d8\u91cf\necho $PATH \n\n# 6.2.2 \u6c38\u4e45\u8bbe\u7f6e\n# \u6253\u5f00`.bashrc`\u6587\u4ef6 \nalias python='/usr/local/anaconda3/bin/python3.x'\n\n# \u5237\u65b0\u73af\u5883\u53d8\u91cf\nsource ~/.bashrc \n</code></pre>"},{"location":"coding/python/03_dev_env/#3","title":"3. \u5b89\u88c5\u5e38\u7528\u5e93","text":""},{"location":"coding/python/03_dev_env/#_1","title":"\u5e38\u89c4\u65b9\u6cd5","text":"<pre><code># 1. \u5347\u7ea7pip\npip install --upgrade pip\n\n# 2. \u5b89\u88c5numpy\u3001scipy\u3001matplotlib\npip install numpy scipy matplotlib pandas # or `pip3 install ....`\n\n# 3. \u5b89\u88c5jupyter notebook etc.\npip install jupyter opencv-python tensorflow \\\n            torch torchvision \\\n            moviepy \\\n            gtsam\n# ######### for python3\npip3 --version\npyhton3 --version\n## func1\npip3 install --user --upgrade pip\npip3 install setuptools\n\npip3 install numpy scipy matplotlib\n\n##func2 \u672c\u8d28\u540cfunc1 \npython3 -m pip install numpy scipy matplotlib\n</code></pre>"},{"location":"coding/python/03_dev_env/#brewconda","title":"\u63a8\u8350\u65b9\u6cd5(\u901a\u8fc7brew\u3001conda)","text":"<ul> <li>brew\u5b89\u88c5</li> </ul> <pre><code>brew tap homebrew/science &amp;&amp; brew install numpy scipy matplotlib\n</code></pre> <ul> <li>conda\u5b89\u88c5(\u4e1d\u6ed1) conda download for mac-os</li> </ul> <pre><code>#conda !!! very good \u89e3\u51b3\u4e86mac-m1\u5b89\u88c5scipy\u7684\u95ee\u9898\n#1. download conda\n#2. install\nbash Miniconda3-latest-MacOSX-arm64.sh\n#3. install pkg\nexport PATH=\"/Users/dexter/miniconda3/bin:$PATH\"\nexport PATH=/opt/homebrew/bin:/opt/homebrew/sbin:$PATH\n#\u521b\u5efa\u7a7a\u95f4shuai_space\u5e76\u5728\u7a7a\u95f4\u5185\u9ed8\u8ba4\u5b89\u88c53.10\u7248\u672c\u7684python\nconda create -n shuai_space  python=3.10  \nconda deactivate\nconda env list\n\n#\u6fc0\u6d3b\u9ed8\u8ba4\u4f7f\u7528\u7a7a\u95f4shuai_space,\u53ef\u901a\u8fc7\u7ec8\u7aef${USER}\u524d\u540d\u79f0\u5224\u65ad\u662f\u4ec0\u4e48space\nconda activate shuai_space  \n\n#\u5728\u5f53\u524d\u9ed8\u8ba4space\u88c5pkg\nconda install numpy pandas scipy matplotlib \n\n#\u5728\u6307\u5b9a\u7684space\u5b89\u88c5pkg\nconda install -n shuai_space ipykernel --update-deps --force-reinstall \n\npip3 install moviepy gtsam  #conda\u5b89\u88c5\u5931\u8d25\u7684\u53ef\u7528pip \n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/","title":"ROS&amp;Cartographer","text":""},{"location":"coding/ros/00_ros_msg_example/#cartographer","title":"cartographer","text":""},{"location":"coding/ros/00_ros_msg_example/#install-and-build","title":"install and build","text":"<p>Cartographer ROS build and install</p> <pre><code># Install wstool and rosdep.\nsudo apt-get update\nsudo apt-get install -y python-wstool python-rosdep ninja-build\n\n# Create a new workspace in 'catkin_ws'.\nmkdir catkin_ws\ncd catkin_ws\nwstool init src\n\n# Merge the cartographer_ros.rosinstall file and fetch code for dependencies.\nwstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall\nwstool update -t src\n\n# Install proto3.\nsrc/cartographer/scripts/install_proto3.sh\n\n# Install deb dependencies.\n# The command 'sudo rosdep init' will print an error if you have already\n# executed it since installing ROS. This error can be ignored.\nsudo rosdep init\nrosdep update\nrosdep install --from-paths src --ignore-src --rosdistro=${ROS_DISTRO} -y\n\n# Build and install.\ncatkin_make_isolated --install --use-ninja\ncatkin_make_isolated --install --use-ninja [-DCMAKE_BUILD_TYPE=Debug | Release | RelWithDebInfo | MinSizeRel]\nsource install_isolated/setup.bash\nroslaunch cartographer_ros demo_backpack_3d.launch bag_filename:=/home/lyu//work/catkin_ws/data/changshu/2018-07-25-07-40-46.bag \n\n\u4f9d\u8d56\u7684gflags\u548cglog\u5171\u4eab\u5e93\u4f4d\u4e8e/usr/lib/x86_64-linux-gnu/\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#cartographer-launch","title":"cartographer launch\u53c2\u6570\u914d\u7f6e","text":"<ol> <li>backpack_3d.launch \u6620\u5c04topic remap</li> <li>urdf\u4f20\u611f\u5668\u5750\u6807\u6587\u4ef6\u914d\u7f6e</li> <li>backpack_3d.lua <pre><code>num_point_clouds = 1\nnum_accumulated_range_data = 1\n#default true old version hasn't this parameter\nuse_pose_extrapolator = false  \nnum_point_clouds = 1           #default 2\nnum_accumulated_range_data = 1 #default 160\n</code></pre></li> </ol>"},{"location":"coding/ros/00_ros_msg_example/#cartographer_1","title":"cartographer\u603b\u7ed3\u7b14\u8bb0","text":"<ol> <li>\u751f\u6210pbstream\u5730\u56fe\u6587\u4ef6\uff0c\u5e76\u8f6c\u4e3aros\u6807\u51c6\u7684\u683c\u5f0f\u7684\u5730\u56fe</li> <li>\u4f7f\u7528offline_backpack_3d.launch</li> <li>demo_backpack_3d.launch,\u6784\u56fe\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u670d\u52a1<code>rosservice call /write_state ${path}/file.bag.pbstream</code></li> </ol> <pre><code> #\u4f7f\u7528roslaunch\n roslaunch cartographer_ros offline_pbstream_to_rosmap.launch  pbstream_filename:=/home/cabin/Desktop/carto_map.pbstream  map_filestem:=/home/cabin/Desktop/ros_map resolution:=0.05\n #rosrun node\n rosrun cartographer_ros cartographer_pbstream_to_ros_map  -map_filestem=/home/cabin/Desktop/ros_map  -pbstream_filename=/home/cabin/Desktop/carto_map.pbstream -resolution=0.05\n</code></pre> <ol> <li>rviz\u4fdd\u5b58\u5730\u56fe</li> </ol> <pre><code>#\u5b89\u88c5map-server\nsudo apt install ros-melodic-map-server\nrosrun map_server map_server -f mymap\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#_1","title":"\u7279\u70b9","text":"<ul> <li>\u4e3b\u8981\u901a\u8fc7\u95ed\u73af\u68c0\u6d4b\u6d88\u9664\u6784\u56fe\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u7d2f\u8ba1\u8bef\u5dee</li> <li>carto\u91cd\u70b9\u5185\u5bb9\u5c31\u662f\u878d\u5408\u591a\u4f20\u611f\u5668\u6570\u636e\u7684\u5c40\u90e8submap\u521b\u5efa\uff0c\u53ca\u95ed\u73af\u68c0\u6d4b\u7684scan match\u7b56\u7565\u7684\u5b9e\u73b0</li> <li>submap: \u4e00\u4e2asubmap\u7531\u4e00\u5b9a\u6570\u91cf\u7684laser scan\u6784\u6210\uff0c\u65b0\u7684laser scan\u8fdb\u6765\u65f6\u4f1a\u57fa\u4e8esubmap\u5df2\u6709\u7684laser scan\u548c\u5176\u4ed6\u4f20\u611f\u5668\u4f30\u8ba1\u5176\u5728submap\u4e2d\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u4e00\u4e2asubmap\u6784\u5efa\u5b8c\u6210\u540e\u4e0d\u4f1a\u6709\u65b0\u7684laser scan\u63d2\u5165\u5230\u8be5submap\u4e2d\uff0c\u6b64\u523bsubmap\u4f1a\u52a0\u5165\u5230\u95ed\u73af\u68c0\u6d4b\u4e2d</li> <li>\u95ed\u73af\u68c0\u6d4b\uff1a \u95ed\u73af\u68c0\u6d4b\u8003\u8651\u6240\u6709\u5df2\u5b8c\u6210\u521b\u5efa\u7684submap\uff0c\u65b0\u7684laser scan\u4e0e\u5730\u56fe\u4e2d\u67d0\u4e2asubmap\u4e2d\u7684\u67d0\u4e2alaser scan\u7684\u4f4d\u59ff\u63a5\u8fd1\u7684\u8bdd\u5c31\u901a\u8fc7\u67d0\u79cdscan match\u7b56\u7565\u627e\u5230\u8be5\u95ed\u73af</li> <li>\u4ee3\u7801</li> <li>carto\u8d1f\u8d23\u5904\u7406\u6765\u81ea\u96f7\u8fbe\u3001IMU\u3001\u91cc\u7a0b\u8ba1\u7684\u6570\u636e\u5e76\u57fa\u4e8e\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u5730\u56fe\u7684\u6784\u5efa--\u5e95\u5c42\u5b9e\u73b0</li> <li> <p>carto_ros\u8d1f\u8d23\u57fa\u4e8eros\u7684\u901a\u4fe1\u673a\u5236\u83b7\u53d6\u4f20\u611f\u5668\u7684\u6570\u636e\u5e76\u8f6c\u6362\u4e3acarto\u4e2d\u5b9a\u4e49\u7684\u683c\u5f0f\u4f20\u9012\u7ed9carto\uff0c\u540c\u65f6\u5c06carto\u7684\u5904\u7406\u7ed3\u679c\u53d1\u5e03\uff0c\u7528\u4e8e\u663e\u793a\u6216\u4fdd\u5b58--\u4e0a\u5c42\u5e94\u7528</p> </li> <li> <p>\u4f4d\u59ff\u4f30\u8ba1\uff1a\u5148\u7528\u76f8\u5173\u6027\u626b\u63cf\u5339\u914d\uff08CSM\uff09\u7ed9\u4e00\u4e2a\u521d\u503c\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\uff08\u4e0eHector\u8d85\u4e0d\u591a\uff09\uff0c\u6c42\u89e3\u7cbe\u786e\u7684\u4f4d\u7f6e</p> </li> <li>CSM\uff1a\u7b80\u5355\u6765\u8bf4\u5927\u6982\u662f\uff1a\u7528\u6fc0\u5149\u672b\u7aef\u70b9\u5339\u914d\u53d6\u5230\u5360\u636e\u6805\u683c\u5730\u56fe\u4e2d\u7684\u503c\uff0c\u83b7\u5f97\u5f97\u5206\uff0c\u53d6\u5f97\u5206\u6700\u9ad8\u7684\u4f5c\u4e3a\u521d\u503c\u3002\u52a0\u4e0a\u591a\u5206\u8fa8\u7387\u8ba1\u7b97\u53ef\u4ee5\u52a0\u901f\uff0c\u5e76\u4e14\u83b7\u5f97\u5206\u8fa8\u7387\u610f\u4e49\u4e0b\u7684\u6700\u4f18\u89e3</li> <li>\u7528\u5206\u652f\u5b9a\u754c\u539f\u7406\u52a0\u901f\u6c42\u89e3\u8fc7\u7a0b\uff08\u76f8\u5bf9\u4e8e\u66b4\u529b\u6c42\u89e3\uff09\uff0c\u8fdb\u884c\u6df1\u5ea6\u6709\u9650\u4f18\u5148\u641c\u7d22\uff0cCSM\u8ba1\u7b97\u5f97\u5230\u521d\u59cb\u6700\u9ad8\u5206\u6570\uff0c\u786e\u5b9a\u6df1\u5ea6\uff0c\u5206\u652f\u5c31\u662f\u8fdb\u884c\u62d3\u5c55\uff0c\u5b9a\u754c\u5c31\u662f\u526a\u679d\u3002\u63d0\u9ad8\u8fd0\u7b97\u6548\u7387</li> </ul>"},{"location":"coding/ros/00_ros_msg_example/#tips","title":"tips","text":"<ul> <li>LocalTrajectoryBuilder3D: extrapolator\u53ea\u80fd\u901a\u8fc7AddImu\u521d\u59cb\u5316\uff0c\u56e0\u6b643D\u7684\u65f6\u5019\u5fc5\u987b\u4f7f\u7528IMU\u6570\u636e</li> </ul>"},{"location":"coding/ros/00_ros_msg_example/#ros","title":"ros\u5e38\u7528\u547d\u4ee4","text":"<ol> <li> <p>use_sim_time \u547d\u4ee4\u8bbe\u7f6e</p> <p><pre><code>#true,bag\u6570\u636e\u56de\u653e\u65f6\u7cfb\u7edf\u4f7f\u7528\u4eff\u771f\u65f6\u95f4\uff0cfalse\u65f6\u7cfb\u7edf\u4f7f\u7528walltime\uff0c\u5373\u7cfb\u7edf\u5f53\u524d\u65f6\u95f4\nrosparam set use_sim_time true\n</code></pre> roslaunch\u4e2d\u8bbe\u7f6e <pre><code> &lt;param name=\"use_sim_time\" value=\"false\" /&gt;\n</code></pre> \u5750\u6807\u7cfb\u7edf(frame)</p> <p>ROS rviz\u4e2dX(red)\u524d\u3001Y(green)\u3001\u5de6Z\u4e0a, apollo\u4e2dY\u524d\uff0cX\u53f3</p> </li> <li> <p>\u57fa\u672c\u547d\u4ee4</p> </li> </ol> <pre><code>#build ros package\ncatkin_make -DCMAKE_BUILD_TYPE=Release \ncatkin_make install -DCMAKE_INSTALL_PREFIX=/opt/ros/groovy \ncatkin_make -DCATKIN_WHITELIST_PACKAGES=\"chapter2_tutorials\" //\u7f16\u8bd1\u5355\u4e2a\u529f\u80fd\u5305\n\n#colcon: compile all modules\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Debug Release\n#colcon: compile special module\ncolcon build --packages-select ekf_localizer\nrviz -d ./data/ces_mapping.rviz #open rviz by ces_mapping.rviz\n\nrospack find roscpp\nsource /opt/ros/kinetic/setup.bash   //source ROS\u5b89\u88c5\u76ee\u5f55\nrospack profile //\u66f4\u65b0ROS\u5185\u90e8\u8f6f\u4ef6\u5305\uff0c\u5373\u529f\u80fd\u5305\uff0c\u7c7b\u4f3csudo apt-get update\u66f4\u65b0Linux\u8f6f\u4ef6\u5305\u4e00\u6837\n\n#\u5c06\u5916\u90e8\u540d\u4e3a/levle1/topic1\u7684topic\u6620\u5c04\u5230\u5185\u90e8\u540d\u4e3ainput\u7684topic\nrosrun object_tracking  main input:=/kitti/velo/pointcloud\n\n#\u5faa\u73af\u64ad\u653e -l ,\u52a0\u901f2\u500d -r 2 \nrosbag play [-l] [-r 2] test.bag  \n\n#\u8bb0\u5f55topic\u751f\u6210bag\u5305\nrosbag record -a #\u8bb0\u5f55\u6240\u6709topics\nrosbag record -O bagname.bag /topicA /topicB  #bagname.bag\nrosbag info bagname.bag                      #\u67e5\u770bbag\u6587\u4ef6\u5185\u5bb9\nrostopic echo /imu/data                  #\u8f93\u51fatopic\u7684\u5185\u5bb9\n\n#\u5bfb\u627e\u53ef\u7528\u7684ros\u5305\napt-cache search ros-kinetic-opencv*  \n#\u5378\u8f7d/opt/ros/kinetic\u76ee\u5f55\u4e0bcartographer\u529f\u80fd\u5305\n#distro\u4e3a\u53d1\u884c\u7684\u7248\u672c,\u5982indigo/kinetic/melodic \nsudo apt install ros-&lt;distro&gt;-ros-tutorials \n\nsudo apt purge ros-kinetic-cartographer \nsudo apt-get install ros-kinetic-rqt-console ros-kinetic-rqt-graph\\\n                     ros-indigo-pcl-conversions ros-indigo-pcl-ros\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#gdb-debug","title":"gdb debug","text":"<pre><code>&lt;node pkg=\"lidar_localizer\" type=\"lidar_mapping\" name=\"lidar_mapping\" output=\"screen\" launch-prefix=\"xterm -e gdb -ex run --args\" &gt;\n    &lt;!-- time_config --&gt;\n    &lt;param name=\"gps_lidar_time_threshold\" value=\"$(arg gps_lidar_time_threshold)\" /&gt;\n    &lt;!-- filter_params --&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#_2","title":"\u6d88\u606f\u56de\u653e\u6570\u636e","text":"<p>sensor_msgs/PointCloud2 Message <pre><code>deutsches_museum.bag---------------------------------------------------------------\nstart:        May 26 2015 21:30:16.48 (1432647016.48)\nend:          May 26 2015 22:02:09.46 (1432648929.46)\nsize:         470.5 MB\nmessages:     617965\ncompression:  bz2 [3334/3334 chunks; 18.31%]\nuncompressed:   2.5 GB @   1.3 MB/s\ncompressed:   462.3 MB @ 247.5 KB/s (18.31%)\ntypes:        sensor_msgs/Imu                [6a62c6daae103f4ff57a132d6f95cec2]\n              sensor_msgs/MultiEchoLaserScan [6fefb0c6da89d7c8abe4b339f5c2f8fb]\ntopics:       horizontal_laser_2d    70358 msgs    : sensor_msgs/MultiEchoLaserScan\n              imu                   478244 msgs    : sensor_msgs/Imu               \n              vertical_laser_2d      69363 msgs    : sensor_msgs/MultiEchoLaserScan\n\u5e38\u719f\u6570\u636e----------------------------------------------------------------------------\nduration:    4:12s (252s)\nstart:       Jul 17 2018 22:02:08.52 (1531836128.52)\nend:         Jul 17 2018 22:06:21.10 (1531836381.10)\nsize:        4.0 GB\nmessages:    95162\ncompression: none [2320/2320 chunks]\ntypes:       geometry_msgs/TwistWithCovarianceStamped [8927a1a12fb2607ceea095b2dc440a96]\n             nav_msgs/Odometry                        [cd5e73d190d741a2f92e81eda573aca7]\n             sensor_msgs/Imu                          [6a62c6daae103f4ff57a132d6f95cec2]\n             sensor_msgs/NavSatFix                    [2d3a8cd499b9b4a0249fb98fd05cfa48]\n             sensor_msgs/PointCloud2                  [1158d486dd51d683ce2f1be655c3c181]\ntopics:      /gps/fix           23209 msgs    : sensor_msgs/NavSatFix                   \n             /gps/odom          23215 msgs    : nav_msgs/Odometry                       \n             /gps/vel           23209 msgs    : geometry_msgs/TwistWithCovarianceStamped\n             /imu/data          23209 msgs    : sensor_msgs/Imu                         \n             /velodyne_points    2320 msgs    : sensor_msgs/PointCloud2\n</code></pre></p>"},{"location":"coding/ros/00_ros_msg_example/#rostopic-echo-gpsfix","title":"rostopic echo /gps/fix","text":"<pre><code>header: \n  seq: 20465\n  stamp: \n    secs: 1531836210\n    nsecs: 510304607\n  frame_id: \"gps\"\nstatus: \n  status: 1\n  service: 1\nlatitude: 31.5925101489\nlongitude: 120.777609767\naltitude: 12.1732759476\nposition_covariance: [0.08702499999999999, 0.0, 0.0, 0.0, 0.098596, 0.0, 0.0, 0.0, 0.505521]\nposition_covariance_type: 2\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#rostopic-echo-gpsodom","title":"rostopic echo /gps/odom","text":"<pre><code>header: \n  seq: 23294\n  stamp: \n    secs: 1531836238\n    nsecs: 802880267\n  frame_id: \"utm\"\nchild_frame_id: \"base_link\"\npose: \n  pose: \n    position: \n      x: 480.502068639\n      y: -13.6451568799\n      z: 0.0175981521606\n    orientation: \n      x: 0.0\n      y: 0.0\n      z: 0.000639999956309\n      w: 0.9999997952\n  covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\ntwist: \n  twist: \n    linear: \n      x: 0.0011\n      y: 0.0008\n      z: 0.0007\n    angular: \n      x: 0.0\n      y: 0.0\n      z: 0.0\n  covariance: [0.000361, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00016900000000000004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00044100000000000004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#rostopic-echo-gpsvel","title":"rostopic echo /gps/vel","text":"<pre><code>header: \n  seq: 32407\n  stamp: \n    secs: 1531836329\n    nsecs: 939887881\n  frame_id: \"utm\"\ntwist: \n  twist: \n    linear: \n      x: -4.8506\n      y: -2.8112\n      z: 0.0315\n    angular: \n      x: 0.0\n      y: 0.0\n      z: 0.0\n  covariance: [0.00019600000000000002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00032400000000000007, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00044100000000000004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#rostopic-echo-imudata","title":"rostopic echo /imu/data","text":"<pre><code>header: \n  seq: 18441\n  stamp: \n    secs: 1531836190\n    nsecs: 268546124\n  frame_id: \"gps\"\norientation: \n  x: 0.0131102252045\n  y: -0.00598663135602\n  z: -0.948375507513\n  w: 0.316821998905\norientation_covariance: [4.0960000000000007e-07, 0.0, 0.0, 0.0, 3.364e-07, 0.0, 0.0, 0.0, 2.4649000000000007e-06]\nangular_velocity: \n  x: -0.00608\n  y: 0.00299\n  z: -0.00579\nangular_velocity_covariance: [0.000436332313, 0.0, 0.0, 0.0, 0.000436332313, 0.0, 0.0, 0.0, 0.000436332313]\nlinear_acceleration: \n  x: 0.1486\n  y: -0.1413\n  z: 9.6373\nlinear_acceleration_covariance: [0.0004, 0.0, 0.0, 0.0, 0.0004, 0.0, 0.0, 0.0, 0.0004]\n</code></pre>"},{"location":"coding/ros/00_ros_msg_example/#rostopic-echo-velodyne_points","title":"rostopic echo /velodyne_points","text":"<p>\u70b9\u4e91\u6570\u636e\u683c\u5f0f\u89e3\u6790 sensor_msgs::PointCloud2 <pre><code>header: \n  seq: 0\n  stamp: \n    secs: 1543222266\n    nsecs: 674018000\n  frame_id: \"velodyne\"\nheight: 1\nwidth: 5190\nfields: \n  - \n    name: \"x\"\n    offset: 0\n    datatype: 7\n    count: 1\n  - \n    name: \"y\"\n    offset: 4\n    datatype: 7\n    count: 1\n  - \n    name: \"z\"\n    offset: 8\n    datatype: 7\n    count: 1\nis_bigendian: False\npoint_step: 16  //\u4e00\u4e2a\u70b9\u5360\u7528\u5185\u5b58\u7684\u5b57\u8282\u6570(byte). 4\u4e2auint32_t\u7c7b\u578b  uint_32\u4e3a4bytes  32bits\u6bd4\u7279\nrow_step: 83040 //height=1\u65f6\u4e00\u884c\u6216\u8005\u6240\u6709\u70b9\u5360\u7528\u5185\u5b58\u7684\u5b57\u8282\u6570\uff0c5190(\u70b9\u7684\u4e2a\u6570)*4(xyzi uint32_t)*4(byte)\ndata: [201.....63]\nis_dense: False\n---\n</code></pre></p>"},{"location":"coding/system%26structure/operation_system/","title":"Operation system","text":""},{"location":"coding/system%26structure/operation_system/#_1","title":"\u7a0b\u5e8f\u6d41\u7a0b","text":"<p>\u9884\u7f16\u8bd1-&gt;\u7f16\u8bd1\u548c\u4f18\u5316-&gt;\u6c47\u7f16-&gt;\u94fe\u63a5 - \u9884\u7f16\u8bd1:\u5f15\u7528\u7684\u5934\u6587\u4ef6\u5305\u542b\u5230\u6e90\u4ee3\u7801 - static and shared libs   - static:\u66f4\u5feb\u3001\u66f4\u6613\u7528\u3001\u66f4\u5927   - shared:\u9700\u8981\u5b89\u88c5\u3001\u5c0f\u3001\u76f8\u6bd4static\u6162\u3001\u7cfb\u7edf\u4e2d\u914d\u7f6e\u6587\u4ef6<code>/etc/ld.so.conf</code>\u662f\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u641c\u7d22\u8def\u5f84\u914d\u7f6e\u6587\u4ef6     - <code>ldconfig -p</code></p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/","title":"Several Design Patterns By C++","text":"<p>Introduce some normal design patterns,codes by cpp.</p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#strategy-pattern","title":"Strategy Pattern","text":""},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#intent","title":"Intent","text":"<ul> <li>Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from the clients that use it.</li> <li>Capture the abstraction in an interface, bury implementation details in derived classes.</li> </ul> <p><pre><code>//By dexter @ 11/10/2020\n#include &lt;iostream&gt;\n\nclass Strategy {\n public:\n  explicit Strategy(){}\n  virtual ~Strategy(){}\n\n  virtual void exec() = 0;\n\n private:\n  Strategy(const Strategy&amp; rhs);\n  Strategy&amp; operator=(const Strategy&amp; rhs);\n};\n\nclass ConcreteStrategyA : public Strategy {\n public:\n  explicit ConcreteStrategyA() : Strategy() {}\n  ~ConcreteStrategyA() {}\n\n  void exec(){\n      std::cout&lt;&lt;\"ConcreteStrategyA::exec()\"&lt;&lt;std::endl;\n  }\n\n private:\n  ConcreteStrategyA(const ConcreteStrategyA&amp; rhs);\n  ConcreteStrategyA&amp; operator=(const ConcreteStrategyA&amp; rhs);\n};\n\nclass ConcreteStrategyB : public Strategy {\n public: \n  explicit ConcreteStrategyB() : Strategy() {}\n  ~ConcreteStrategyB(){}\n\n  void exec() {\n    std::cout&lt;&lt;\"ConcreteStrategyB::exec()\"&lt;&lt;std::endl;\n  }\n\n private: \n  ConcreteStrategyB(const ConcreteStrategyB&amp; rhs);\n  ConcreteStrategyB&amp; operator=(const ConcreteStrategyB&amp; rhs);\n};\n\nclass Context {\n public:\n  explicit Context(Strategy* strategy) : strategy_(strategy){}\n  ~Context(){}\n\n  void setSetrategy(Strategy* strategy) {\n    strategy_ = strategy;\n  }\n\n  void exec() {\n    strategy_-&gt;exec();\n  }\n private:\n  Context(const Context&amp; rhs);\n  Context&amp; operator=(const Context&amp; rhs);\n\n  Strategy* strategy_;\n};\n\nint main() {\n  ConcreteStrategyA stra_a;\n  ConcreteStrategyB stra_b;\n\n  std::cerr&lt;&lt;\"set a strategy:\\n\";\n  Context cont(&amp;stra_a);\n  cont.exec();\n  std::cerr&lt;&lt;\"set a strategy:\\n\";\n  cont.setSetrategy(&amp;stra_b);\n  cont.exec();\n\n  return 0;\n}\n</code></pre> output: <pre><code>set a strategy:\nConcreteStrategyA::exec()\nset a strategy:\nConcreteStrategyB::exec()\n</code></pre></p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#observer-pattern","title":"Observer Pattern","text":"<p>Observer pattern is used when there is one-to-many relationship between objects such as if one object is modified, its dependent objects are to be notified automatically. <pre><code>//By dexter @ 12/10/2020\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nclass Observer {\n public: \n  explicit Observer() {}\n  virtual ~Observer() {}\n\n  virtual void update() = 0;\n\n private:\n  Observer(const Observer&amp; rhs);\n  Observer&amp; operator=(const Observer&amp; rhs);\n};\n\nclass ConcreteObserveA : public Observer {\n public:\n  explicit ConcreteObserveA() : Observer() {}\n  ~ConcreteObserveA() {}\n\n  void update() {\n      std::cerr&lt;&lt;\"ConcreteObserveA::update\\n\";\n  }\n\n private: \n  ConcreteObserveA(const ConcreteObserveA&amp; rhs);\n  ConcreteObserveA&amp; operator=(const ConcreteObserveA&amp; rhs);\n};\n\nclass ConcreteObserveB : public Observer {\n public:\n  explicit ConcreteObserveB() : Observer() {}\n  ~ConcreteObserveB() {}\n\n  void update() {\n      std::cerr&lt;&lt;\"ConcreteObserveB::update\\n\";\n  }\n\n private: \n  ConcreteObserveB(const ConcreteObserveB&amp; rhs);\n  ConcreteObserveB&amp; operator=(const ConcreteObserveB&amp; rhs);\n};\n\nclass Subject {\n public:\n  explicit Subject() {}\n  virtual ~Subject() {}\n\n  virtual void registerObserver(Observer* observer) = 0;\n  virtual void removeObserver(Observer* observer) = 0;\n  virtual void notifyObserver() = 0;\n\n private:\n  Subject(const Subject&amp; rhs);\n  Subject&amp; operator=(const Subject&amp; rhs);\n};\n\nclass ConcreteSubjectA : public Subject {\n public:\n  explicit ConcreteSubjectA() : Subject() {}\n  ~ConcreteSubjectA() {}\n\n  void registerObserver(Observer* observer) {\n      observer_list_.push_back(observer);\n  }\n\n  void removeObserver(Observer* observer) {\n      for(auto it = observer_list_.begin(); it != observer_list_.end(); it++){\n          if(*it == observer){\n              observer_list_.erase(it);\n              return;\n          }\n      }\n  }\n\n  void notifyObserver() {\n      for(auto it = observer_list_.begin(); it != observer_list_.end(); it++){\n          (*it)-&gt;update();\n      }\n  }\n\n private:\n  ConcreteSubjectA(const ConcreteSubjectA&amp; rhs);\n  ConcreteSubjectA&amp; operator=(const ConcreteSubjectA&amp; rhs);\n  std::vector&lt;Observer*&gt; observer_list_;\n};\n\nint main() {\n    ConcreteObserveA obser_a;\n    ConcreteObserveB obser_b;\n    ConcreteSubjectA suba;\n\n    std::cerr&lt;&lt;\"add  two observer and update:\\n\";\n    suba.registerObserver(&amp;obser_a);\n    suba.registerObserver(&amp;obser_b);\n    suba.notifyObserver();\n    std::cout&lt;&lt;\"remove obser_a and update:\\n\";\n\n    suba.removeObserver(&amp;obser_a);\n    suba.notifyObserver();\n\n    return 0;\n}\n</code></pre> output: <pre><code>add  two observer and update:\nConcreteObserveA::update\nConcreteObserveB::update\nremove obser_a and update:\nConcreteObserveB::update\n</code></pre></p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#decorator-pattern","title":"Decorator Pattern","text":"<p>Decorator pattern allows a user to add new functionality to an existing object without altering its structure. This type of design pattern comes under structural pattern as this pattern acts as a wrapper to existing class. This pattern creates a decorator class which wraps the original class and privides additional functionality keeping class methods signature inact;</p> <p><pre><code>//By dexter @ 12/10/2020\n\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n\nclass Component {\n public:\n  explicit Component() {}\n  Component(const Component&amp; rhs) = delete;\n  Component&amp; operator=(const Component&amp; rhs) = delete;\n\n  virtual ~Component() {}\n\n  virtual std::string methodA() = 0;\n  virtual std::string methodB() = 0;\n\n private:\n};\n\nclass ConcreteComponentA : public Component {\n public:\n  ConcreteComponentA() : Component() {}\n  ~ConcreteComponentA() {}\n  ConcreteComponentA(const ConcreteComponentA&amp; rhs) = delete;\n  ConcreteComponentA&amp; operator=(const ConcreteComponentA&amp; rhs) = delete;\n\n  std::string methodA(){\n      return \"ConcreteComponentA methodA\";\n  }\n  std::string methodB(){\n      return \"ConcreteComponentA methodB\";\n  }\n\n private:\n\n};\n\nclass Decorator : public Component {\n public:\n  Decorator(std::shared_ptr&lt;Component&gt; component) : component_(component) {}\n  ~Decorator() {}\n  Decorator(const Decorator&amp; rhs) = delete;\n  Decorator&amp; operator=(const Decorator&amp; rhs) = delete;\n\n  std::string methodA() {\n      return component_-&gt;methodA();\n  }\n\n  std::string methodB() {\n      return component_-&gt;methodB();\n  }\n\n\n private:\n protected:\n  std::shared_ptr&lt;Component&gt; component_;\n};\n\nclass ConcreteDecoratorA : public Decorator {\n public:\n  ConcreteDecoratorA(std::shared_ptr&lt;Component&gt; component) : Decorator(component) {}\n  ~ConcreteDecoratorA() {}\n  ConcreteDecoratorA(const ConcreteDecoratorA&amp; rhs) = delete;\n  ConcreteDecoratorA&amp; operator=(const ConcreteDecoratorA&amp; rhs) = delete;\n\n  std::string methodA(){\n      return component_-&gt;methodA() + \"  ConcreteDecoratorA methodA\";\n  }\n\n  std::string methodB(){\n      return component_-&gt;methodB() + \"  ConcreteDecoratorA methodB\";\n  }\n\n private:\n};\n\nclass ConcreteDecoratorB : public Decorator {\n public:\n  ConcreteDecoratorB(std::shared_ptr&lt;Component&gt; component) : Decorator(component) {}\n  ~ConcreteDecoratorB() {}\n  ConcreteDecoratorB(const ConcreteDecoratorB&amp; rhs) = delete;\n  ConcreteDecoratorB&amp; operator=(const ConcreteDecoratorB&amp; rhs) = delete;\n\n  std::string methodA(){\n      return component_-&gt;methodA() + \"  ConcreteDecoratorB methodA\";\n  }\n\n  std::string methodB(){\n      return component_-&gt;methodB() + \"  ConcreteDecoratorB methodB\";\n  }\n\n private:\n};\n\nint main() {\n  std::shared_ptr&lt;ConcreteComponentA&gt; ptr_component_a = std::make_shared&lt;ConcreteComponentA&gt;();\n  std::cout &lt;&lt; ptr_component_a-&gt;methodA() &lt;&lt; \", \" &lt;&lt; ptr_component_a-&gt;methodB() &lt;&lt; std::endl;\n\n  std::shared_ptr&lt;ConcreteDecoratorA&gt; ptr_decorator_a = std::make_shared&lt;ConcreteDecoratorA&gt;(\n      ptr_component_a);\n  std::cout &lt;&lt; ptr_decorator_a-&gt;methodA() &lt;&lt; \", \" &lt;&lt; ptr_decorator_a-&gt;methodB() &lt;&lt; std::endl;\n\n  std::shared_ptr&lt;ConcreteDecoratorB&gt; ptr_decorator_b = std::make_shared&lt;ConcreteDecoratorB&gt;(\n      ptr_component_a);\n  std::cout &lt;&lt; ptr_decorator_b-&gt;methodA() &lt;&lt; \", \" &lt;&lt; ptr_decorator_b-&gt;methodB() &lt;&lt; std::endl;\n\n  std::shared_ptr&lt;ConcreteDecoratorB&gt; ptr_decorator_a_b = std::make_shared&lt;ConcreteDecoratorB&gt;(\n      ptr_decorator_a);\n  std::cout &lt;&lt; ptr_decorator_a_b-&gt;methodA() &lt;&lt; \", \" &lt;&lt; ptr_decorator_a_b-&gt;methodB() &lt;&lt; std::endl;\n\n  return 0;\n}\n</code></pre> output: <pre><code>ConcreteComponentA methodA, ConcreteComponentA methodB\nConcreteComponentA methodA  ConcreteDecoratorA methodA, ConcreteComponentA methodB  ConcreteDecoratorA methodB\nConcreteComponentA methodA  ConcreteDecoratorB methodA, ConcreteComponentA methodB  ConcreteDecoratorB methodB\nConcreteComponentA methodA  ConcreteDecoratorA methodA  ConcreteDecoratorB methodA, ConcreteComponentA methodB  ConcreteDecoratorA methodB  ConcreteDecoratorB methodB\n</code></pre></p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#factory-pattern","title":"Factory Pattern","text":"<p>The factory pattern is a creational pattern that uses factory methods to deal with the problem of creating objects without having to specify the exact calss of the object that will be created. This is done by creating objects by calling a factory method, either specified in an interface and implemented by child classes, or implemented in a base class and optionally overridden by derived classes rather than by calling a constructor. According to the type of problems, there are three kinds of <code>Factory Pattern</code>: - Simple Factory - Normal Factory - Abstract Factory</p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#simple-factory","title":"Simple Factory","text":"<p>Simple Factory defines a method to create an object. It voilates the <code>Open/close Principle(OCP)</code> <pre><code>//By dexter @ 13/10/2020\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n\nclass Product {\n public:\n  explicit Product() {}\n  virtual ~Product() {}\n  Product(const Product &amp;rhs) = delete;\n  Product &amp;operator=(const Product &amp;rhs) = delete;\n\n  virtual void operation() = 0;\n};\n\nclass ConcreteProductA : public Product {\n public:\n  explicit ConcreteProductA()  : Product() {}\n  ~ConcreteProductA() {}\n  ConcreteProductA(const ConcreteProductA &amp;rhs) = delete;\n  ConcreteProductA &amp;operator=(const ConcreteProductA &amp;rhs) = delete;\n\n  void operation() {\n      std::cerr&lt;&lt;\"ConcreteProductA is called...\"&lt;&lt;std::endl;\n  }\n};\n\nclass ConcreteProductB : public Product {\n public:\n  explicit ConcreteProductB()  : Product() {}\n  ~ConcreteProductB() {}\n  ConcreteProductB(const ConcreteProductB &amp;rhs) = delete;\n  ConcreteProductB &amp;operator=(const ConcreteProductB &amp;rhs) = delete;\n\n  void operation() {\n      std::cerr&lt;&lt;\"ConcreteProductB is called...\"&lt;&lt;std::endl;\n  }\n};\n\nclass Factory {\n public:\n  Factory() {}\n  ~Factory() {}\n  Factory(const Factory &amp;rhs) = delete;\n  Factory &amp;operator=(const Factory &amp;rhs) = delete;\n\n  std::shared_ptr&lt;Product&gt; createProduct(const std::string &amp;product) {\n      if(product == \"A\") {\n          return std::make_shared&lt;ConcreteProductA&gt;();\n      }\n      if(product == \"B\") {\n          return std::make_shared&lt;ConcreteProductB&gt;();\n      }\n  }\n};\n\nint main() {\n    Factory factory;\n    std::shared_ptr&lt;Product&gt; product_a = factory.createProduct(\"A\");\n    std::shared_ptr&lt;Product&gt; product_b = factory.createProduct(\"B\");\n\n    product_a-&gt;operation();\n    product_b-&gt;operation();\n\n    return 0;\n}\n</code></pre> output: <pre><code>ConcreteProductA is called...\nConcreteProductB is called...\n</code></pre></p>"},{"location":"coding/system%26structure/several_design_patterns_by_cpp/#normal-factory","title":"Normal Factory","text":"<p>Normal Factory not only encapsulates the creation of object but also put the creation of object into derived class. It only provides the method of creating objects, and the realization is in <code>ConcreteFactory</code>. Disadvantage: the addition of factory object will cause the increasing of classes. <pre><code>//By dexter @ 13/10/2020\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n\nclass Product{\n public:\n  explicit Product() {}\n  virtual ~Product() {}\n  Product(const Product &amp;rhs) = delete;\n  Product &amp;operator=(const Product &amp;rhs) = delete;\n\n  virtual void operation() = 0;\n};\n\nclass ConcreteProductA : public Product {\n public:\n  explicit ConcreteProductA() : Product() {}\n  ~ConcreteProductA() {}\n  ConcreteProductA(const ConcreteProductA &amp;rhs) = delete;\n  ConcreteProductA &amp;operator=(const ConcreteProductA &amp;rhs) = delete;\n\n  void operation() {\n      std::cerr&lt;&lt;\"ConcreteProductA is called...\"&lt;&lt;std::endl;\n  }\n};\n\nclass ConcreteProductB : public Product {\n public:\n  explicit ConcreteProductB() : Product(){}\n  ~ConcreteProductB() {}\n  ConcreteProductB(const ConcreteProductB &amp;rhs) = delete;\n  ConcreteProductB &amp;operator=(const ConcreteProductB &amp;rhs) = delete;\n\n  void operation() {\n      std::cerr&lt;&lt;\"ConcreteProductB is called...\"&lt;&lt;std::endl;\n  }\n};\n\nclass Factory {\n public:\n  explicit Factory() {}\n  virtual ~Factory() {}\n  Factory(const Factory &amp;rhs) = delete;\n  Factory &amp;operator=(const Factory &amp;rhs) = delete;\n\n  virtual std::shared_ptr&lt;Product&gt; createProduct() = 0;\n};\n\nclass ConcreteFactoryA : public Factory {\n public:\n  explicit ConcreteFactoryA() : Factory() {}\n  ~ConcreteFactoryA() {}\n  ConcreteFactoryA(const ConcreteFactoryA &amp;rhs) = delete;\n  ConcreteFactoryA &amp;operator=(const ConcreteFactoryA &amp;rhs) = delete;\n\n  std::shared_ptr&lt;Product&gt; createProduct() {\n      return std::make_shared&lt;ConcreteProductA&gt;();\n  }\n};\n\nclass ConcreteFactoryB : public Factory {\n public:\n  explicit ConcreteFactoryB() : Factory() {}\n  ~ConcreteFactoryB() {}\n  ConcreteFactoryB(const ConcreteFactoryB &amp;rhs) = delete;\n  ConcreteFactoryB &amp;operator=(const ConcreteFactoryB &amp;rhs) = delete;\n\n  std::shared_ptr&lt;Product&gt; createProduct() {\n      return std::make_shared&lt;ConcreteProductB&gt;();\n  }\n};\n\nint main() {\n    auto factor_a = std::make_shared&lt;ConcreteFactoryA&gt;();\n    auto product_a = factor_a-&gt;createProduct();\n    product_a-&gt;operation();\n\n    auto factor_b = std::make_shared&lt;ConcreteFactoryB&gt;();\n    auto product_b = factor_b-&gt;createProduct();\n    product_b-&gt;operation();\n\n    return 0;\n}\n</code></pre> output: <pre><code>ConcreteProductA is called...\nConcreteProductB is called...\n</code></pre></p>"},{"location":"coding/system%26structure/uml_graph/","title":"UML Graphic","text":"<p>This page is the note of Bjarne's speech at Edinburgh from youtobe.</p> <p></p>"},{"location":"dairy/about_human/","title":"About human","text":"<p>\u884c\u4e3a\u517b\u6210\u4e60\u60ef-&gt;\u4e60\u60ef\u9020\u5c31\u6027\u683c-&gt;\u6027\u683c\u51b3\u5b9a\u547d\u8fd0</p> <p>\u503e\u5411\u6027+\u60c5\u7eea+\u81ea\u6211\u8ba4\u53ef\u5ea6 = \u6027\u683c</p> \u503e\u5411\u6027 \u60c5\u7eea \u81ea\u6211\u8ba4\u53ef\u5ea6 \u6027\u683c \u5185\u5411 \u7a33\u5b9a \u81ea\u4fe1 \u5916\u5411 \u4e0d\u5b9a \u81ea\u5351 1 2 3 4 \u5185\u5411 \u7a33\u5b9a \u81ea\u4fe1 type1 \u5185\u5411 \u7a33\u5b9a \u81ea\u5351 type2 \u5185\u5411 \u4e0d\u7a33\u5b9a \u81ea\u5351 type3 \u5185\u5411 \u4e0d\u7a33\u5b9a \u81ea\u4fe1 type4 <ul> <li>type1=\u5185\u5411\u3001\u7a33\u5b9a\u3001\u81ea\u4fe1\u7684\u4eba\uff1a\u6c89\u7740\u51b7\u9759\u3001\u5584\u4e8e\u601d\u8003\u3001\u8c28\u614e\u6709\u8282\u5f8b\u3001\u6709\u81ea\u6211\u4e3b\u89c1\u3001\u4e0d\u559c\u6b22\u4e89\u5435\u5e73\u548c\u4e14\u6e29\u67d4</li> <li>type2=\u5185\u5411\u3001\u7a33\u5b9a\u3001\u81ea\u5351\u7684\u4eba\uff1a\u987a\u4ece\u3001\u4f9d\u8d56\u3001\u542c\u8bdd\u3001\u88ab\u52a8\u3001\u6ca1\u4e3b\u89c1\u3001\u4e0d\u5584\u8a00\u8f9e\u3001\u4e56\u5de7\u3001\u61a8\u539a</li> <li>type3=\u5185\u5411\u3001\u4e0d\u7a33\u5b9a\u3001\u81ea\u5351\u7684\u4eba\uff1a\u60b2\u89c2\u3001\u5b64\u50fb\u3001\u8106\u5f31\u3001\u5bb9\u6613\u6291\u90c1\u3001\u4e0d\u559c\u793e\u4ea4\u3001\u4e0d\u6562\u4e0e\u4eba\u4ea4\u6d41</li> <li> <p>type4=\u5185\u5411\u3001\u4e0d\u7a33\u5b9a\u3001\u81ea\u4fe1\u7684\u4eba\uff1a\u4fdd\u5b88\u5374\u56fa\u6267\u3001\u5185\u5fc3\u7126\u8651\u3001\u4e3a\u4eba\u51b7\u6f20\u3001\u5728\u5916\u4e0d\u53d7\u6b22\u8fce\u3001\u5728\u5bb6\u91cc\u987d\u56fa\u3001\u813e\u6c14\u5014\u3001\u6b7b\u729f\u6b7b\u729f</p> </li> <li> <p>type5=\u5916\u5411\u3001\u7a33\u5b9a\u3001\u81ea\u4fe1\u7684\u4eba\uff1a\u5584\u4e8e\u4ea4\u9645\u3001\u6d3b\u6cfc\u5f00\u6717\u3001\u5065\u8c08\u3001\u70ed\u60c5\u4e3b\u52a8\u3001\u98ce\u8da3\u5e7d\u9ed8\u3001\u7ec4\u7ec7\u80fd\u529b\u5f3a</p> </li> <li>type6=\u5916\u5411\u3001\u7a33\u5b9a\u3001\u81ea\u5351\u7684\u4eba\uff1a\u6709\u540c\u60c5\u5fc3(\u5584\u89e3\u4eba\u610f)\u3001\u968f\u548c\u3001\u4eba\u751f\u4fe1\u6761\u662f\u5403\u4e8f\u662f\u798f\u3001\u8c41\u8fbe\u3001\u5b89\u4e4b\u82e5\u7d20</li> <li>type7=\u5916\u5411\u3001\u4e0d\u7a33\u5b9a\u3001\u81ea\u4fe1\u7684\u4eba\uff1a\u597d\u6597\u3001\u6613\u51b2\u52a8\u3001\u610f\u6c14\u7528\u4e8b\u3001\u4e0d\u670d\u5c31\u5e72\u3001\u81ea\u5df1\u8ba4\u53ef\u7684\u4eba\u672a\u5fc5\u8ba4\u53ef\u4ed6</li> <li>type8=\u5916\u5411\u3001\u4e0d\u7a33\u5b9a\u3001\u81ea\u5351\u7684\u4eba\uff1a\u654f\u611f\u591a\u7591\u3001\u4e0d\u5b89\u7126\u8651\u3001\u5bb9\u6613\u62b1\u6028\u3001\u5bb9\u6613\u5bb6\u4e11\u5916\u626c(\u56e0\u4e3a\u6e34\u671b\u88ab\u8ba4\u540c)\u3001\u9047\u4e8b\u6025\u8e81\u3001\u4eba\u9645\u5173\u7cfb\u5dee</li> </ul> <p>\u65e0\u5173\u5185\u5411or\u5916\u5411\u3001\u505a\u4e00\u4e2a\u60c5\u7eea\u7a33\u5b9a\u800c\u81ea\u4fe1\u7684\u4eba\u3001\u4fdd\u7559\u5e95\u8272\u800c\u4e0d\u5931\u98ce\u60c5\u4e07\u79cd\u3001\u4f9d\u9760\u667a\u6167\u548c\u8ba4\u77e5\u6323\u8131\u672c\u80fd\u7ecf\u9a8c\u7684\u8212\u670d\uff1b\u4e0e\u5176\u4e86\u89e3\u81ea\u5df1\u4e0d\u5982\u5851\u9020\u81ea\u5df1--\u4e0e\u5176\u5851\u9020\u4ed6\u4eba\u4e0d\u5982\u63a5\u7eb3\u4ed6\u4eba \u5343\u4eba\u4e00\u9762\u4e0d\u5982\u767e\u82b1\u9f50\u653e</p>"},{"location":"dairy/about_human/#_1","title":"\u4eb2\u60c5\u7bc7","text":"<ul> <li>\u521d\u7ea7-\u81ea\u79c1\u7684\u7236\u6bcd:</li> <li>\u4e2d\u7ea7-\u98ce\u9669\u7684\u7236\u6bcd\uff1a</li> </ul>"},{"location":"dairy/about_human/#_2","title":"\u7231\u60c5\u7bc7","text":"<ul> <li>\u751f\u7406\u6027\u559c\u6b22\u548c\u8377\u5c14\u8499</li> <li>\u4e92\u76f8\u5438\u5f15, \u7537(\u9ad8\u5927\u5065\u58ee\u3001\u672c\u9886\u3001\u8d22\u5bcc\u548c\u5730\u4f4d)\u3001\u5973(\u8eab\u4f53\u5bb9\u8c8c\u3001\u5fe0\u8bda\u3001\u667a\u6167)</li> <li>\u4f9d\u8d56\u611f\u548c\u5f52\u5c5e\u611f</li> </ul> <p>\u81ea\u613f\u3001\u5e73\u7b49\u3001\u7406\u89e3\u548c\u5c0a\u91cd</p>"},{"location":"dairy/meetint_key_points/","title":"Meetint key points","text":""},{"location":"dairy/meetint_key_points/#-personal","title":"\u5f00\u4f1a\u65b9\u5f0f-personal","text":"<ul> <li>\u6211\u53d1\u73b0: \u6709\u4ec0\u4e48\u95ee\u9898</li> <li>\u6211\u611f\u89c9: \u6709\u4ec0\u4e48\u540e\u679c</li> <li>\u6211\u5efa\u8bae: \u7528\u4ec0\u4e48\u6539\u6b63</li> <li>\u6211\u5e0c\u671b: \u90fd\u6267\u884c\u5230\u4f4d</li> </ul>"},{"location":"dairy/meetint_key_points/#_1","title":"Meetint key points","text":"<p>\u6709\u51c6\u5907 \u6709\u7eaa\u5f8b \u6709\u4e3b\u9898 \u6709\u7a0b\u5e8f \u6709\u68c0\u67e5</p> <p>\u4e0d\u52a1\u865a \u4e0d\u8ba8\u8bba\u7ec6\u8282 \u4e0d\u641e\u4e00\u8a00\u5802 \u4e0d\u62b1\u6028 \u4e0d\u8dd1\u9898</p> <p>\u5f00\u4f1a\u6309\u7167\u6bcf\u4e2a\u8bae\u9898\u8ba8\u8bba \u597d\u7684\u65b9\u9762 \u5b58\u5728\u7684\u95ee\u9898 \u63d0\u51fa\u6539\u8fdb\u63aa\u65bd \u5e03\u7f6e\u4e0b\u4e00\u6b65</p>"},{"location":"dairy/note-no-valience-chatting/","title":"\u8bfb\u4e66\u7b14\u8bb0:\u975e\u66b4\u529b\u6c9f\u901a","text":"<p>\u9605\u8bfb\u300a\u975e\u66b4\u529b\u6c9f\u901a\u300b\u6458\u8981.</p> <ol> <li>\u7559\u610f</li> <li>\u53cc\u8d62\u601d\u7ef4(THINK WIN/WIN) \u53cc\u8d62\u601d\u7ef4\u662f\u4e00\u79cd\u57fa\u4e8e\u4e92\u656c\u4e92\u60e0\u7684\u601d\u8003\u6846\u67b6\uff0c\u76ee\u7684\u662f\u66f4\u4e30\u76db\u7684\u673a\u4f1a\u3001\u8d22\u5bcc\u548c\u8d44\u6e90\uff0c\u800c\u975e\u654c\u5bf9\u5f0f\u7684\u7ade\u4e89</li> <li>\u77e5\u5f7c\u89e3\u5df1(SEEK FIRST TO UNDERSTND,THEN TO BE UNDERSTOOD) \u5f53\u6211\u4eec\u820d\u5f03\u56de\u7b54\u5fc3\uff0c\u6539\u4ee5\u4e86\u89e3\u53bb\u8046\u542c\u522b\u4eba\uff0c\u4fbf\u80fd\u5f00\u542f\u771f\u6b63\u7684\u6c9f\u901a\uff0c\u589e\u8fdb\u5f7c\u6b64\u5173\u7cfb\u3002</li> <li>\u7edf\u5408\u7efc\u6548(SYNERGIZE) \u7edf\u5408\u7efc\u6548\u610f\u601d\u662f\u521b\u9020\u7b2c\u4e09\u79cd\u9009\u62e9-\u975e\u6309\u7167\u6211\u7684\u65b9\u5f0f\uff0c\u4e5f\u975e\u9075\u5faa\u4f60\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u7b2c\u4e09\u79cd\u8fdc\u80dc\u4e8e\u4e2a\u4eba\u4e4b\u89c1\u7684\u65b9\u6cd5\u3002\u654c\u5bf9\u7684\u6001\u5ea6(1+1=\u00bd),\u4e0d\u59a5\u534f\u4e3a\u76ee\u6807(1+1=3/2)\uff0c\u6d45\u5c42\u5408\u4f5c(1+1=2),\u521b\u9020\u5f0f\u5408\u4f5c(1+1&gt;2)</li> <li> <p>\u4e0d\u65ad\u66f4\u65b0(SHARPEN THE SAW) \u5373\u5728\u56db\u4e2a\u57fa\u672c\u751f\u6d3b\u5c42\u9762(\u8eab\u4f53\u3001\u7cbe\u795e\u3001\u667a\u529b\u3001\u793e\u4f1a/\u60c5\u611f)\u4e0d\u65ad\u7684\u66f4\u65b0\u8fed\u4ee3\u81ea\u5df1\u3002</p> </li> <li> <p>\u6050\u6016\u611f\u548c\u4e0d\u5b89\u5168\u611f</p> </li> <li>\u6211\u73b0\u5728\u5c31\u50cf\u5f97\u5230</li> <li>\u8c34\u8d23\u548c\u62b1\u6028</li> <li>\u7edd\u671b\u65e0\u52a9</li> <li>\u7f3a\u4e4f\u4eba\u751f\u5e73\u8861</li> <li>\u6211\u7684\u5b9a\u4f4d\u5728\u54ea\u513f</li> <li>\u6e34\u671b\u7406\u89e3</li> <li>\u51b2\u7a81\u548c\u5206\u6b67</li> <li>\u4e2a\u4eba\u7684\u505c\u6ede\u4e0d\u524d</li> </ol>"},{"location":"dairy/note-the-seven-habits-of-effective-awosome/","title":"\u8bfb\u4e66\u7b14\u8bb0:\u9ad8\u6548\u4eba\u58eb\u7684\u4e03\u4e2a\u4e60\u60ef","text":"<p>\u9605\u8bfb\u300a\u9ad8\u6548\u4eba\u58eb\u7684\u4e03\u4e2a\u4e60\u60ef\u300b\u6458\u8981.</p> <ol> <li>\u79ef\u6781\u4e3b\u52a8(BE PROACTIVE) \u4e3b\u52a8\u79ef\u6781\u5373\u91c7\u53d6\u884c\u52a8\uff0c\u4e3a\u81ea\u5df1\u7684\u8fc7\u53bb\u3001\u73b0\u5728\u3001\u672a\u6765\u7684\u884c\u4e3a\u8d1f\u8d23\uff0c\u5e76\u4f9d\u636e\u539f\u5219\u548c\u4ef7\u503c\u89c2\u800c\u975e\u60c5\u7eea\u6216\u5916\u5728\u73af\u5883\u6765\u505a\u51b3\u5b9a\u3002</li> <li>\u4ee5\u7ec8\u4e3a\u59cb(BEGIN WITH THE END IN MIND) \u6240\u6709\u4e8b\u7269\u90fd\u7ecf\u8fc7\u4e24\u6b21\u521b\u9020-\u5148\u7ecf\u8fc7\u8111\u6d77\u7684\u915d\u917f\u548c\u9884\u6f14\uff0c\u5176\u6b21\u624d\u662f\u5b9e\u8d28\u6027\u7684\u521b\u9020\u3002</li> <li>\u8981\u4e8b\u7b2c\u4e00(PUT FIRST THINGS FIRST) \u8981\u4e8b\u7b2c\u4e00\u5373\u5b9e\u8d28\u7684\u521b\u9020\uff0c\u662f\u68a6\u60f3(\u4f60\u7684\u76ee\u6807\u3001\u4ef7\u503c\u89c2\u53ca\u8981\u4e8b\u5904\u7406\u7684\u987a\u5e8f)\u7684\u7ec4\u7ec7\u548c\u5b9e\u8df5\u3002</li> <li>\u53cc\u8d62\u601d\u7ef4(THINK WIN/WIN) \u53cc\u8d62\u601d\u7ef4\u662f\u4e00\u79cd\u57fa\u4e8e\u4e92\u656c\u4e92\u60e0\u7684\u601d\u8003\u6846\u67b6\uff0c\u76ee\u7684\u662f\u66f4\u4e30\u76db\u7684\u673a\u4f1a\u3001\u8d22\u5bcc\u548c\u8d44\u6e90\uff0c\u800c\u975e\u654c\u5bf9\u5f0f\u7684\u7ade\u4e89</li> <li>\u77e5\u5f7c\u89e3\u5df1(SEEK FIRST TO UNDERSTND,THEN TO BE UNDERSTOOD) \u5f53\u6211\u4eec\u820d\u5f03\u56de\u7b54\u5fc3\uff0c\u6539\u4ee5\u4e86\u89e3\u53bb\u8046\u542c\u522b\u4eba\uff0c\u4fbf\u80fd\u5f00\u542f\u771f\u6b63\u7684\u6c9f\u901a\uff0c\u589e\u8fdb\u5f7c\u6b64\u5173\u7cfb\u3002</li> <li>\u7edf\u5408\u7efc\u6548(SYNERGIZE) \u7edf\u5408\u7efc\u6548\u610f\u601d\u662f\u521b\u9020\u7b2c\u4e09\u79cd\u9009\u62e9-\u975e\u6309\u7167\u6211\u7684\u65b9\u5f0f\uff0c\u4e5f\u975e\u9075\u5faa\u4f60\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u7b2c\u4e09\u79cd\u8fdc\u80dc\u4e8e\u4e2a\u4eba\u4e4b\u89c1\u7684\u65b9\u6cd5\u3002\u654c\u5bf9\u7684\u6001\u5ea6(1+1=\u00bd),\u4e0d\u59a5\u534f\u4e3a\u76ee\u6807(1+1=3/2)\uff0c\u6d45\u5c42\u5408\u4f5c(1+1=2),\u521b\u9020\u5f0f\u5408\u4f5c(1+1&gt;2)</li> <li> <p>\u4e0d\u65ad\u66f4\u65b0(SHARPEN THE SAW) \u5373\u5728\u56db\u4e2a\u57fa\u672c\u751f\u6d3b\u5c42\u9762(\u8eab\u4f53\u3001\u7cbe\u795e\u3001\u667a\u529b\u3001\u793e\u4f1a/\u60c5\u611f)\u4e0d\u65ad\u7684\u66f4\u65b0\u8fed\u4ee3\u81ea\u5df1\u3002</p> </li> <li> <p>\u6050\u6016\u611f\u548c\u4e0d\u5b89\u5168\u611f</p> </li> <li>\u6211\u73b0\u5728\u5c31\u50cf\u5f97\u5230</li> <li>\u8c34\u8d23\u548c\u62b1\u6028</li> <li>\u7edd\u671b\u65e0\u52a9</li> <li>\u7f3a\u4e4f\u4eba\u751f\u5e73\u8861</li> <li>\u6211\u7684\u5b9a\u4f4d\u5728\u54ea\u513f</li> <li>\u6e34\u671b\u7406\u89e3</li> <li>\u51b2\u7a81\u548c\u5206\u6b67</li> <li>\u4e2a\u4eba\u7684\u505c\u6ede\u4e0d\u524d</li> </ol>"},{"location":"m%26l/calib_imu_wheel/","title":"TODO: calib_imu_wheel","text":""},{"location":"m%26l/calib_imu_wheel/#yaw_rate_biasspeed_biasfrom-longchen","title":"\u5730\u76d8\u4fe1\u53f7yaw_rate_bias\u3001\u8f6e\u901f\u7cfb\u6570speed_bias\u6807\u5b9a(from longchen)","text":"<ul> <li>\u72b6\u6001\u91cf</li> </ul> \\[     X(x , y,  z,  roll,  pitch,  yaw,  yaw\\_rate,  yaw\\_rate\\_bias,  speed,   speed\\_scale) \\] <ul> <li>\u63a7\u5236\u91cf</li> </ul> \\[ u(speed, yawrate, dt) \\] yaw yaw_rate yaw_rate_bias speed speed_scale \\(\\theta\\) \\(w\\) \\(w_b\\) \\(v\\) \\(v_s\\) <p>predict</p> <p>yaw\u4ee5\u4e1c\u4e3a0\u5ea6\uff0c\u53f3\u624b\u6cd5\u5219\uff0c\u4e1c\u9006\u65f6\u9488: \\(0 \\to 180\\), \u4e1c\u987a\u65f6\u9488:\\(0 \\to -180\\)</p> \\[   \\begin{align*}     &amp; {v}' = u(v) * [1 + u(v_s)] \\\\     &amp; {w}' = u(w) + w_b \\\\     &amp; {\\theta}' = \\theta + {w}' \\cdot \\delta{t}\\\\     &amp; {x}' = x + {v}' \\cdot \\delta{t} \\cdot \\cos({\\theta}') \\\\     &amp; {y}' = y + {v}' \\cdot \\delta{t} \\cdot \\sin({\\theta}')   \\end{align*} \\] <p>\u8ba1\u7b97Jacobian</p> \\[ \\begin{gather}    x\u884cyaw\u5217\u503c \\\\\\\\  \\dfrac{\\partial {x}'}{\\partial \\theta} =  -\\sin{\\theta}' \\cdot {v}' \\cdot \\delta t \\end{gather} \\]"},{"location":"m%26l/cloud_registration/","title":"\u70b9\u4e91\u914d\u51c6","text":""},{"location":"m%26l/cloud_registration/#note-of-pointmatcher","title":"note of pointmatcher","text":"<ul> <li>target(ref-scan|pre-scan)\u548csource(read-scan|cur-scan)\u53bb\u9664\u8d28\u5fc3</li> </ul> \\[ \\begin{align} R^* = argmin \\frac{1}{2} \\sum_{i=1}^{n} \\lVert q_t -  R q_s\\rVert^2   \\end{align} \\] \\[ W = \\sum \\left( q_t q_s^T\\right) = U  \\Sigma V^T \\to R = UV^T \\qquad t = q_t - Rq_s \\] <ul> <li>residuals\u53ef\u7531<code>point-&gt;point</code>\u3001<code>point-&gt;line</code>\u3001<code>point-&gt;plane</code></li> </ul>"},{"location":"m%26l/cloud_registration/#pointmatcher","title":"PointMatcher","text":""},{"location":"m%26l/cloud_registration/#ref-reading","title":"ref \u548c reading \u53bb\u9664\u8d28\u5fc3","text":"<ul> <li><code>tf_refi_in_refmean</code></li> <li>reference\u539f\u70b9\u4e3aref</li> <li>\u7b97\u6cd5\u6d41\u7a0b</li> <li>T-&gt;init Identity Transform</li> <li>\u5bf9reading\u505a\\(T\\)\u53d8\u6362,\u5f62\u6210reading_reset</li> <li>\u5bf9reading_reset\u4e2d\u6bcf\u4e2a\u70b9\u5728reference\u4e2d\u5bfb\u627e\u6700\u90bb\u8fd1\u7684\u70b9,\u5e76\u4fdd\u5b58\u8ddd\u79bb\u548cindex</li> </ul>"},{"location":"m%26l/cloud_registration/#details","title":"details","text":"<ul> <li>ref's Normal <p>e.g \\(3 \\times 277\\)</p> </li> </ul> <p>$$    \\begin{bmatrix}        x_1 &amp;x_2 &amp;... &amp;x_n \\\\        y_1 &amp;y_2 &amp;... &amp;y_n \\\\        z_1 &amp;z_2 &amp;... &amp;z_n    \\end{bmatrix}   $$</p> <ul> <li>\\(reading \\times ref's normal\\), which is \\(277 \\times 3 \\cdot 3 \\times 277\\)</li> </ul> <p>$$     tmp = \\begin{bmatrix}         0 &amp;-1 &amp; 0 \\\\         1 &amp;0 &amp; 0 \\\\         0 &amp; 0 &amp;0     \\end{bmatrix} \\times     \\begin{bmatrix}         x_1 &amp;x_2 &amp;x_3  &amp;... \\\\         y_1 &amp;y_2 &amp;y_3  &amp;... \\\\         z_1 &amp;z_2 &amp;z_3  &amp;...     \\end{bmatrix} \\to      \\begin{bmatrix}         -y_1 &amp; -y_2 &amp; -y_3 &amp; ... \\\\         x_1 &amp;  x_2 &amp;  x_3 &amp; ... \\\\         0 &amp;  0 &amp; 0 &amp; ...      \\end{bmatrix}\\\\   $$</p> \\[ \\begin{align} ret &amp;= tmp^T \\times ref's normal \\quad is \\quad N \\times N, which \\\\\\\\     &amp;= \\begin{bmatrix}         -y1 &amp; x1 &amp; 0 \\\\\\\\         -y2 &amp; x2 &amp; 0 \\\\\\\\         -y3 &amp; x3 &amp; 0 \\\\\\\\         ... &amp; ... &amp;...         \\end{bmatrix} \\times        \\begin{bmatrix}           nx_1 &amp; nx_2 &amp; ... \\\\\\\\           ny_1 &amp; ny_2 &amp; ... \\\\\\\\           nz_1 &amp; nz_2 &amp; ...         \\end{bmatrix} \\\\\\\\     &amp;=        \\begin{bmatrix}         -y_1nx_1 + x_1ny_1 &amp; elem_{12} &amp; .....\\\\\\\\         elem_{21} &amp; -y_2nx_2 + x_2ny_2 &amp; .....\\\\\\\\         .... &amp; ...&amp;-y_nnx_n + x_nny_n        \\end{bmatrix}    \\end{align} \\] <p>\u53d6\\(ret\\)\u7684\u5bf9\u89d2\u7ebf,\u5373\u4e3areading\u70b9\u4e91\u5230ref's normal\u7684\u8ddd\u79bb(\u70b9\u5230\u6cd5\u5411\u91cf\u7684\u8ddd\u79bb)   \\(tmp2 = ret.diagonal.transpose = \\begin{bmatrix}       d1 &amp; d2 &amp; d3 &amp; ...&amp; d_n   \\end{bmatrix}\\)</p> <ul> <li>\\(A=WF \\cdot F^t \\to AX=b \\qquad (4, 4) \\times (4, 1) \\to (4, 1)\\)</li> </ul> \\[ A \\cdot X = b \\qquad \\text{\u5373\u5982\u4e0b} \\] \\[   \\begin{bmatrix}        \\sum_{i=1}^n d_i\\cdot wd_i &amp; &amp; &amp;  \\\\\\\\        &amp; \\sum_{i=1}^nwnx_i\\cdot nx_i &amp; &amp; \\\\\\\\        &amp; &amp; \\sum_{i=1}^nwny_i\\cdot ny_i &amp; \\\\\\\\        &amp; &amp; &amp; \\sum_{i=1}^nwnz_i\\cdot nz_i      \\end{bmatrix}      \\begin{bmatrix}         yaw \\\\\\\\ X \\\\\\\\ Y \\\\\\\\ Z     \\end{bmatrix} = b \\] \\[ \\begin{align} b &amp;= \\underbrace{         \\begin{bmatrix}             &amp; tmp2 \\cdot \\omega(\u6743\u91cd) \\\\\\\\             nx_1 &amp; nx_2 &amp; ...\\\\\\\\             ny_1 &amp; ny_2 &amp; ...\\\\\\\\             nz_1 &amp; nz_2 &amp; ...         \\end{bmatrix}     }_{WF} \\times     \\underbrace{         \\begin{bmatrix}             \\Delta x_1 nx_1 + \\Delta y_1 ny_1 + \\Delta z_1 nz_1 \\\\\\\\             \\Delta x_2 nx_2 + \\Delta y_2 ny_2 + \\Delta z_2 nz_2 \\\\\\\\             ...\\\\\\\\         \\end{bmatrix}     }  \\\\\\\\ &amp;=  -\\underbrace{          \\begin{bmatrix}              \\sum_{i=1}^n d_i \\cdot (\\Delta x_i nx_i + \\Delta y_i ny_i + \\Delta z_i      nz_i) \\\\\\\\              \\sum_{i=1}^n nx_i \\cdot (\\Delta x_i nx_i + \\Delta y_i ny_i + \\Delta z_i      nz_i) \\\\\\\\              \\sum_{i=1}^n ny_i \\cdot (\\Delta x_i nx_i + \\Delta y_i ny_i + \\Delta z_i      nz_i) \\\\\\\\              \\sum_{i=1}^n nz_i \\cdot (\\Delta x_i nx_i + \\Delta y_i ny_i + \\Delta z_i      nz_i)           \\end{bmatrix}     }_{(4\\times1)} \\end{align} \\]"},{"location":"m%26l/imu_kernel/","title":"IMU\u4f7f\u7528\u793a\u4f8b\u53ca\u566a\u58f0\u8ba1\u7b97","text":""},{"location":"m%26l/imu_kernel/#-eskfimu","title":"\u4f7f\u7528\u793a\u4f8b-ESKF\u7b97\u6cd5IMU\u566a\u58f0\u8bbe\u7f6e","text":"<p>ESKF\u5185\u72b6\u6001\u91cf\u4e3a $$ X= \\begin{bmatrix}     R(\\phi_x,\\phi_y,\\phi_z)\\\\     V(v_x,v_y,v_z)\\\\     P(x,y,z)\\\\     Ba(ba_x,ba_y,ba_z)\\\\     Bg(bg_x,bg_y,bg_z) \\end{bmatrix}  $$</p> <p>IMU\u9891\u7387\u4e3a100Hz, \u5373\u91c7\u6837\u95f4\u9694\\(\\Delta t = 0.01s\\),\u5b9e\u9645\u6570\u636e\u95f4\u9694\u4e3a \\(\\delta t\\)</p>"},{"location":"m%26l/imu_kernel/#_1","title":"\u9640\u87ba\u4eea\u566a\u58f0\u548c\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027","text":"<p>\u89d2\u5ea6\u968f\u673a\u6e38\u8d70ARW(angular random walk)\u624b\u518c\u4e3a\\(\\sigma_{g} = 0.21 deg / \\sqrt{h}\\)\u4e3a\u8fde\u7eed\u65f6\u95f4\u4e0b\u7684\u503c,\u4e0d\u8fc7\u7b97\u6cd5\u53c2\u6570\u6587\u4ef6\u5185\u4f7f\u7528\u79bb\u6563\u72b6\u6001\u4e0b\\(\\sigma_{g}(k)\\)\uff0cangular_random_walk\u8bbe\u7f6e\u4e3a\\(\\sigma_{g}(k)\\),\u53c2\u8003\u4e0b\u6587\u7ae0\u8282\u9640\u87ba\u4eea\u566a\u58f0\u5bc6\u5ea6ARW, \u540c\u7406\u79bb\u6563\u72b6\u6001\u4e0b\u9640\u87ba\u4eea\u96f6\u504f\u566a\u58f0\\(\\sigma_{bg}(k)\\)</p> <p>\u89d2\u5ea6\u968f\u673a\u6e38\u8d70\u4fe1\u606f\uff0c\u624b\u518c\u901a\u5e38\u7ed9\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>asm330 <code>ARW(angular random walk)</code>: \\(deg / \\sqrt{h}\\)</li> <li>asm330 <code>Rn(Rate noise density)</code>: \\(mdps/ \\sqrt{Hz}\\)</li> <li>\u5317\u4e91 <code>\u89d2\u5ea6\u968f\u673a\u6e38\u8d70</code>: \\(deg / \\sqrt{h} \\quad(XY) \\qquad deg / \\sqrt{h}\\quad(Z)\\) </li> </ul> <p>\u9640\u87ba\u4eea\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\uff0c\u624b\u518c\u5219\u5982\u4e0b\uff1a</p> <ul> <li>asm330 <code>BI(Bias instability)</code>: \\(deg/h\\)</li> <li>\u5317\u4e91 <code>\u96f6\u504f\u7a33\u5b9a\u6027</code>: \\(deg/h\\quad(XY) \\qquad deg/h\\quad(Z)\\) </li> </ul> <p>eskf\u7b97\u6cd5\u5185\u566a\u58f0\u8bbe\u7f6e \u53c2\u8003<code>Joan Sola's thesis: Quaternion kinematics and eskf</code></p> <ul> <li> <p>\u72b6\u6001\u91cf\\(X\\)\u7684\u59ff\u6001\u9884\u6d4b\u566a\u58f0: \\(Q_{X_R(\\phi_x,\\phi_y,\\phi_z)}\\)\u7684\u566a\u58f0\u4e3a   $$    Q(\\phi_x,\\phi_y,\\phi_z) = \\dfrac{(\\sigma_g(k) )^2}{\\Delta t} \\cdot (\\delta t)^2   $$</p> </li> <li> <p>\u72b6\u6001\u91cf\\(X\\)\u7684\u9640\u87ba\u4eea\u96f6\u504f\u566a\u58f0: \\(Q_{X_{Bg}(bg_x,bg_y,bg_z)}\\)\u7684\u566a\u58f0\u4e3a   $$    Q(bg_x,bg_y,bg_z) = (\\sigma_{bg}(k)\\cdot )^2\\cdot \\delta t   $$</p> </li> </ul>"},{"location":"m%26l/imu_kernel/#_2","title":"\u52a0\u901f\u5ea6\u8ba1\u566a\u58f0\u548c\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027","text":"<p>\u901f\u5ea6\u968f\u673a\u6e38\u8d70Velocity random walk(VRW)\u624b\u518c\u901a\u5e38\u7ed9\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>asm330 <code>An(acceleration noise density)</code>:\\(ug/\\sqrt{hz}\\)</li> <li>\u5317\u4e91 <code>\u901f\u5ea6\u968f\u673a\u6e38\u8d70</code>: \\(m/s/\\sqrt{h}\\)</li> </ul> <p>\u52a0\u901f\u5ea6\u8ba1\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\uff0c\u624b\u518c\u5219\u5982\u4e0b\uff1a</p> <ul> <li>asm330\u624b\u518c\u65e0</li> <li>\u5317\u4e91 <code>\u96f6\u504f\u7a33\u5b9a\u6027(ug)</code>: \\(ug\\) </li> </ul> <p>eskf\u7b97\u6cd5\u5185\u566a\u58f0\u8bbe\u7f6e</p> <ul> <li> <p>\u72b6\u6001\u91cf\\(X\\)\u7684\u52a0\u901f\u5ea6\u9884\u6d4b\u566a\u58f0: \\(Q_{X_V(v_x,v_y,v_z)}\\)\u7684\u566a\u58f0\u4e3a   $$    Q(v_x,v_y,v_z) = \\dfrac{(\\sigma_a(k) )^2}{\\Delta t} \\cdot (\\delta t)^2   $$</p> </li> <li> <p>\u72b6\u6001\u91cf\\(X\\)\u7684\u52a0\u901f\u5ea6\u8ba1\u96f6\u504f\u566a\u58f0: \\(Q_{X_{Ba}(ba_x,ba_y,ba_z)}\\)\u7684\u566a\u58f0\u4e3a   $$    Q(ba_x,ba_y,ba_z) = (\\sigma_{ba}(k)\\cdot )^2\\cdot \\delta t   $$</p> </li> </ul>"},{"location":"m%26l/imu_kernel/#imu_1","title":"IMU\u566a\u58f0\u53c2\u6570\u8ba1\u7b97","text":"<p>\u57fa\u4e8eIMU\u624b\u518c\u6240\u7ed9\u53c2\u6570\u5408\u7406\u8bbe\u7f6e\u8fdb\u884c\u5bf9\u5e94\u53c2\u6570\u8ba1\u7b97</p> <ul> <li> <p>\u53c2\u8003\u9ad8\u7fd4\u65b0\u4e66&lt;\u81ea\u52a8\u9a7e\u9a76\u548c\u673a\u5668\u4eba\u4e2dslam\u6280\u672f&gt;</p> </li> <li> <p>\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\u63cf\u8ff0_en</p> </li> <li> <p>\u60ef\u6027\u5668\u4ef6\u7684\u96f6\u504f\u8bef\u5dee\u6709\u54ea\u4e9b\u5462\uff1f-\u6b66\u6c49\u5927\u5b66\u591a\u6e90\u667a\u80fd\u5bfc\u822a\u5b9e\u9a8c\u5ba4</p> </li> </ul> <p>\u7531\u8fde\u7eed\u65f6\u95f4\u65b9\u5dee\u8ba1\u7b97\u79bb\u6563\u65f6\u95f4\u65b9\u5dee:</p> \\[ \\begin{align}            \\sigma_g(k) = \\dfrac{1}{\\sqrt{\\Delta t}} \\sigma_g  \\quad ,\\sigma_a(k) = \\dfrac{1}{\\sqrt{\\Delta t}} \\sigma_a \\\\\\\\     \\sigma_{bg}(k) =\\sigma_{bg} \\cdot \\sqrt{\\Delta t}  \\quad ,\\sigma_{ba}(k) =\\sigma_{ba} \\cdot \\sqrt{\\Delta t}  \\end{align}      \\] <p>\u5982\\(\\sigma_g(k)\u3001\\sigma_g\u3001\\sigma_ghz\\)\u4e4b\u95f4\u7684\u8f6c\u6362\u5982\u4e0b:  $$  \\sigma_g=\\sigma_g(k)\\cdot \\sqrt{\\Delta t} \\quad  \\to \\quad \\dfrac{rad}{s} \\cdot \\sqrt{s}=\\dfrac{rad}{\\sqrt{s}} $$</p> \\[  \\sigma_ghz = \\dfrac{rad}{s\\sqrt{Hz}} = \\dfrac{rad}{s \\sqrt{\\dfrac{1}{s}}}=\\dfrac{rad}{\\sqrt{s}}  =\\sigma_{g} \\] gyro gyro bias accel accel bias discrete time \\(\\sigma_g(k) \\to \\dfrac{rad}{s}\\) \\(\\sigma_{bg}(k) \\to \\dfrac{rad}{s}\\) \\(\\sigma_a(k) \\to \\dfrac{m}{s^2}\\) \\(\\sigma_{ba}(k) \\to \\dfrac{m}{s^2}\\) continuous time \\(\\sigma_g \\to   \\dfrac{rad}{\\sqrt{s}}\\) \\(\\sigma_{bg} \\to   \\dfrac{rad}{s\\sqrt{s}}\\) \\(\\sigma_{a} \\to   \\dfrac{m}{s\\sqrt{s}}\\) \\(\\sigma_{ba} \\to   \\dfrac{m}{s^2\\sqrt{s}}\\) \\(\\dfrac{1}{\\Delta t} \\to Hz\\) \\(\\sigma_{g}hz \\to \\dfrac{rad}{s\\sqrt{Hz}}\\) \\(\\sigma_{bg}hz \\to \\dfrac{rad}{s^2\\sqrt{Hz}}\\) \\(\\sigma_{a}hz \\to \\dfrac{m}{s^2\\sqrt{Hz}}\\) \\(\\sigma_{ba}hz \\to \\dfrac{m}{s^3\\sqrt{Hz}}\\)"},{"location":"m%26l/imu_kernel/#gyroscope","title":"gyroscope\u9640\u87ba\u4eea\u566a\u58f0\u5bc6\u5ea6","text":""},{"location":"m%26l/imu_kernel/#rnrate-noise-density","title":"Rn(Rate noise density)","text":"<p>\u89d2\u901f\u5ea6\u968f\u673a\u6e38\u8d70\u7684\u6807\u51c6\u5dee\uff0c\u5355\u4f4d\u4e3a\\(rad/s\\)</p> <p>\u5982ASM330\u624b\u518c\u7ed9\u51fa\u8be5\u6307\u6807\u4e3a\\(5 mdps/\\sqrt{Hz}\\),\u5373\\(0.005deg  /\\sqrt{Hz}\\),\u8fd9\u610f\u5473\u7740\u57281\u8d6b\u5179\u7684\u9891\u7387\u8303\u56f4\u5185\uff0c\u6bcf\u79d2\u7684\u968f\u673a\u89d2\u901f\u5ea6\u53d8\u5316\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\u4e3a5\u6beb\u5ea6,\u5373 0.005 deg. \u5982\u679cimu\u9891\u7387\u4e3a100hz,\u91c7\u6837\u95f4\u9694\\(\\Delta t=0.01s\\),\u5219\u79bb\u6563\u72b6\u6001\u4e0b\u89d2\u901f\u5ea6\u7684\u968f\u673a\u6e38\u8d70\u65b9\u5dee\u4e3a\uff1a</p> <p>$$    \\sigma_g(k) \\to 0.005deg  /\\sqrt{Hz} =  \\dfrac{0.005deg}{\\sqrt{\\dfrac{1}{\\Delta t}}} = 0.005* 10 deg/s = 0.000872 rad/s   $$ </p>"},{"location":"m%26l/imu_kernel/#arwangular-random-walk","title":"ARW(angular random walk)","text":"<p>\u5373\u89d2\u5ea6\u968f\u673a\u6e38\u8d70,\u9640\u87ba\u4eea\u767d\u566a\u58f0\u5355\u4f4d\u4e3a\\(deg/\\sqrt{h}\\)</p> <ul> <li>ASM330\u624b\u518c\u7ed9\u51faARW\u503c\uff0c\u8fde\u7eed\u65f6\u95f4\u566a\u58f0\u5355\u4f4d\u4e3a: \\(\\sigma_g =0.21  deg/\\sqrt{h}\\), \u5219\u79bb\u6563\u72b6\u6001\u4e0b\u89d2\u5ea6\u7684\u968f\u673a\u6e38\u8d70\u65b9\u5dee\u4e3a\uff1a</li> </ul> <p>$$    \\begin{align}      \\sigma_g(k) \\to  \\dfrac{0.21deg/\\sqrt{3600s}}{\\sqrt{\\Delta t}}=\\dfrac{d2r(0.21/60)}{\\sqrt{0.01}} = 6.108e-4 \\space rad/s \\\\     \\text{\u5177\u4f53\u4f7f\u7528\u65f6\u53ef\u6839\u636e\u6b64\u503c\u8fdb\u884c\u8c03\u6574,\u5982\u653e\u5927\u6216\u867d\u5c0f10\u500d\u7b49(6.108e-5)}    \\end{align}    $$</p> <ul> <li>\u5317\u4e91\u624b\u518cARW\uff0c\u8fde\u7eed\u65f6\u95f4\u89d2\u5ea6\u968f\u673a\u6e38\u8d70\u4e3a: \\(0.1deg/ \\sqrt{h}\\), \u5219\u4ee5100hz\u91c7\u6837\u9891\u7387\u8fdb\u884c\u6362\u7b97\u4e3a: \\(\\sigma_g(k) =\\dfrac{d2r(0.1deg/60)}{\\sqrt{\\Delta t}}   =  0.0002908 \\quad rad/s\\), \u5cf0\u5cf0\u503c\u53d66\u500d\\(\\sigma_g(k)\\)\u4e3a0.00174532</li> </ul>"},{"location":"m%26l/imu_kernel/#gyro-bibias-instability","title":"gyro BI(Bias Instability)","text":"<p>\u5373\u53ef\u9640\u87ba\u4eea\u7684\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\uff0c\u4e5f\u53ef\u89d2\u901f\u5ea6\u7684\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\u3002 ASM330\u624b\u518c\u7ed9\u51fa\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\u503c\uff0c\u8fde\u7eed\u65f6\u95f4\u566a\u58f0\u5355\u4f4d\u4e3a: \\(\\sigma_{bg} =3deg/h=\\dfrac{3}{3600} deg/s\\), \u5219\u79bb\u6563\u72b6\u6001\u4e0b\u89d2\u901f\u5ea6\u7684\u968f\u673a\u6e38\u8d70\u65b9\u5dee\u4e3a\uff1a\\(\\sigma_{bg}(k) = \\sigma_{bg}\\cdot \\sqrt{\\Delta t}\\), \u5982100hz\u91c7\u6837\u9891\u7387,\u65f6\u95f4\u95f4\u9694 \\(\\Delta t = 0.01s\\)</p> \\[ \\sigma_{bg}(k) = \\sigma_{bg} \\sqrt{0.01} = 1.45e^{-6} rad/s \\] <p>\u6839\u636e\u725b\u5c0f\u9aa5\u6559\u6388\u8bf4\u6cd5\uff0c\u5b9e\u9645\u56fd\u519b\u6807\u53c2\u6570\u4e3a\u624b\u518c\u653e\u59275-10\u500d\uff0c\u5219\u53d6\u503c\\(1.4544e^{-5} rad/s\\)\u8fdb\u884c\u8ba1\u7b97\uff0c\u7531\u4e8e\u8be5\u503c\u63cf\u8ff0\u7684\u662f\u8fde\u7eed\u72b6\u6001\u4e0bbias\u4e0d\u7a33\u5b9a\u6027\uff0c\u9075\u5faa\\(\\dot{b}_g \\sim N(0,\\sigma^2)\\)</p>"},{"location":"m%26l/imu_kernel/#accel","title":"accel \u52a0\u901f\u5ea6\u8ba1\u566a\u58f0\u5bc6\u5ea6","text":"<p>Acceleration noise density,\u5355\u4f4d\u4e3a\\(m/s^2\\)</p> <ul> <li>\u5317\u4e91\u624b\u518c\u7ed9\u51fa<code>\u901f\u5ea6\u968f\u673a\u6e38\u8d70</code> \u4e3a\\(0.035 m/s/\\sqrt{h} = \\dfrac{0.035}{\\sqrt{3600s}}m/s/\\sqrt{s}=0.0005833m/s/\\sqrt{s}\\), \u4ee5100hz\u91c7\u6837\u9891\u7387,\u65f6\u95f4\u95f4\u9694 \\(\\Delta t = 0.01s\\) \u8ba1\u7b97\u79bb\u6563\u72b6\u6001\u4e0b\u52a0\u901f\u5ea6\u7684\u968f\u673a\u6e38\u8d70\u65b9\u5dee\u4e3a:</li> </ul> <p>$$      \\sigma_a(k) = \\dfrac{\\sigma_a}{\\sqrt{\\Delta t}}   = 0.005833 \\space m/s^2   $$ \u5cf0\u5cf0\u503c\u53d66\u500d\\(\\sigma_a(k)\\)\u4e3a \\(0.03498 m/s^2\\)</p> <ul> <li>ASM330\u624b\u518c\u52a0\u901f\u5ea6\u8ba1\u4e3a: \\(\\sigma_{a}hz =60 \\space ug/\\sqrt{hz}\\)\uff0c\\(1ug=10^{-6}m/s^2=1e{-6}m/s^2\\)\uff0c\u5bf9\u5e94\u79bb\u6563\u65f6\u95f4\u566a\u58f0\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a</li> </ul> \\[  \\sigma_{a}(k) =\\dfrac{\\sigma_{a}hz * 10^{-6} * 9.8}{\\sqrt{\\Delta t}}=\\dfrac{60* 10^{-6} * 9.8}{\\sqrt{0.01}}= 5.88e-3 \\space m/s^2 \\]"},{"location":"m%26l/imu_kernel/#accel-bibias-instability","title":"accel BI(Bias Instability)","text":"<p>\u5373\u52a0\u901f\u5ea6\u8ba1\u7684\u96f6\u504f\u4e0d\u7a33\u5b9a\u6027\u3002</p> <p>\u53d6 75ug\u4f5c\u4e3a\u7ecf\u5178\u503c\\(1ug=10^{-6}m/s^2=1e{-6}m/s^2\\)\uff0c\u5176\u8fde\u7eed\u72b6\u6001\u4e0b\\(\\sigma_{ba} =75\\times 10^{-6} \\times  9.8 =7.35e-4 m/s^2\\)</p> <p>100hz\u91c7\u6837, \u65f6\u95f4\u95f4\u9694 \\(\\Delta t = 0.01s\\), \\(\\sigma_{ba}(k) = \\sigma_{ba} \\cdot \\sqrt{\\Delta t} = 7.35e-5 \\space m/s^2\\)</p>"},{"location":"m%26l/loc_gauss_newton_example/","title":"\u9ad8\u65af\u725b\u987f\u5b9e\u8df5-\u4ee5\u89c6\u89c9\u5b9a\u4f4d\u4e3a\u4f8b","text":"<p>\u89c6\u89c9\u5b9a\u4f4d\u5f53\u524d\u4e3b\u8981\u57fa\u4e8e\u7ebf\u7279\u5f81(\u5982\u8f66\u9053\u7ebf\u3001\u505c\u6b62\u7ebf)\u3001\u70b9\u7279\u5f81(\u6746\u72b6\u7269\u3001\u5982\u5730\u8868marking\u3001Y\u578b\u70b9)\u8fdb\u884c\u7ea6\u675f\u6784\u5efa\uff0c\u7136\u540e\u57fa\u4e8e\u7c92\u5b50\u6ee4\u6ce2\u548c\u5361\u5c14\u66fc\u6ee4\u6ce2\u5b9e\u73b0\u72b6\u6001\u4f30\u8ba1\uff0c\u5bf9\u4e8e\u70b9\u70b9\u7ea6\u675f\u3001\u70b9\u7ebf\u6216\u70b9\u9762\u7b49\u7ea6\u675f\u4e5f\u53ef\u4ee5\u91c7\u7528\u4f18\u5316\u7684\u65b9\u6cd5\u8fdb\u884c\u89e3\u51b3\u3002</p>"},{"location":"m%26l/loc_gauss_newton_example/#2d","title":"2D\u7a7a\u95f4","text":""},{"location":"m%26l/loc_gauss_newton_example/#_1","title":"\u5f85\u4f18\u5316\u53d8\u91cf","text":"<p>\\(x = (\\theta, t_x, t_y)\\)\u8868\u793ayaw\u53ca\u4e8c\u7ef4translation\u7684\u53d8\u5316 $$ P =  \\begin{bmatrix} P_x \\\\ P_y \\end{bmatrix} =  \\begin{bmatrix} \\cos \\theta, &amp; \\sin \\theta \\\\ \\sin \\theta, &amp; \\cos \\theta \\end{bmatrix} \\begin{bmatrix} x_i \\\\ y_i \\end{bmatrix} +  \\begin{bmatrix} t_x \\\\ t_y \\end{bmatrix} = \\begin{bmatrix} \\cos \\theta x_i - \\sin \\theta y_i + t_x \\\\ \\sin \\theta x_i + \\cos \\theta y_i + t_y \\end{bmatrix}\u00a0\\tag{1} $$</p>"},{"location":"m%26l/loc_gauss_newton_example/#cost-function","title":"\u70b9\u5230\u7ebfcost function","text":"<p>\u5373\u4f18\u5316\u70b9\\(P\\)\u5230\u7ebf\u6bb5\\(P_1 \\quad P_2\\)\u7684\u8ddd\u79bb $$ f(x) =f[P(x)]  = \\frac{|PP_1 \\times PP_2|}{|P_1P_2|} = \\frac{|PP_{1x} PP_{2y} - PP_{1y} PP_{2x}|}{|P_1P_2|} = d \u00a0\u00a0\\tag{2} $$</p>"},{"location":"m%26l/loc_gauss_newton_example/#jacobian","title":"\u8ba1\u7b97jacobian","text":"\\[ \\begin{aligned} J^TJ \\Delta x = -J^T\\cdot f(x) \\\\\\\\ H \\Delta = - g ,\\quad \\text{g is gradient}\u00a0 \\end{aligned} \u00a0\\tag{3} \\] \\[ J =  \\begin{bmatrix} \\frac{\\partial f}{\\partial \\theta} \\\\\\\\ \\frac{\\partial f}{\\partial t_x} \\\\\\\\ \\frac{\\partial f}{\\partial t_y} \\end{bmatrix}^T =   \\frac{\\partial f}{\\partial P}\\frac{\\partial P}{\\partial x(\\theta, t_x, t_y)} =   \\begin{bmatrix} \\frac{\\partial f}{\\partial P_x} \\frac{\\partial P_x}{\\partial \\theta} + \\frac{\\partial f}{\\partial P_y} \\frac{\\partial P_y}{\\partial \\theta} \\\\\\\\ \\frac{\\partial f}{\\partial P_x} \\frac{\\partial P_x}{\\partial t_x} + \\frac{\\partial f}{\\partial P_y} \\frac{\\partial P_y}{\\partial t_x} \\\\\\\\ \\frac{\\partial f}{\\partial P_x} \\frac{\\partial P_x}{\\partial t_y} + \\frac{\\partial f}{\\partial P_y} \\frac{\\partial P_y}{\\partial t_y}  \\end{bmatrix}^T.\u00a0\u00a0\\tag{4} \\]"},{"location":"m%26l/loc_gauss_newton_example/#jacobian_1","title":"\u8be6\u7ec6\u8ba1\u7b97Jacobian","text":"\\[ set \\quad A =PP_{1x} PP_{2y} - PP_{1y} PP_{2x}   \\quad and \\quad B = {|P_1P_2|} \\\\\\\\ \\] \\[ \\begin{align} (f(x))^2 = \\frac{A^2}{B^2} =d^2 \\\\\\\\ 2f(x){f}'(x) = \\frac{2A{A}'}{B^2}  \\end{align}\\tag{5}  \\] <p>\u516c\u5f0f\\((5)\\)\u4e24\u8fb9\u540c\u65f6\u5bf9\\(P_x\\)\u6c42\u5bfc $$  \\begin{align} 2d \\frac{\\partial f}{\\partial P_x}  &amp;= \\frac{2A}{B^2} \\frac{\\partial A}{\\partial P_x}\\\\ &amp;= \\frac{2A}{B^2} \\cdot(PP_{2y} - PP_{1y})    \\end{align} $$</p> \\[ \\frac{\\partial f}{\\partial P_x} =  \\frac{A \\cdot P_1P_{2y}}{d\\cdot B^2} \u00a0\\tag{6} \\] <p>\u516c\u5f0f\\((5)\\)\u4e24\u8fb9\u540c\u65f6\u5bf9\\(P_y\\)\u6c42\u5bfc $$ \\begin{align} 2d \\frac{\\partial f}{\\partial P_y} = \\frac{2A}{B^2} \\frac{\\partial A}{\\partial P_y} = \\frac{2A}{B^2} \\cdot(PP_{1x} - PP_{2x}) \\\\ \\frac{\\partial f}{\\partial P_y} =  \\frac{A \\cdot P_2P_{1x}}{d\\cdot B^2} =  \\frac{ - A \\cdot P_1P_{2x}}{d\\cdot B^2} \u00a0 \\end{align}\u00a0\\tag{7} $$</p> <p>\\(P(x)\u5bf9 x = (\\theta, t_x, t_y)\u6c42\u5bfc\\) $$ \\frac{\\partial P}{\\partial x} =  \\begin{bmatrix} \\frac{\\partial P_x}{\\partial \\theta} \\quad \\frac{\\partial P_x}{\\partial t_x} \\quad \\frac{\\partial P_x}{\\partial t_y}  \\\\  \\frac{\\partial P_y}{\\partial \\theta} \\quad \\frac{\\partial P_y}{\\partial t_x} \\quad \\frac{\\partial P_y}{\\partial t_y} \\end{bmatrix} \u00a0\\tag{8} $$</p> \\[ \\begin{aligned} \\frac{\\partial P_x}{\\partial \\theta} = -\\sin \\theta x_i - \\cos \\theta y_i \\quad \\quad \\frac{\\partial P_x}{\\partial t_x} = 1 \\quad \\quad \\frac{\\partial P_x}{\\partial t_y} = 0 \\\\\\\\ \\frac{\\partial P_y}{\\partial \\theta} = \\cos \\theta x_i - \\sin \\theta y_i \\quad \\quad \\frac{\\partial P_y}{\\partial t_x} = 0 \\quad \\quad \\frac{\\partial P_y}{\\partial t_y} = 1  \\end{aligned}\u00a0\u00a0\u00a0\\tag{9} \\]"},{"location":"m%26l/loc_gauss_newton_example/#_2","title":"\u4ee3\u7801\u5982\u4e0b","text":"<pre><code>class CostFunctionPointToLine:\n    def __init__(\n        self, src_pt: Point, tar_pt1: Point, tar_pt2: Point, score: np.identity\n    ) -&gt; None:\n        self.src_point = src_pt\n        self.tar_point1 = tar_pt1\n        self.tar_point2 = tar_pt2\n        self.score = score\n\n        self.delta_f_to_px = 0.0\n        self.delta_f_to_py = 0.0\n        self.delta_px_to_theta = 0.0\n        self.delta_py_to_theta = 0.0\n\n    def compute_residual(self, parameter: np.array((3, 1))) -&gt; float:\n        param_yaw = params[0][0]\n        param_tx = params[1][0]\n        param_ty = params[2][0]\n        tmp_src_pt = self.src_point.transform_point(param_yaw, param_tx, param_ty)\n\n        # residual = 0\n        pp1 = tmp_src_pt - self.tar_point1\n        pp2 = tmp_src_pt - self.tar_point2\n        p1p2 = self.tar_point1 - self.tar_point2\n        ##f_value_distance_to_line\n        residual = tmp_src_pt.distance_to_line(self.tar_point1, self.tar_point2)\n\n        # jacobian\n        if residual &gt; 0:\n            A = pp1.cross_multi(pp2)\n            B = p1p2.squre_norm()\n            self.delta_f_to_px = p1p2.y * A / (residual * B)\n            self.delta_f_to_py = -p1p2.x * A / (residual * B)\n            delta_pt_to_theta = self.src_point.jacobian_point_to_theta(param_yaw)\n            self.delta_px_to_theta = delta_pt_to_theta.x\n            self.delta_py_to_theta = delta_pt_to_theta.y\n        return residual*self.score\n    def compute_jacobian(self) -&gt; np.array((1, 3)):\n        jacobian = np.zeros((1, 3))\n        # delta to yaw\n        jacobian[0, 0] = (\n            self.delta_f_to_px * self.delta_px_to_theta\n            + self.delta_f_to_py * self.delta_py_to_theta\n        )\n        # delta to tx\n        jacobian[0, 1] = self.delta_f_to_px\n        # delta to ty\n        jacobian[0, 2] = self.delta_f_to_py\n        return jacobian\n</code></pre>"},{"location":"m%26l/loc_gauss_newton_example/#cost-function_1","title":"\u70b9\u5230\u70b9cost function","text":"<p>\u5373\u4f18\u5316\u70b9\\(P\\)\u5230\u76ee\u6807\u70b9\\(P_t\\)\u7684\u8ddd\u79bb $$ f(x) = f[P(x)] = |PP_t| = d.\u00a0\u00a0\\tag{10} $$</p>"},{"location":"m%26l/loc_gauss_newton_example/#jacobian_2","title":"\u8ba1\u7b97jacobian","text":"<p>\\(\\dfrac{\\partial P_x}{\\partial \\theta}\\)\u548c \\(\\dfrac{\\partial P_y}{\\partial \\theta}\\)\u540c\u70b9\u5230\u7ebf\u4e00\u81f4 $$ \\frac{\\partial f}{\\partial P_x} =  \\frac{\\partial f}{\\partial P_y} = \\frac{1}{d}\u00a0\u00a0\\tag{11} $$</p>"},{"location":"m%26l/loc_gauss_newton_example/#_3","title":"\u4ee3\u7801\u5982\u4e0b","text":"<pre><code>class CostFunctionPoint2Point:\n    def __init__(self, src_pt: Point, tar_pt: Point, score: np.identity) -&gt; None:\n        self.src_point = src_pt\n        self.tar_point = tar_pt\n        self.score = score\n\n        self.delta_f_to_px = 0\n        self.delta_f_to_py = 0\n        self.delta_px_to_theta = 0.0\n        self.delta_py_to_theta = 0.0\n\n    def compute_residual(self, parameter: np.array((3, 1))) -&gt; float: \n        param_yaw = params[0][0]\n        param_tx = params[1][0]\n        param_ty = params[2][0]\n        tmp_src_pt = self.src_point.transform_point(param_yaw, param_tx, param_ty)\n\n        residual = tmp_src_pt.distance_to_point(self.tar_point) \n        if residual &gt; 0:\n            self.delta_f_to_px = 1 / residual\n            self.delta_f_to_py = 1 / residual\n            delta_pt_to_theta = self.src_point.jacobian_point_to_theta(param_yaw)\n            self.delta_px_to_theta = delta_pt_to_theta.x\n            self.delta_py_to_theta = delta_pt_to_theta.y\n        return residual * self.score\n\n    def compute_jacobian(self) -&gt; np.array((1, 3)):\n        jacobian = np.zeros((1, 3))\n        # delta to yaw\n        jacobian[0, 0] = (\n            self.delta_f_to_px * self.delta_px_to_theta\n            + self.delta_f_to_py * self.delta_py_to_theta\n        )\n        # delta to tx\n        jacobian[0, 1] = self.delta_f_to_px\n        # delta to ty\n        jacobian[0, 2] = self.delta_f_to_py\n        return jacobian\n</code></pre>"},{"location":"m%26l/loc_gauss_newton_example/#_4","title":"\u4f18\u5316\u6c42\u89e3","text":"<pre><code>def solver(self, options):\n        self.options = options\n        self.construct_problem()\n        print(\" options.iter_num:\", self.options.iter_num)\n\n        for iter in np.arange(self.options.iter_num):\n            print(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxx optimizer iter: %d\" % iter)\n            k_pairs_num = self.problem.measurements_dims()\n            jacobian = np.zeros((k_pairs_num, self.parameters_dims()))\n            fx_residuals = np.zeros((k_pairs_num, self.cost_function_dims()))\n            for id in np.arange(k_pairs_num):\n                fx_value = self.problem.cost_function_list[id].compute_residual(\n                    self.parameters\n                )\n                if fx_value &gt; 0:\n                    fx_residuals[id] = fx_value\n                    jacobian[id] = self.problem.cost_function_list[\n                        id\n                    ].compute_jacobian()\n            H = np.dot(jacobian.T, jacobian)\n            gradient = np.dot(jacobian.T, fx_residuals)\n            #solve: H*delta_x = -JT*f\n            # gradient_delta = np.linalg.solve(H, -gradient)\n\n            gradient_delta = CompareDiffDecompositionNumpy(H, -gradient) \n\n            # TODO: optimizer coverage or not, condition is gradient_delta or costfunction value is fine\n            if math.fabs(gradient_delta[0][0]) &lt; 1e-6:\n                print(\"solver done, final gradient_delta:\", gradient_delta[0][0])\n                self.covergence = True\n                break\n            self.parameters_plus(gradient_delta)\n</code></pre>"},{"location":"m%26l/loc_gauss_newton_example/#3d","title":"3D\u7a7a\u95f4","text":""},{"location":"m%26l/loc_gauss_newton_example/#_5","title":"\u4f18\u5316\u53d8\u91cf\u7528\u4f8b","text":"<p>\\(x = \\{yaw \\quad pitch  \\quad roll \\quad x \\quad y\\quad  z\\}\\) \u5982Loam\u7cfb\u5217\u7b49\uff0c\u5bf9\u65cb\u8f6c\u6c42\u5bfc\u7e41\u7410\u8d1f\u8d23\uff0c\u5bb9\u6613\u51fa\u9519</p>"},{"location":"m%26l/loc_gauss_newton_example/#so3t","title":"\u57fa\u4e8eSO(3)+t","text":"<p>\\(x = \\{ R \\quad t\\}\\)</p>"},{"location":"m%26l/loc_gauss_newton_example/#cost-function_2","title":"\u70b9\u5230\u70b9cost function","text":"\\[ f(x) = f(\\{R,t\\}) = P_i - (Rq_i+t) \\tag{12} \\]"},{"location":"m%26l/loc_gauss_newton_example/#jacobian_3","title":"\u8ba1\u7b97jacobian","text":"\\[ \\begin{align} \\frac{\\partial f(x)}{\\partial R} = Rq_i^{\\times} \\\\\\\\ \\frac{\\partial f(x)}{\\partial t} = -I     \\end{align} \\tag{13} \\] <p>\u76f8\u5f53\u4e8e\u6700\u5c0f\u5316 \\(f(x) = f(\\{R,t\\}) = \\min\\limits_{R,t}\\sum_i|P_i - (Rq_i+t)|^2\\)</p>"},{"location":"m%26l/loc_gauss_newton_example/#_6","title":"\u4ee3\u7801\u5982\u4e0b","text":"<pre><code>class CostFunctionPoint2Point:\n    def __init__(self, src_pt: Point, tar_pt: Point, score: np.identity) -&gt; None:\n        self.src_point = src_pt\n        self.tar_point = tar_pt\n        self.score = score  # 6x6\n        self.J = np.zeros((3, 6)) \n    def compute_residual(self, parameter: np.array((6, 1))): \n        param_yaw = params[0][0]\n        param_tx = params[3][0]\n        param_ty = params[4][0]\n        tmp_src_pt = self.src_point.transform_point(param_yaw, param_tx, param_ty, 0.0)\n\n        R = get_matrix33_yaw(param_yaw)\n        delta_e_to_R = np.dot(R, self.src_point.skew_symmetric())\n        delta_e_to_t = -np.identity(3)\n        self.J[:, :3] = delta_e_to_R\n        self.J[:, 3:] = delta_e_to_t\n        residual = self.tar_point - tmp_src_pt\n        return residual.to_vec3d() * self.score\n    def compute_jacobian(self) -&gt; np.array((3, 6)):\n        return self.J\n</code></pre>"},{"location":"m%26l/loc_gauss_newton_example/#cost-function_3","title":"\u70b9\u5230\u7ebfcost function","text":"\\[ f(x) = f(\\{R,t\\}) =  \\frac{|PP_1 \\times PP_2|}{|P_1P_2|} =d\\times(Rq_i+t - p_1) \\tag{14} \\]"},{"location":"m%26l/loc_gauss_newton_example/#jacobian_4","title":"\u8ba1\u7b97jacobian","text":"\\[ \\frac{\\partial f(x)}{\\partial R} = -d^{\\times}Rq_i^{\\times}\\\\\\\\ \\frac{\\partial f(x)}{\\partial t} = d^{\\times}    \\tag{15} \\]"},{"location":"m%26l/loc_gauss_newton_example/#_7","title":"\u4ee3\u7801\u5982\u4e0b","text":"<pre><code>class CostFunctionPointToLine:\n    def __init__(\n        self, src_pt: Point, tar_pt1: Point, tar_pt2: Point, score: np.identity\n    ) -&gt; None:\n        self.src_point = src_pt\n        self.tar_point1 = tar_pt1\n        self.tar_point2 = tar_pt2\n        self.score = score  # 6x6\n\n        self.J = np.zeros((3, 6)) \n\n    def compute_residual(self, parameter: np.array((6, 1))): \n        param_yaw = params[0][0]\n        param_tx = params[3][0]\n        param_ty = params[4][0]\n        tmp_src_pt = self.src_point.transform_point(param_yaw, param_tx, param_ty, 0.0)\n\n        p2p1 = self.tar_point2 - self.tar_point1\n        d_vec = p2p1.normlize()\n        d_vec_skew = d_vec.skew_symmetric()\n        pp1 = tmp_src_pt - self.tar_point1\n        R = get_matrix33_yaw(param_yaw)\n        # print(\"d_vec_skew:\\n\",d_vec_skew)\n        # print(\"R:\\n\",R)\n        delta_e_to_R = -np.dot(np.dot(d_vec_skew, R), self.src_point.skew_symmetric())\n        delta_e_to_t = d_vec_skew\n        self.J[:, :3] = delta_e_to_R\n        self.J[:, 3:] = delta_e_to_t\n        residual = np.dot(d_vec_skew, pp1.to_vec3d())\n        return residual * self.score\n\n    def compute_jacobian(self) -&gt; np.array((3, 6)):\n        return self.J\n</code></pre>"},{"location":"m%26l/loc_gauss_newton_example/#_8","title":"\u4f18\u5316\u6548\u679c\u793a\u4f8b","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6a21\u62df\u89c6\u89c9\u5b9a\u4f4d\u751f\u62106\u6761\u8f66\u9053\u7ebf\u548c2\u4e2a\u5730\u6807marking, \u8f66\u9053\u7ebf\u95f4\u8ddd3.5m, \u957f\u5ea640m,  - \u7eff\u8272\u8868\u793a\u9ad8\u7cbe\u5730\u56fe\u8f66\u9053\u7ebf - \u7ea2\u8272\u8868\u793a\u611f\u77e5\u8f66\u9053\u5fc3\u7ebf\uff1a\u901a\u8fc7\u5bf9\u5730\u56fe\u8f66\u9053\u7ebf\u6dfb\u52a0\u6700\u592710cm\u566a\u58f0\u5e76\u8fdb\u884c\\(R: yaw = 3.5deg   x\u6a2a\u5411: 0.5.   y:0.5m\\)\u7684\u53d8\u6362 - \u84dd\u8272\uff1a\u901a\u8fc72D or 3D\u4f18\u5316\u540e\u7684\u7ed3\u679c </p> <p>Loam(Lego-Loam\u540e\u7aef\u4f18\u5316\u63a8\u5bfc)</p> <p>LOAM\u540e\u7aef\u4f18\u5316\u7b97\u6cd5\u5206\u6790</p>"},{"location":"m%26l/loc_gauss_newton_example/#lego-loam","title":"\u4e09\u7ef4\u53d8\u6362(Lego-Loam\u540e\u7aef\u63a8\u5bfc)","text":"<p>\u5176\u4e2d\u65cb\u8f6c\u77e9\u9635R\u5b9a\u4e49\u5982\u4e0b\uff0c\u4f7f\u7528\u7684\u662f\u6b27\u62c9\u89d2\u8868\u793a\u65b9\u5f0f\uff0cs\u8868\u793asin\uff0cc\u8868\u793acos\uff0c\u4f8b\u5982cry\u8868\u793acos(ry)</p> <p>\\(rx\u3001ry\u3001rz\\)\u5206\u522b\u8868\u793a\u7ed5\u8f74\\(X\u3001Y\u3001Z\\)\u7684\u89d2 $$ R=R(rx,ry,rz) =  \\begin{bmatrix} c_{ry}c_{rz}+s_{rx}s_{ry}s_{rz} &amp;c_{rz}s_{rx}s_{ry} - c_{ry}s_{rz} &amp; c_{rx}s_{ry} \\\\ c_{rx}s_{rz} &amp; c_{rx}c_{rz} &amp; -s_{rx} \\\\ c_{ry}s_{rx}s_{rz} - c_{rz}s_{ry} &amp; c_{ry}c_{rz}s_{rx} + s_{ry}s_{rz}&amp; c_{rx}c_{ry} \\end{bmatrix} \\tag{1} $$ \u5e73\u79fbt:</p> \\[ T=(t_x,t_y,t_z)^T \\]"},{"location":"m%26l/loc_gauss_newton_example/#_9","title":"\u53d8\u91cf","text":"<p>\\(x = (r_x,r_y,r_z, t_x, t_y,t_z)\\), \u8868\u793a\\(roll\u3001pitch\u3001yaw\\)\u53catranslation\u7684\u53d8\u5316</p>"},{"location":"m%26l/loc_gauss_newton_example/#cost-function_4","title":"\u70b9\u7ebfcost function","text":"<p>\u5373\u4f18\u5316\u70b9\\(P\\)\u5230\u7ebf\u6bb5\\(P_1 \\quad P_2\\)\u7684\u8ddd\u79bb,\u4ee5\u6c42\u5f97\\(x = (r_x,r_y,r_z, t_x, t_y,t_z)\\)</p> \\[ f(x) =f[P(x)]  = \\dfrac{|PP_1 \\times PP_2|}{|P_1P_2|} = \\dfrac{\\sqrt{a^2+b^2+c^2}}{|P_1P_2|} = d \\tag{2} \\] <p>\u5176\u4e2d\\(PP_1 \\times PP_2 = (a,b,c)\\),\u4e14</p> \\[ \\begin{align} a=PP_{1x}PP_{2y} - PP_{2x}PP_{1y} \\\\\\\\ b=PP_{1x}PP_{2z} - PP_{2x}PP_{1z} \\\\\\\\ c=PP_{1y}PP_{2z} - PP_{2y}PP_{1z} \\end{align} \\]"},{"location":"m%26l/loc_gauss_newton_example/#_10","title":"\u4f18\u5316\u6c42\u89e3\u4f18\u8fc7\u7a0b","text":"<p>\u5373\u6c42\u89e3\\(x = (r_x,r_y,r_z, t_x, t_y,t_z)\\)\u7684\u8fc7\u7a0b\uff0c\u635f\u5931\u51fd\u6570\u4e3a</p> \\[ f(x)  = d = f(P^w, Target) = f[G(x), Target] \\] <ol> <li>\u7ed9\u5b9a\u521d\u59cb\u503c\\(x_0\\)</li> <li>\u5bf9\u4e8e\u7b2c\\(k\\)\u6b21\u8fed\u4ee3, \u6c42jacobian\u548cf(x)</li> <li>\u6c42\u89e3\u589e\u91cf\u65b9\u7a0b \\(H \\Delta x = -g,\\quad H = J^TJ, \\quad g = J^Tf(x)\\)</li> <li>\u5982\u679c\\(\\Delta x_k\\)\u6216\u8005\u635f\u5931\u51fd\u6570\\(f(x_k)\\) \u8db3\u591f\u5c0f\uff0c\u5219\u4f18\u5316\u505c\u6b62\uff0c\u5426\u5219\u4ee4\\(x_{k+1} = x_k+\\Delta x\\) ,\u7136\u540estep2</li> </ol>"},{"location":"m%26l/loc_gauss_newton_example/#step2jocabian","title":"step2\u8be6\u89e3\uff1a\u6c42Jocabian","text":"<ul> <li>\u5c06\u7b2c\\(i\\)\u4e2a\u89c2\u6d4b\u901a\u8fc7\u53d8\u91cf\\(x_k\\)\u8fdb\u884c\u8f6c\u6362    $$P^w = G(x)=TP=RP+t \\\\ \\quad \\quad T=(R,t) = (r_x,r_y,r_z, t_x, t_y,t_z)^T   $$ $$ P^{iw} =  \\begin{bmatrix} P_x \\\\ P_y \\\\ P_z \\end{bmatrix} = R  \\begin{bmatrix} x_i \\\\ y_i \\\\ z_i \\end{bmatrix} +  \\begin{bmatrix} t_x \\\\ t_y \\\\ t_z \\end{bmatrix} = T_i P_i \\tag{3} $$</li> </ul>"},{"location":"m%26l/loc_gauss_newton_example/#jacobian_5","title":"\u8ba1\u7b97jacobian","text":"<p>\u5355\u6b21\u89c2\u6d4bJacobian\u4e3a $$ J_i =  \\begin{bmatrix} \\dfrac{\\partial f}{\\partial r_x} \\\\ \\dfrac{\\partial f}{\\partial r_y} \\\\ \\dfrac{\\partial f}{\\partial r_z} \\\\ \\dfrac{\\partial f}{\\partial t_x} \\\\ \\dfrac{\\partial f}{\\partial t_y} \\\\ \\dfrac{\\partial f}{\\partial t_z}  \\end{bmatrix}^T =  \\dfrac{\\partial f}{\\partial P^{w}}\\dfrac{\\partial P^{w}}{\\partial x} = \\begin{bmatrix} \\dfrac{\\partial f}{\\partial P_x} \\dfrac{\\partial P_x}{\\partial r_x} + \\dfrac{\\partial f}{\\partial P_y} \\dfrac{\\partial P_y}{\\partial r_x} + \\dfrac{\\partial f}{\\partial P_z} \\dfrac{\\partial P_z}{\\partial r_x} \\\\ \\dfrac{\\partial f}{\\partial P_x} \\dfrac{\\partial P_x}{\\partial r_y} + \\dfrac{\\partial f}{\\partial P_y} \\dfrac{\\partial P_y}{\\partial r_y} + \\dfrac{\\partial f}{\\partial P_z} \\dfrac{\\partial P_z}{\\partial r_y} \\\\ \\dfrac{\\partial f}{\\partial P_x} \\dfrac{\\partial P_x}{\\partial r_z} + \\dfrac{\\partial f}{\\partial P_y} \\dfrac{\\partial P_y}{\\partial r_z} + \\dfrac{\\partial f}{\\partial P_z} \\dfrac{\\partial P_z}{\\partial r_z} \\\\ \\dfrac{\\partial f}{\\partial P_x} \\dfrac{\\partial P_x}{\\partial t_x} + \\dfrac{\\partial f}{\\partial P_y} \\dfrac{\\partial P_y}{\\partial t_x}+ \\dfrac{\\partial f}{\\partial P_z} \\dfrac{\\partial P_z}{\\partial t_x} \\\\ \\dfrac{\\partial f}{\\partial P_x} \\dfrac{\\partial P_x}{\\partial t_y} + \\dfrac{\\partial f}{\\partial P_y} \\dfrac{\\partial P_y}{\\partial t_y}+ \\dfrac{\\partial f}{\\partial P_z} \\dfrac{\\partial P_z}{\\partial t_y} \\\\ \\dfrac{\\partial f}{\\partial P_x} \\dfrac{\\partial P_x}{\\partial t_z} + \\dfrac{\\partial f}{\\partial P_y} \\dfrac{\\partial P_y}{\\partial t_z}+ \\dfrac{\\partial f}{\\partial P_z} \\dfrac{\\partial P_z}{\\partial t_z} \\\\ \\end{bmatrix}^T  \\tag{4} $$ \u5176\u4e2d $$ \\dfrac{\\partial f}{\\partial P^w} =[ \\dfrac{\\partial f}{\\partial P_x} \\quad \\dfrac{\\partial f}{\\partial P_y} \\quad \\dfrac{\\partial f}{\\partial P_z} ]  $$ \u4e3acost function\u5bf9\u70b9\u7684\u5bfc\u6570\uff0c\u5177\u4f53\u5230\u70b9\u5230\u7ebf\u548c\u70b9\u5230\u9762\u8ddd\u79bbd\u5373\u4e3a\uff1a\u8ddd\u79bbd\u5bf9\u70b9\u6c42\u5bfc\uff0c\u53ef\u7406\u89e3\u4e3a\u6c42\u4e00\u4e2a\u70b9\u7684\u79fb\u52a8\u65b9\u5411\uff0c\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u79fb\u52a8d\u51cf\u5c0f\u7684\u6700\u5feb\uff0c\u663e\u7136\u662f\u5782\u7ebf\u65b9\u5411</p> <p>\u6240\u6709\u89c2\u6d4b\u5bf9\u5e94Jacobian\u4e3a: \\(m \\times n\\) $$ J =  \\begin{bmatrix} J_1 \\\\ J_2 \\\\ ... \\\\ J_m \\end{bmatrix} $$</p> <p>cost function\u5355\u6b21\u7ed3\u679c\\(f(x) = dx\\) \u6240\u6709\u89c2\u6d4b\u7ed3\u679c\u4e3a\uff1amx1 $$ f = [f[P_1(x)] \\quad f[P_2(x)] \\quad ... \\quad f[P_m(x)]]^T = [d_1 \\quad d_2 \\quad ... \\quad d_m]^T $$</p>"},{"location":"m%26l/loc_gauss_newton_example/#jacobian_6","title":"\u8be6\u7ec6\u8ba1\u7b97Jacobian","text":"<p>cost function \u5373\u4f18\u5316\u70b9\\(P\\)\u5230\u7ebf\u6bb5\\(P_1 \\quad P_2\\)\u7684\u8ddd\u79bb,\u4ee5\u6c42\u5f97\\(x = (r_x,r_y,r_z, t_x, t_y,t_z)\\)</p> \\[ f(x) =f[P(x)]  = \\dfrac{|PP_1 \\times PP_2|}{|P_1P_2|} = \\dfrac{\\sqrt{a^2+b^2+c^2}}{B} = d \\tag{5} \\] <p>\u5176\u4e2d\\(P(x) = \\quad PP_1 \\times PP_2 = (a,b,c)\\),\u4e14\\(B = |P_1P_2|\\)</p> \\[ \\begin{align} a=PP_{1x}PP_{2y} - PP_{2x}PP_{1y} \\\\\\\\ b=PP_{1x}PP_{2z} - PP_{2x}PP_{1z} \\\\\\\\ c=PP_{1y}PP_{2z} - PP_{2y}PP_{1z} \\\\\\\\ \\end{align} \\] <ul> <li>\u8ba1\u7b97\\(\\dfrac{\\partial f}{\\partial P_x}\\)</li> <li>\u65b9\u6cd51\uff1a\u516c\u5f0f\\(5\\)\u4e24\u8fb9\u5e73\u65b9,\u518d\u5bf9\\(P_x\\)\u76f4\u63a5\u6c42\u5bfc</li> </ul> \\[ \\begin{gather}    [f(x)]^2 = \\dfrac{a^2+b^2+c^2}{B^2} = d^2 \\\\\\\\   2f(x){f}'(x) = \\dfrac{2a \\dfrac{\\partial a}{\\partial P_x} + 2b \\dfrac{\\partial b}{\\partial P_x} + 2c \\dfrac{\\partial c}{\\partial P_x}}{B^2} \\end{gather} \\] \\[ \\begin{align}    {f}'(x) &amp;= \\dfrac{a \\dfrac{\\partial a}{\\partial P_x} + b \\dfrac{\\partial b}{\\partial P_x}}{d \\cdot B^2} \\\\\\\\    &amp;= \\dfrac{1}{d\\cdot B^2}(a(PP_{2y} - PP_{1y})+b(PP_{2z} - PP_{1z})) \\\\\\\\    &amp;= \\dfrac{a P_1P_{2y} + bP_1P{2z}}{d\\cdot B^2} \\end{align} \\] <ul> <li>\u65b9\u6cd52\uff1a\u516c\u5f0f\\(5\\)\u5bf9\\(P_x\\)\u76f4\u63a5\u6c42\u5bfc</li> </ul> \\[ \\begin{align}     {f}'(x) &amp;= \\dfrac{2a \\dfrac{\\partial a}{\\partial P_x} + 2b \\dfrac{\\partial b}{\\partial P_x} + 2c \\dfrac{\\partial c}{\\partial P_x} }{B\\cdot 2\\sqrt{a^2+b^2+c^2}} \\\\\\\\     &amp;= \\dfrac{a \\dfrac{\\partial a}{\\partial P_x} + b \\dfrac{\\partial b}{\\partial P_x}}{B\\cdot \\sqrt{a^2+b^2+c^2}} \\quad \u7136\u540e\u4e24\u8fb9\u540c\u65f6\u4e58f(x) \\end{align} \\] \\[ f(x){f}'(x) =  \\dfrac{a \\dfrac{\\partial a}{\\partial P_x} + b \\dfrac{\\partial b}{\\partial P_x}}{B^2}  \\] \\[ then, \\quad {f}'(x) = \\dfrac{\\partial f}{\\partial P_x} = \\dfrac{a \\dfrac{\\partial a}{\\partial P_x} + b \\dfrac{\\partial b}{\\partial P_x}}{d \\cdot B^2}  \\] <ul> <li>\u8ba1\u7b97\\(\\dfrac{\\partial P_x}{\\partial r_x}\\),\u7531\\(\\quad P^w =RP+t\\)\u5f97</li> </ul> \\[   P_x = (c_{ry}c_{rz} + s_{rx}s_{ry}s_{rz} )x_i + (-c_{ry}s_{rz}+s_{rx}s_{ry}c_{rz})y_i+ s_{ry}c_{rx}z_i + t_x \\] \\[   \\dfrac{\\partial P_x}{\\partial r_x} = c_{rx}s_{ry}s_{rz} x_i + c_{rx}s_{ry}c_{rz}y_i  - s_{ry}s_{rx}z_i \\]"},{"location":"m%26l/loc_gauss_newton_example/#cost-function_5","title":"\u70b9\u5230\u9762cost function","text":"<p>\\(P\\)\u4e3a\u89c2\u6d4b\u70b9\uff0c\\(P_i\\)\u4e3a\u5e73\u9762\u4e00\u70b9\uff0c\\(n\\)\u4e3a\u5e73\u9762\u6cd5\u5411\u91cf</p> \\[ \\begin{align} f(x) = f[P(x)] = |PP_1|\\cdot |n|\\cdot cos&lt;PP_1,n&gt; = d  \\end{align} \\] \\[ f(x) = f[P(x)]  =PP_1 \\cdot n =  n_x(x - x_i) + n_y(y - y_i) + n_z(z - z_i)  \\] <p>Jacobian\u8ba1\u7b97</p> \\[ \\dfrac{\\partial f}{\\partial P} =  \\begin{bmatrix}     \\dfrac{\\partial f}{\\partial P_x} \\\\\\\\     \\dfrac{\\partial f}{\\partial P_y} \\\\\\\\     \\dfrac{\\partial f}{\\partial P_z}  \\end{bmatrix}^T =  \\begin{bmatrix}     n_x \\\\\\\\     n_y \\\\\\\\     n_z \\end{bmatrix}^T \\]"},{"location":"m%26l/loc_visual/","title":"\u89c6\u89c9\u5b9a\u4f4d(\u8f66\u9053\u7ebf\u5339\u914d)","text":""},{"location":"m%26l/loc_visual/#todo","title":"TODO","text":""},{"location":"m%26l/mapping_kernel/","title":"Mapping kernel","text":""},{"location":"m%26l/mapping_kernel/#_1","title":"\u96f7\u8fbe\u5750\u6807\u7cfb\u5230\u56fe\u50cf\u5750\u6807\u7cfb\u7684\u8f6c\u6362","text":"<p>\u5047\u8bbe\u96f7\u8fbe\u6c34\u5e73\u89c6\u573a\u89d2\u4e3a \\(\\beta_G\\), \u6c34\u5e73\u5206\u8fa8\u7387\u4e3a \\(r_{\\beta}\\), \u5782\u76f4\u89c6\u573a\u89d2\u4e3a \\(\\alpha_G\\), \u5782\u76f4\u5206\u8fa8\u7387\u4e3a \\(r_{\\alpha}\\), \u5bf9\u4e8e\u70b9\u4e91\u4e2d\u4efb\u610f\u4e00\u70b9 \\(P(x,y,z)\\), \u5176\u5728\u56fe\u50cf\u7cfb\u4e0b\u5750\u6807\\(P(u,v)\\)\u8ba1\u7b97\u5982\u4e0b</p> <p>\u6c34\u5e73\u65b9\u4f4d\u89d2  \\(\\quad \\beta = arctan(\\dfrac{y}{x}) \\\\\\\\ u = \\dfrac{\\beta_G - \\beta}{r_{\\beta}}\\)</p> <p>P\u4e0e\u96f7\u8fbe\u5750\u6807\u7cfbxy\u5e73\u9762\u5939\u89d2 \\(\\quad \\alpha =arctan(\\dfrac{z}{ \\sqrt{x^2+y^2}})\\)</p> \\[ v =  \\begin{cases}       \\dfrac{\\alpha_G  - \\alpha}{r_{\\alpha}} \\quad z &gt; 0 \\\\\\\\       \\dfrac{\\alpha_G  + \\alpha}{r_{\\alpha}} \\quad z &lt; 0  \\end{cases} \\]"},{"location":"m%26l/slam_based_lidar/","title":"ing-slam-lidar","text":""},{"location":"m%26l/slam_based_lidar/#pca","title":"\u8ba1\u7b97PCA","text":"<p>\u6b66\u6c49\u5927\u5b66\u9065\u6d4b\u5b66\u9662\u535a\u58ebpaper</p> <ul> <li>\u5747\u503c</li> </ul> \\[ \\bar{x} = \\frac{1}{n}\\sum_{i=1}^Nx_i \\] <ul> <li>\u65b9\u5dee</li> </ul> \\[ S^2 = \\frac{1}{n-1}\\sum_{i=1}^N(x_i - \\bar{x})^2 \\] <p>\u5bf9\u4e8e\u4e00\u7ec4\u70b9\u96c6\\(P_i=(x_i,y_i,z_i), i \\in [0,N)\\)</p> \\[ Cov(x,y,z) = \\begin{bmatrix}     &amp;cov(x,x) &amp;cov(x,y) &amp;cov(x,z) \\\\     &amp;cov(y,x) &amp;cov(y,y) &amp;cov(y,z) \\\\     &amp;cov(z,x) &amp;cov(z,y) &amp;cov(z,z)  \\end{bmatrix} \\] <p>\u5176\u4e2d</p> \\[ \\begin{align} cov(x,y) = cov(y,x) = \\frac{1}{n-1}\\sum_{i=1}^N(x_i - \\bar{x})(y_i - \\bar{y}) \\\\\\\\ cov(x,z) = cov(z,x) = \\frac{1}{n-1}\\sum_{i=1}^N(x_i - \\bar{x})(z_i - \\bar{z}) \\\\\\\\ cov(y,z) = cov(z,y) = \\frac{1}{n-1}\\sum_{i=1}^N(z_i - \\bar{z})(y_i - \\bar{y})     \\end{align}  \\] <p>\u6839\u636e\\(Cov(x,y,z)\\)\u6c42\u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf: \u8bbe\\(S = Cov(x,y,z)\\), \u5b58\u5728\\(\\lambda\\) \u4e0e \\(n\\)\u4f7f\u5f97\\(\\lambda n = S n\\),\u5219\\(\\lambda\\)\u4e0e\\(n\\)\u5206\u522b\u4e3a\\(S\\)\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf \\(S=Q\\Sigma Q^{-1}\\),\u5176\u4e2d\\(Q\\)\u4e3a\\(S\\)\u7684\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635, \\(\\Sigma\\)\u4e3a\u5bf9\u89d2\u9635\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u4e3a\u7279\u5f81\u503c</p>"},{"location":"m%26l/slam_based_visual/","title":"ing-slam-visual","text":""},{"location":"m%26l/slam_based_visual/#vins","title":"VINS","text":"<p>note of VINS</p>"},{"location":"m%26l/slam_based_visual/#abstract","title":"abstract","text":"<p>\u901a\u8fc7\u6ed1\u7a97\u4f18\u5316\u89c6\u89c9\u548c\u60ef\u5bfc\u5b9e\u73b0\u7cbe\u786e\u7684\u72b6\u6001\u4f30\u8ba1,\u89c6\u89c9\u7ed3\u6784\u7531\u6ed1\u52a8\u7a97\u53e3\u5185\u7684\u5173\u952e\u5e27\u7ef4\u62a4,\u60ef\u6027\u7684metrix\u6d4b\u91cf\u503c\u7531\u5173\u952e\u5e27\u4e4b\u95f4\u7684\u9884\u79ef\u5206\u7ef4\u62a4\u3002\u7cfb\u7edf\u5728\u4f4d\u7f6e\u72b6\u6001\u4e0b\u4e5f\u53ef\u9c81\u68d2\u7684\u521d\u59cb\u5316,\u5e76\u80fd\u5b9e\u65f6\u5b9e\u73b0camera-imu\u7684\u6807\u5b9a,\u7edf\u4e00\u5b9a\u4e49\u5728\u7403\u9762\u4e0a\u7684\u91cd\u6295\u5f71\u8bef\u5dee\u3001\u56de\u73af\u68c0\u6d4b\u3001\u4ee5\u53ca4\u81ea\u7531\u5ea6\u7684\u4f4d\u59ff\u4f18\u5316</p>"},{"location":"m%26l/slam_based_visual/#overview","title":"overview","text":"<ol> <li>\u63d0\u53d6\u3001\u8ffd\u8e2a\u6bcf\u4e2aimage frame\u7684\u7279\u5f81\u70b9,\u5e76\u5728\u76f8\u90bb\u4e24\u5e27key-image\u4e4b\u95f4\u9884\u79ef\u5206imu\u6570\u636e</li> <li>\u521d\u59cb\u5316\u8fc7\u7a0b(\u63d0\u4f9bpose/velocity/gravityVector/gyroscopeBias/3DfeaturePoints\u6765\u5f15\u5bfc\u975e\u7ebf\u6027\u7cfb\u7edf)</li> <li>\u5b9e\u73b0\u975e\u7ebf\u6027\u56fe\u4f18\u5316\u901a\u8fc7\u4f18\u5316\u6240\u6709\u7684\u89c6\u89c9\u3001\u60ef\u5bfc\u6570\u636e\u6765\u4f18\u5316\u6ed1\u7a97\u5185\u72b6\u6001</li> <li>\u5355\u72ec\u7684\u7ebf\u7a0b\u8d1f\u8d23\u95ed\u73af\u68c0\u6d4b\u548c\u4f4d\u59ff\u4f18\u5316</li> </ol>"},{"location":"m%26l/slam_based_visual/#_1","title":"\u6d4b\u91cf\u503c\u9884\u5904\u7406","text":"<ol> <li>image,\u8fde\u7eed\u5e27\u4e4b\u95f4\u68c0\u6d4b\u7279\u5f81\u5e76\u5728\u4e0a\u4e00\u5e27\u68c0\u6d4b\u65b0\u7684\u7279\u5f81</li> <li>imu: \u5728\u8fde\u7eed\u4e24\u5e27image\u4e4b\u95f4\u9884\u79ef\u5206\u3002\u6ce8:imu\u6570\u636e\u540c\u65f6\u88abnoise\u548cbias\u6240\u5f71\u54cd,\u6240\u4ee5\u5728\u9884\u79ef\u5206\u548c\u4f18\u5316\u8fc7\u7a0b\u4e2d\u90fd\u7279\u522b\u8003\u8651\u4e86bias,\u8fd9\u5728\u4f4e\u6210\u672c\u7684imu\u6570\u636e\u5904\u7406\u4e2d\u5f88\u91cd\u8981</li> </ol>"},{"location":"m%26l/slam_based_visual/#a","title":"A.\u524d\u7aef\u89c6\u89c9\u5904\u7406","text":"<p>\u9488\u5bf9\u6bcf\u4e00\u5f20\u56fe\u50cf,\u91c7\u7528KLT\u7a00\u758f\u5149\u6d41\u7b97\u6cd5\u8ffd\u8e2a\u7279\u5f81,\u540c\u65f6\u68c0\u6d4b\u89d2\u70b9\u6765\u4fdd\u6301\u6bcf\u5f20image\u7684\u6700\u5c0f\u7279\u5f81\u6570\u76ee,detector\u5f3a\u5236\u7edf\u4e00\u7684\u7279\u5f81\u5206\u5e03\u901a\u8fc7\u5728\u76f8\u90bbimage\u8bbe\u7f6e\u6700\u5c0f\u7684\u50cf\u7d20\u5dee\u4e2a\u6570\u3002 \u68c0\u6d4b\u5230\u7684\u7279\u5f81\u5728\u901a\u8fc7RANSAC\u6291\u5236\u79bb\u7fa4\u70b9\u540e\u88ab\u6620\u5c04\u5230\u5355\u4f4d\u7403\u4f53\u3002 key frame\u4e5f\u5728\u8fd9\u4e00\u6b65\u6839\u636e2\u4e2a\u6807\u51c6\u9009\u53d6:(1)\u901a\u8fc7\u8ffd\u8e2a\u7684\u5e73\u5747parallax\u89c6\u5dee\u9009\u53d6,\u89c6\u5dee\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\u5219\u4e3akey frame,\u5e73\u79fb\u548c\u65cb\u8f6c\u90fd\u4f1a\u5f15\u8d77\u89c6\u5dee,\u4f46\u53ea\u65cb\u8f6c\u4e0d\u80fd\u5b8c\u6210\u4e09\u89d2\u5316,\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u8ba1\u7b97\u89c6\u5deeparallax\u7684\u65f6\u5019\u4f7f\u7528imu\u79ef\u5206\u8865\u507f\u65cb\u8f6c (2)\u53e6\u4e00\u4e2a\u6807\u51c6\u662f\u8ffd\u8e2a\u7684\u8d28\u91cf,\u5982\u679c\u8ffd\u8e2a\u7684\u7279\u5f81\u6570\u91cf\u4f4e\u4e8e\u8bbe\u5b9a\u7684\u9608\u503c,\u6211\u4eec\u4e5f\u628a\u8fd9\u4e00\u8fd9\u5e27\u89c6\u4e3akeyframe</p>"},{"location":"m%26l/slam_based_visual/#bimu-preintegration","title":"B.IMU-Preintegration","text":"<p>\u76f8\u6bd4\u4e4b\u524d\u7684\u5de5\u4f5c,\u6b64\u6b21\u96c6\u6210\u4e86IMU\u7684bias\u6821\u6b63,\u8fde\u7eed\u65f6\u5e8f\u4e0b\u52a8\u6001\u4f20\u64ad\u566a\u58f0,\u540c\u65f6IMU\u9884\u79ef\u5206\u7ed3\u679c\u4f1a\u5e94\u7528\u5230\u521d\u59cb\u5316\u6a21\u5757\u6765\u6821\u51c6\u521d\u59cb\u5316\u72b6\u6001</p>"},{"location":"m%26l/slambook2_appendix/","title":"done-slambook2\u989d\u5916\u8865\u5145\u6750\u6599","text":""},{"location":"m%26l/slambook2_appendix/#ch04","title":"ch04 \u8bc4\u4f30\u8f68\u8ff9\u8bef\u5dee","text":"<p>\u4f30\u8ba1\u8f68\u8ff9 \\(T_{esti, i}\\)\u4e0e\u771f\u5b9e\u8f68\u8ff9 \\(T_{gt, i}\\),\u5176\u4e2d\\(i=1,2,...,N\\)</p> <ul> <li>\u7edd\u5bf9\u8f68\u8ff9\u8bef\u5dee(ATE,absolute trajectory error)</li> </ul> \\[  \\begin{align}   ATE_{all} = \\sqrt{\\dfrac{1}{N}\\sum_{i=1}^N} \\cdot log(T_{gt,i}^{-1} \\cdot T_{esti,i})^2   \\end{align}  \\] \\[ \\text{\u5373\u6bcf\u4e2a\u674e\u4ee3\u6570\u7684\u5747\u65b9\u6839\u8bef\u5dee(RMSE,root-mean squar error)\uff0c\u53cd\u5e94\u4e24\u6761\u8f68\u8ff9\u65cb\u8f6c\u5e73\u79fb\u8bef\u5dee} \\] <ul> <li>\u7edd\u5bf9\u5e73\u79fb\u8bef\u5dee(ATE, Average Translated Error)</li> </ul> \\[  ATE_{trans} =  \\sqrt{\\dfrac{1}{N}\\sum_{i=1}^N}(trans(T_{gt,i}^{-1} \\cdot T_{esti,i}))^2 \\] <ul> <li>\u76f8\u5bf9\u4f4d\u59ff\u8bef\u5dee(RPE,Relative Pose Error)\uff0c\u8003\u8651\\(i\\)\u5230\\(i+\\Delta t\\)\u65f6\u523b\u8fd0\u52a8</li> </ul> \\[ RPE_{all} = \\sqrt{\\dfrac {1}{N-\\Delta t} \\cdot \\sum_{i=1}^{N-\\Delta t}log|(T_{gt,i}^{-1} \\cdot T_{gt,i+\\Delta t})^{-1}(T_{gt,i}^{-1} \\cdot T_{gt,i+\\Delta t})|^2} \\] <ul> <li>\u76f8\u5bf9\u5e73\u79fb\u8bef\u5dee</li> </ul> \\[ RPE_{all} = \\sqrt{\\dfrac   {1}{N-\\Delta t} \\cdot \\sum_{i=1}^{N-\\Delta t}trans|(T_{gt,i}^{-1} \\cdot T_{gt,i+\\Delta t})^{-1}(T_{gt,i}^{-1} \\cdot T_{gt,i+\\Delta t})|^2} \\]"},{"location":"m%26l/slambook2_appendix/#ch06-code","title":"ch06 \u624b\u5199\u9ad8\u65af\u725b\u987f-code","text":"<p>\u9ad8\u65af\u725b\u987f\u5b9e\u8df5-\u4ee5\u89c6\u89c9\u5b9a\u4f4d\u4e3a\u4f8b</p> \\[y=exp(ax^2 + bx + c) + w, \\quad w \\sim N(0, \\sigma^2)\\] <p>\\(N\u4e2ax,y\u7684\u89c2\u6d4b\u70b9\\),\u8bef\u5dee \\(e_i = y_i - exp(ax_i^2 + bx_i + c)\\)</p> \\[\\min\\limits_{a,b,c} \\dfrac{1}{2} \\sum_{i=1}^{N}|e_i|^2\\] <p>\\(e_i\\)\u5bf9\u72b6\u6001\u53d8\u91cf(\u5f85\u4f18\u5316\u53d8\u91cf: \u5373\\(a,b,c\\))\u6c42\u5bfc:</p> \\[ \\dfrac{\\partial e_i}{\\partial a} =  -x_i^2 \\cdot exp(ax_i^2+bx_i+c) \\\\ \\dfrac{\\partial e_i}{\\partial b} =  -x_i \\cdot exp(ax_i^2+bx_i+c) \\\\ \\dfrac{\\partial e_i}{\\partial c} =    exp(ax_i^2+bx_i+c) \\\\ \\] <p>\u96c5\u53ef\u6bd4\\(Jacobian\\)\u77e9\u9635 </p> \\[ J_i = [\\dfrac{\\partial e_i}{\\partial a},\\dfrac{\\partial e_i}{\\partial b},\\dfrac{\\partial e_i}{\\partial c}]^T \\] <p>\\(Gauss-Newton\\)\u7684\u589e\u91cf\u65b9\u7a0b\u4e3a </p> \\[ \\big ( \\sum_{i=1}^{100}J_i(\\sigma ^2)^{-1} J_i^T \\big) \\Delta x_k  = \\sum_{i=1}^{100}(-J_i(\\sigma ^2)^{-1}e_i) \\]"},{"location":"m%26l/slambook2_appendix/#appendx","title":"appendx \u77e9\u9635\u6c42\u5bfc","text":""},{"location":"m%26l/slambook2_appendix/#_1","title":"\u6807\u91cf\u51fd\u6570\u5bf9\u5411\u91cf\u6c42\u5bfc","text":"<p>\u5411\u91cf\\(\\overrightarrow{x} = \\{x_1,x_2,...,x_m\\}^T \\in R^m\\),\\(f(x)\\)\u4e3a\u6807\u91cf\uff0c\u5219:</p> \\[ \\dfrac{df}{\\partial \\overrightarrow{x}} = [\\dfrac{df}{\\partial x_1},\\dfrac{df}{\\partial x_2}, ..., \\dfrac{df}{\\partial x_m}]^T \\in R^m, \\quad \u4e3am \\times 1\u7684\u5217\u5411\u91cf\uff0c\u68af\u5ea6\u6216Jacobian \\] <p>\u800c</p> \\[ \\dfrac{df}{\\partial \\overrightarrow{x}^T} = [\\dfrac{df}{\\partial x_1},\\dfrac{df}{\\partial x_2}, ..., \\dfrac{df}{\\partial x_m}] \\in R^m, \\quad \u7ed3\u679c\u5219\u4e3a1 \\times m\u7684\u884c\u5411\u91cf \\]"},{"location":"m%26l/slambook2_appendix/#_2","title":"\u5411\u91cf\u51fd\u6570\u5bf9\u5411\u91cf\u6c42\u5bfc","text":"<p>\u5411\u91cf\u51fd\u6570\\(f(\u00b7)\\)\u4e3a\\(n \\times 1\\)\u7ef4, \u53d8\u91cf\\(x\\)\u4e3a\\(m\\times 1\\)\u7ef4\uff0c \u8bbe\\(F(x)\\)\u4e3a\u4e00\u4e2a\u5411\u91cf\u51fd\u6570\uff0c\\(F(x)=[f_1(x),f_2(x),...,f_n(x)]^T\\),\u5176\u4e2d\u6bcf\u4e2a\\(f(x)\\)\u90fd\u662f\u4e00\u4e2a\u81ea\u53d8\u91cf\u4e3a\u5411\u91cf\uff0c\u53d6\u503c\u4e3a\u6807\u91cf\u7684\u51fd\u6570\u3002</p> <p>\u5217\u5411\u91cf\u51fd\u6570\u5bf9\u884c\u5411\u91cf\u8fdb\u884c\u6c42\u5bfc</p> \\[ \\dfrac{\\partial F}{\\partial x^T} = \\begin{bmatrix}   \\dfrac{\\partial f_1}{\\partial x^T} \\\\\\\\   \\dfrac{\\partial f_2}{\\partial x^T} \\\\\\\\   .\\\\\\\\   \\dfrac{\\partial f_n}{\\partial x^T} \\end{bmatrix}  =  \\begin{bmatrix}     &amp;\\dfrac{\\partial f_1}{\\partial x_1},&amp;\\dfrac{\\partial f_1}{\\partial x_2},&amp;\\cdots,&amp;\\dfrac{\\partial f_1}{\\partial x_m} \\\\\\\\     &amp;\\dfrac{\\partial f_2}{\\partial x_1},&amp;\\dfrac{\\partial f_2}{\\partial x_2},&amp;\\cdots,&amp;\\dfrac{\\partial f_2}{\\partial x_m} \\\\\\\\     &amp;\\vdots, &amp;\\vdots, &amp;\\vdots, &amp;\\vdots,\\\\\\\\     &amp;\\dfrac{\\partial f_n}{\\partial x_1},&amp;\\dfrac{\\partial f_n}{\\partial x_2},&amp;\\cdots,&amp;\\dfrac{\\partial f_n}{\\partial x_m}  \\end{bmatrix} \\in R^{n \\times m      } \\] <p>\u5178\u578b\u4f8b\u5b50\u5982 \\(\\dfrac{\\partial (Ax)}{\\partial x^T} = A\\), \u6c42\u5bfc\u524d\u5bf9\u88ab\u6c42\u5bfc\u53d8\u91cf\u8fdb\u884c\u8f6c\u7f6e</p> <p>\u53cd\u4e4b\uff0c\u4e00\u4e2a\u884c\u5411\u91cf\u51fd\u6570\u5bf9\u5217\u5411\u91cf\u6c42\u5bfc\uff0c\u5219\u7ed3\u679c\u4e3a\u4e0a\u9762\u7ed3\u679c\u7684\u8f6c\u7f6e\uff0c\u5373</p> \\[\\dfrac{\\partial F^T}{\\partial x} = (\\dfrac{\\partial F}{\\partial x^T})^T\\]"},{"location":"m%26l/tf_rigid_motion/","title":"done\u521a\u4f53\u8fd0\u52a8-\u4e09\u7ef4\u65cb\u8f6c\u53d8\u6362","text":""},{"location":"m%26l/tf_rigid_motion/#notationspaper-lio","title":"Notations(paper-lio)","text":"<ul> <li>denote the transformation matrix as \\(\\mathbf{T}_b^a \\in  SE(3)\\,[b \\to a]\\), which transforms the point \\(\\mathbf{x}^b \\in \\mathbb{R}^3\\) in the frame \\(\\mathcal{F}_b\\) into the frame \\(\\mathcal{F}_a\\),just as [\\(\\mathbf{T}_L^I\\) -&gt; lidar / imu, transform point \\(P\\) from lidar frame \\(\\mathcal{F}_{lidar}\\) to imu frame \\(\\mathcal{F}_{imu}\\)].</li> <li>denote the raw measurements of the IMU at timestamp \\(\\mathcal{k}\\) as \\(\\hat{a}_k\\) and \\(\\hat{w}_k\\).</li> <li>denote the extracted features as \\(\\mathbf{F}_a\\) in original \\(\\mathcal{F}_{lidar}\\),which can be transformed into the frame \\(\\mathcal{F}_b\\) as \\(\\mathbf{F}_a^b\\).</li> <li>robot body frame \\(\\mathcal{F}_B \\to imu\\), and lidar body frame\\(\\mathcal{F}_L \\to lidar\\)</li> </ul>"},{"location":"m%26l/tf_rigid_motion/#eulerypr","title":"Euler\u89d2(ypr\u4e3a\u4f8b)","text":"<p>\u751f\u6210\u65cb\u8f6c\u77e9\u9635\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u5f0f\u662f\u628a\u5b83\u4f5c\u4e3a\u4e09\u4e2a\u57fa\u672c\u65cb\u8f6c\u7684\u5e8f\u5217\u590d\u5408\u3002\u5173\u4e8e\u53f3\u624b\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u7684 \\(X \\quad Y \\quad Z\\)\u8f74\u7684\u65cb\u8f6c\u5206\u522b\u4e3a\\(roll \\quad pitch \\quad yaw\\)\u3002\u56e0\u4e3a\u8fd9\u4e9b\u65cb\u8f6c\u88ab\u8868\u8fbe\u4e3a\u5173\u4e8e\u4e00\u4e2a\u8f74\u7684\u65cb\u8f6c\uff0c\u5b83\u4eec\u7684\u751f\u6210\u5143\u5f88\u5bb9\u6613\u8868\u8fbe</p> <p>\u4e13\u4e1a\u4e3b\u6d41\u8d44\u6599\u4e2d\u5bf9\u4e8e\u6b27\u62c9\u89d2\u7b49\u8868\u793a\u65b9\u6cd5\u7684\u5b9a\u4e49\u4e00\u822c\u4e3a\u4e0b\u8868\uff1a \u4e5f\u6709\u975e\u4e13\u4e1a\u8d44\u6599\u81ea\u5b9a\u4e49\\(\\alpha \\quad \\beta \\quad \\gamma\\)\u4e3a\u6b27\u62c9\u89d2\u7684\u4e09\u4e2a\u89d2\u5ea6\u8868\u793a\\(roll, pitch, yaw\\)</p> Axis Z Y X euler yaw pitch roll greek letter \\(\\psi\\) \\(\\theta\\) \\(\\phi\\) order \\(X \\to Y\\) \\(Z \\to X\\) \\(Y \\to Z\\) <p>\u6b27\u62c9\u89d2\u7684\u65cb\u8f6c\u987a\u5e8f\u4e3a\\(ZYX\\)\uff0c\u5373\u5148\u7ed5Z\u8f74\u65cb\u8f6c\uff0c\u518d\u7ed5Y\u8f74\u65cb\u8f6c\uff0c\u6700\u540e\u7ed5X\u8f74\u65cb\u8f6c,\u6ce8\u610f\u7ed5\\(Y\\)\u8f74\u65cb\u8f6c\u76f8\u5f53\u4e8e\u662f\u4ee5\u5df2\u77e5\u7cfb\u4e3a\u53c2\u8003\u7cfb,\u89c1\u5982\u4e0b\u793a\u4f8b</p>"},{"location":"m%26l/tf_rigid_motion/#_1","title":"\u65cb\u8f6c\u77e9\u9635\u5206\u91cf","text":"<ul> <li>\u7ed5 x-\u8f74\u7684\u4e3b\u52a8\u65cb\u8f6c\u5b9a\u4e49\u4e3a:   $$   R_x(\\theta _x) =    \\begin{bmatrix}   1&amp; 0&amp; 0 \\\\   0&amp; cos\\theta_x&amp; -sin\\theta_x \\\\   0&amp; sin\\theta_x&amp; cos\\theta_x   \\end{bmatrix}   $$   \u6b64\u5904\\(\\theta_x\\)\u5373\u4e3aroll\u89d2\uff0cyz\u5e73\u9762\u987a\u65f6\u9488</li> <li>\u7ed5 y-\u8f74\u7684\u4e3b\u52a8\u65cb\u8f6c\u5b9a\u4e49\u4e3a:   $$   R_y(\\theta _y) =    \\begin{bmatrix}   cos\\theta_y&amp;  sin\\theta_y&amp; 0 \\\\   0&amp; 1&amp; 0 \\\\   -sin\\theta_y&amp; cos\\theta_y&amp; 0   \\end{bmatrix}   $$   \u6b64\u5904\\(\\theta_y\\)\u5373\u4e3apitch\u89d2\uff0czx\u5e73\u9762\u987a\u65f6\u9488</li> <li>\u7ed5 z-\u8f74\u7684\u4e3b\u52a8\u65cb\u8f6c\u5b9a\u4e49\u4e3a:   $$   R_z(\\theta _z) =    \\begin{bmatrix}   cos\\theta_z&amp; -sin\\theta_z&amp; 0 \\\\   sin\\theta_z&amp; cos\\theta_z&amp; 0 \\\\   0&amp; 0&amp; 1   \\end{bmatrix}   $$   \u6b64\u5904\\(\\theta_z\\)\u5373\u4e3ayaw\u89d2\uff0cxy\u5e73\u9762\u987a\u65f6\u9488</li> </ul>"},{"location":"m%26l/tf_rigid_motion/#eg","title":"\u76ee\u6807\u7cfb\u4e3a\u53c2\u8003\u7cfb,\u4e3b\u6d41(e.g)","text":"<p>\u793a\u4f8b(enu&lt;-&gt;local)</p> <ul> <li>\u5df2\u77e5\u5c40\u90e8\u5750\u6807\u7cfb\u4e0b\u5750\u6807\\(P_{local}(x,y,yaw| \\psi)\\), \\(yaw \u5373  \\psi\\)\u662f\u76f8\u5bf9\u4e1c\u5317\u5929\\(ENU\\)\u7cfb\uff0c\u5219enu\u5750\u6807\u7cfb\u4e0b\u5750\u6807\\(P_{enu}(x_{enu},y_{enu})\\)\u4e3a:</li> </ul> \\[ P_{enu} =  \\begin{bmatrix}     x_{enu} \\\\\\\\     y_{enu} \\end{bmatrix} = \\begin{bmatrix}     cos \\psi, &amp; -sin \\psi \\\\\\\\     sin \\psi, &amp; cos \\psi \\end{bmatrix} \\begin{bmatrix}     x_{local} \\\\\\\\     y_{local} \\end{bmatrix}   \\] \\[ \\text{\u5907\u6ce8\uff1a\u4ee5\u76ee\u6807\u7cfbenu\u4e3a\u53c2\u8003\u7cfb, yaw\u4e3a\u5728\u76ee\u6807\u7cfbenu\u4e0b\u89d2\u5ea6, \u4e3b\u6d41\u5e38\u7528}  \\] <ul> <li>\u5df2\u77e5enu\u5750\u6807\u7cfb\u4e0b\u5750\u6807\\(P_{enu}(x,y,yaw| \\psi)\\), \\(yaw \u5373  \\psi\\)\u662f\u76f8\u5bf9\u4e1c\u5317\u5929\\(ENU\\)\u7cfb\uff0c\u5219local\u5750\u6807\u7cfb\u4e0b\u5750\u6807\\(P_{local}(x_{local},y_{local})\\)\u4e3a</li> </ul> \\[ P_{local} =   \\begin{bmatrix}     cos (-\\psi), &amp; -sin (-\\psi) \\\\\\\\     sin (-\\psi), &amp; cos (-\\psi) \\end{bmatrix} \\begin{bmatrix}     x_{enu} \\\\\\\\     y_{enu} \\end{bmatrix} =  \\begin{bmatrix}     cos \\psi , &amp;  sin  \\psi  \\\\\\\\     -sin  \\psi , &amp; cos  \\psi  \\end{bmatrix} \\begin{bmatrix}     x_{enu} \\\\\\\\     y_{enu} \\end{bmatrix} \\] \\[ \\text{\u5907\u6ce8\uff1a\u4ee5\u76ee\u6807\u7cfblocal\u4e3a\u53c2\u8003\u7cfb, enu\u76f8\u5bf9local\u89d2\u5ea6\u4e3a -yaw, \u5c11\u7528\u4ee5\u907f\u514d\u6b67\u4e49}   \\]"},{"location":"m%26l/tf_rigid_motion/#wiki","title":"wiki\u6b27\u62c9\u89d2\u548c\u65cb\u8f6c\u77e9\u9635\u4e92\u8f6c\u53c2\u8003","text":"<p>\u5728\u98de\u884c\u52a8\u529b\u5b66\u4e2d\uff0croll - \\(\\gamma\\), pitch - \\(\\alpha\\) \u548c yaw - \\(\\beta\\) , \u4f46\u662f\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\u4e8e\u6b27\u62c9\u89d2\u8fd9\u91cc\u4f7f\u7528\u7b26\u53f7 \\(\\theta _{x}\\), \\(\\theta _{y}\\), \\(\\theta _{z}\\)\u5206\u522b\u8868\u793a\u7ed5\\(X \\quad Y \\quad Z\\)(\u53f3\u624b-Xfront-Yleft-Zup)\u8f74\u65cb\u8f6c\u7684\\(roll\u3001pitch\u3001yaw\\)</p> <p>\u5982\\(Z_1Y_2X_3\\)\u7684\u65cb\u8f6c\u77e9\u9635R\u4e2d\u7684\\(1,2,3\\)\u5206\u522b\u8868\u793a\\(yaw \\quad pitch \\quad roll\\)</p> <p>ref wikibaike </p>"},{"location":"m%26l/tf_rigid_motion/#_2","title":"\u793a\u4f8b\u4ee3\u7801","text":""},{"location":"m%26l/tf_rigid_motion/#euler-rypr","title":"euler -&gt; R(ypr)","text":"<pre><code>import math\nimport numpy as np\ndef matrix_to_euler_zyx(R):\n    sy = np.sqrt(R[0, 0] * R[0, 0] + R[1, 0] * R[1, 0])\n    singular = sy &lt; 1e-6\n    if not singular:\n        yaw = np.arctan2(R[1, 0], R[0, 0])\n        pitch = np.arcsin(-R[2, 0])\n        roll = np.arctan2(R[2, 1], R[2, 2])\n    else:\n        yaw = 0\n        pitch = np.arctan2(-R[2, 0], sy)\n        roll = np.arctan2(-R[1, 2], R[1, 1])\n    return np.array([yaw, pitch, roll])\n\ndef ypr_to_R(yaw_rad=0, pitch_rad=0, roll_rad=0):\n    sin_yaw = math.sin(yaw_rad)\n    cos_yaw = math.cos(yaw_rad)\n    value = [cos_yaw, -sin_yaw, 0, \n             sin_yaw, cos_yaw, 0, \n             0, 0, 1]\n    R_yaw = np.array(value).reshape(3, 3) \n\n    sin_pitch = math.sin(pitch_rad)\n    cos_pitch = math.cos(pitch_rad)\n    value = [cos_pitch, 0, sin_pitch, \n             0, 1, 0, \n             -sin_pitch, 0, cos_pitch]\n    R_pitch = np.array(value).reshape(3, 3)\n\n    sin_roll = math.sin(roll_rad)\n    cos_roll = math.cos(roll_rad)\n    value = [1, 0, 0, \n             0, cos_roll, -sin_roll,\n             0, sin_roll, cos_roll]\n    R_roll = np.array(value).reshape(3, 3)\n    #R_ypr =  Ry * Rp * Rr;\n    R_ypr = np.dot(np.dot(R_yaw, R_pitch), R_roll) \n    return R_ypr\n</code></pre>"},{"location":"m%26l/tf_rigid_motion/#enler-quaternion","title":"enler &lt;-&gt; Quaternion","text":"<ul> <li>enluer2quaternion by python <pre><code>import numpy as np\ndef euler_to_quaternion(yaw, pitch,roll): #angles are in radians\n    # Abbreviations for the various angular functions\n    cy = np.cos(yaw * 0.5)\n    sy = np.sin(yaw * 0.5)\n    cp = np.cos(pitch * 0.5)\n    sp = np.sin(pitch * 0.5)\n    cr = np.cos(roll * 0.5)\n    sr = np.sin(roll * 0.5)\n\n    w = cy * cp * cr + sy * sp * sr\n    x = cy * cp * sr - sy * sp * cr\n    y = sy * cp * sr + cy * sp * cr\n    z = sy * cp * cr - cy * sp * sr\n\n    return [w, x, y, z]\n</code></pre></li> <li>quaternion&lt;-&gt;euler by cpp <pre><code>//ref: https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles#cite_note-2\nstruct EulerAngles {\n    double roll, pitch, yaw;\n};\nstruct Quaternion\n{\n    double w, x, y, z;\n};\n\nQuaternion Normalize(const Quaternion&amp; q) {\n    auto func_norm = [](Quaternion&amp; q) {\n        return std::sqrt(q.w * q.w + q.x * q.x + q.y * q.y + q.z * q.z);\n    };\n    double n = func_norm(q);\n    if (n == 0.0) {\n        return q; // \u907f\u514d\u9664\u4ee5\u96f6\u7684\u60c5\u51b5\n    }\n    return {q.w / n, q.x / n, q.y / n, q.z / n};\n}\n\n// roll (x), pitch (y), yaw (z), angles are in radians\nQuaternion EulerVector2Quaternion(Eigen::Vector3d vec) {\n  const double angle = vec.norm();\n  if (angle &lt; 1e-8) {\n    Quaternion q(1.0, 0.5 * vec.x(), 0.5 * vec.y(), 0.5 * vec.z());\n    q.normalize();\n    return q;\n  }\n  vec /= angle;\n  return Quaternion(AngleAxis(angle, vec));\n}\nQuaternion EulerAnglesToQuaternion(double roll, double pitch, double yaw) {\n    // Abbreviations for the various angular functions\n    double cr = cos(roll * 0.5);\n    double sr = sin(roll * 0.5);\n    double cp = cos(pitch * 0.5);\n    double sp = sin(pitch * 0.5);\n    double cy = cos(yaw * 0.5);\n    double sy = sin(yaw * 0.5);\n\n    Quaternion q;\n    q.w = cr * cp * cy + sr * sp * sy;\n    q.x = sr * cp * cy - cr * sp * sy;\n    q.y = cr * sp * cy + sr * cp * sy;\n    q.z = cr * cp * sy - sr * sp * cy;\n\n    return q;\n}\n\nEulerAngles QuaternionToEulerAngles(Quaternion q_raw) {\n    //quaternion need to be normalized first\n    auto q = Normalize(q_raw);\n    EulerAngles angles;\n\n    //converts to Euler angles in 3-2-1 sequence\n    //atan(y/x) result is in [-pi/2, pi/2], atan2(y,x) result is in [-pi, pi]\n    // roll (x-axis rotation)\n    double sinr_cosp = 2 * (q.w * q.x + q.y * q.z);\n    double cosr_cosp = 1 - 2 * (q.x * q.x + q.y * q.y);\n    angles.roll = std::atan2(sinr_cosp, cosr_cosp); \n\n    // pitch (y-axis rotation)\n    double sinp = std::sqrt(1 + 2 * (q.w * q.y - q.x * q.z));\n    double cosp = std::sqrt(1 - 2 * (q.w * q.y - q.x * q.z));\n    angles.pitch = 2 * std::atan2(sinp, cosp) - M_PI / 2;\n\n    // yaw (z-axis rotation)\n    double siny_cosp = 2 * (q.w * q.z + q.x * q.y);\n    double cosy_cosp = 1 - 2 * (q.y * q.y + q.z * q.z);\n    angles.yaw = std::atan2(siny_cosp, cosy_cosp);\n\n    return angles;\n}\n\nfunction q = RotationMatrixToQuaterion (R)\n  w = sqrt(1 + trace(R)) * 0.5;\n  w4_inv = 1.0 / (4.0 * w);\n  x = (R(3,2) - R(2,3)) * w4_inv;\n  y = (R(1,3) - R(3,1)) * w4_inv;\n  z = (R(2,1) - R(1,2)) * w4_inv;\n  q = [w, x, y, z];\n  q = q / norm(q);\nendfunction\n</code></pre></li> </ul>"},{"location":"m%26l/tf_rigid_motion/#r","title":"\u6746\u81c2\u7684\u5bf9\u901f\u5ea6\u7684\u5f71\u54cd(<code>\u4e0eR\u7ed3\u5408</code>)","text":"<p>\u7269\u7406\u5b9a\u5f8b <code>\u901f\u5ea6=\u89d2\u5ea6\u901f\u5ea6*\u534a\u5f84</code>\\(\\quad v = w \\times R\\)</p> <p>\u5982\u901a\u8fc7a\u70b9\u901f\u5ea6\u6c42b\u70b9\u901f\u5ea6\uff0c\u5219\u9700\u8981\u5229\u7528a\u70b9\u7684\u89d2\u901f\u5ea6\\(w\\)\u548c\u5411\u91cf\\(a \\to b\\),\u5373b\u76f8\u5bf9a\u7684\\(L_{ab}\\)</p> \\[ v_b = v_a + \\Delta v = v_a + w \\times L_{ab} \\] <p>\u901f\u5ea6-\u6746\u81c2\u8f6c\u6362\u793a\u4f8b\u5982\u4e0b:</p> <p></p> <ul> <li>imu\u5728global\u7cfb\u4e0b\u59ff\u6001\u4e3a \\(R_g\\), \u901f\u5ea6\u4e3a \\(v_g\\), imu\u89d2\u901f\u5ea6\u6d4b\u91cf\u4e3a \\(w\\)</li> <li>\u81ea\u8f66\u7cfb\u5728\\(IMU\\)\u7cfb\u4e0b\u6746\u81c2\u4e3a \\(L_{ic}\\)</li> <li>imu\u7cfb\u5728\u81ea\u8f66\u7cfb\u4e0b\u59ff\u6001\u4e3a \\(R_{ci}\\)</li> </ul> <p>\u5219\u81ea\u8f66\u7cfb\u901f\u5ea6\u4e3a(\u540e\u8f74\u4e2d\u5fc3):</p> <ul> <li>\u5bf9\\(v_g\\)\u59ff\u6001\u65cb\u8f6c: \u5148\u8f6c\u5230imu\u81ea\u8eab\u7cfb,\u518d\u8f6c\u5230Car\u81ea\u8f66\u7cfb\uff0c\u7ed3\u679c\u4e3aimu\u4f4d\u7f6e\u81ea\u8f66\u7cfb\u4e0b\u901f\u5ea6</li> <li>\u901a\u8fc7\u6746\u81c2\\(imu \\to car\\) \u5373  \\(L_{ic}\\)\u6c42\u5f97imu\u7cfb\u4e0b\u540e\u8f74\u4e2d\u5fc3\u76f8\u5bf9\u7684\u901f\u5ea6\u589e\u91cf(\u7269\u7406\u5b9a\u5f8b: \u89d2\u5ea6\u901f\u5ea6*\u534a\u5f84=\u901f\u5ea6)\uff0c\u7136\u540e\u8f6c\u5230\u81ea\u8f66\u7cfb\u4e0b</li> </ul> \\[ V_{vcs} = R_{ci} \\cdot R_g^{-1} \\cdot v_g  +  R_{ci} \\cdot w \\times L_{ic} \\] <ul> <li>example code: </li> </ul> <pre><code>//v = w x R,\u7269\u7406\u5b9a\u5f8b: \u89d2\u5ea6\u901f\u5ea6*\u534a\u5f84=\u901f\u5ea6\n// v_a = v_b + w*l, l\u4e3ab-&gt;a\n/*\n* R_imu_in_car:  imu/car    R_global_in_imu: global/imu\n* leverarm_imu_car: car/imu\n*/\nconst double velocity_vcs_y =\n      (R_imu_in_car * R_global_in_imu * global_vehicle_imu +\n       R_imu_in_car * imu_omega.cross(leverarm_car_in_imu)).y();\n/*\n1. imu\u4f4d\u7f6e\u7684global\u7cfb\u4e0b\u901f\u5ea6\u901a\u8fc7R_global_in_imu\u8f6c\u5230imu\u81ea\u8eab\u7cfb\u4e0b\u901f\u5ea6\n2. imu\u4f4d\u7f6e\u81ea\u8eab\u7cfb\u4e0b\u901f\u5ea6\u901a\u8fc7R_imu_in_car\u8f6c\u5230car\u81ea\u8f66\u7cfb\u4e0b\u59ff\u6001\u7684\u901f\u5ea6,\u5f97\u5230Va\n3. \u901a\u8fc7imu_omega\u548cleverarm[car/imu]\u8ba1\u7b97delta_velocity\u5e76\u8f6c\u5230\u81ea\u8f66\u7cfb\u4e0b,\u5f97\u5230delta_v\n4. \u5219\u6700\u7ec8\u540e\u8f74\u539f\u70b9(\u5373car\u4f4d\u7f6e)\u81ea\u8f66\u7cfb\u4e0b\u901f\u5ea6\u4e3aVa+delta_v\n*/\n</code></pre>"},{"location":"m%26l/tf_rigid_motion/#jacobian-of-quaternion","title":"jacobian of quaternion","text":""},{"location":"m%26l/tf_rigid_motion/#_3","title":"\u6b63\u65cb\u8f6c\u5bf9\u6b63\u65cb\u8f6c\u7684\u5bfc\u6570","text":"<p>\u53c2\u89c1<code>Joan-Sola-1773-Quaternion-kinematics-for-the-error-state-Kalman-filter</code>\u7684paper\u91cc\u516c\u5f0f\\(171 \\to 174\\)</p> \\[ \\dfrac{\\partial( \\mathbf{q} \\otimes \\mathbf{a} \\otimes \\mathbf{q} \\ast)} {\\partial \\mathbf{q}} \\]"},{"location":"m%26l/tf_rigid_motion/#_4","title":"\u9006\u65cb\u8f6c\u5bf9\u6b63\u65cb\u8f6c\u7684\u5bfc\u6570\u63a8\u5230\u5982\u4e0b","text":"\\[ \\mathbf{q} = [w,\\mathbf{v}] \\\\\\\\ \\mathbf{q}\\ast = \\mathbf{q}^{-1} = [w, -\\mathbf{v}] \\\\\\\\ \\] \\[ \\text{\u5219\u9006\u65cb\u8f6c\u5bf9\u6b63\u65cb\u8f6c\u7684\u5bfc\u6570\u5982\u4e0b} \\] \\[ \\frac{\\partial( \\mathbf{q1} \\otimes \\mathbf{a} \\otimes \\mathbf{q1}\\ast )} {\\partial \\mathbf{q}} \\] \\[ \\begin{aligned} &amp;\\mathbf{q} = [w,\\mathbf{v}] \\\\ &amp;\\mathbf{q1} = \\mathbf{q}^{-1} = \\mathbf{q}\\ast = [w, -\\mathbf{v}] \\\\\\\\  \\end{aligned} \\] \\[ \\begin{aligned}  {a}'_{inv} &amp;=  \\mathbf{q1} \\otimes \\mathbf{a} \\otimes \\mathbf{q1\\ast} \\\\\\\\  &amp;=\\mathbf{q\\ast} \\otimes \\mathbf{a} \\otimes \\mathbf{q} \\\\\\\\  &amp;=(w - \\mathbf{v}) \\otimes \\mathbf{a} \\otimes (w + \\mathbf{v}) \\\\\\\\  &amp;= ... \\\\\\\\  &amp;=w^2\\cdot \\mathbf{a} + 2w \\cdot \\mathbf{a} \\otimes \\mathbf{v} - \\mathbf{v} \\otimes \\mathbf{a} \\otimes \\mathbf{v} \\\\\\\\  &amp;= w^2\\cdot \\mathbf{a} + 2w \\cdot \\mathbf{a} \\times \\mathbf{v} + 2(\\mathbf{v}^T \\mathbf{a})\\mathbf{v} - (\\mathbf{v}^T \\mathbf{v})\\mathbf{a} \\\\\\\\ \\end{aligned} \\] \\[ \\begin{align}  \\frac{\\partial( \\mathbf{q1} \\otimes \\mathbf{a} \\otimes \\mathbf{q1\\ast} )} {\\partial \\mathbf{q}} &amp;=  \\frac{\\partial( \\mathbf{q\\ast} \\otimes \\mathbf{a} \\otimes \\mathbf{q} )} {\\partial \\mathbf{q}} \\\\\\\\  &amp;= 2[w\\mathbf{a} + \\mathbf{a}\\times \\mathbf{v} \\quad| \\quad    \\mathbf{v}^T\\mathbf{a}\\mathbf{I_3} + \\mathbf{v}\\mathbf{a}^T - \\mathbf{a}\\mathbf{v}^T + w[a]_{\\times}] \\in \\mathbf{R}^{3\\times 4}  \\end{align} \\] <ul> <li>example code:</li> </ul> <pre><code>Eigen::Matrix&lt;double, 3, 4&gt; JacobianOfInverseRotation2Quaternion(\n    const Eigen::Quaternion&amp; q, const Eigen::Vector3d&amp; a) {\n  Eigen::Matrix&lt;double, 3, 4&gt; result;\n  const double qw = q.w();\n  const Vec3d qv = q.vec();\n  result.block&lt;3, 1&gt;(0, 0) = 2.0 * (qw * a + a.cross(qv));\n  result.block&lt;3, 3&gt;(0, 1) =\n      2.0 * (qv.transpose() * a * Eigen::Matrix3d::Identity() + qv * a.transpose() -\n             a * qv.transpose() + qw * SkewSymmetricMatrix(a));\n\n  return result;\n}\n</code></pre>"},{"location":"m%26l/tf_rigid_motion/#jacobiangpt-","title":"\u5de6\u53f3Jacobian(gpt-\u9700\u8981\u9a8c\u8bc1)","text":""},{"location":"m%26l/tf_rigid_motion/#jacobian-","title":"\u5de6\u53f3Jacobian-\u57fa\u4e8e\u6b27\u62c9\u89d2","text":"<p>\u5bf9\u4e8e\u6b27\u62c9\u89d2\uff0c\u6211\u4eec\u4f7f\u7528 ZYX\uff08Yaw-Pitch-Roll\uff09\u987a\u5e8f\u7684\u6b27\u62c9\u89d2\u8868\u793a\u65cb\u8f6c\u3002\u7ed9\u5b9a\u6b27\u62c9\u89d2 \\((\\psi, \\theta, \\phi)\\)\uff0c\u5176\u4e2d \\(\\psi\\) \u662f\u504f\u822a\u89d2\uff08Yaw\uff09\uff0c\\(\\theta\\) \u662f\u4fef\u4ef0\u89d2\uff08Pitch\uff09\uff0c\\(\\phi\\) \u662f\u6eda\u52a8\u89d2\uff08Roll\uff09\uff0c\u5176\u5bf9\u5e94\u7684\u65cb\u8f6c\u77e9\u9635 \\(R\\) \u4e3a\uff1a</p> \\[ R = R_z(\\psi) \\cdot R_y(\\theta) \\cdot R_x(\\phi) \\] <p>\u5176\u4e2d \\(R_x(\\phi)\\)\u3001\\(R_y(\\theta)\\) \u548c \\(R_z(\\psi)\\) \u5206\u522b\u662f\u7ed5 X\u3001Y \u548c Z \u8f74\u7684\u65cb\u8f6c\u77e9\u9635\u3002</p> <ol> <li>\u7ed5 X \u8f74\u7684\u65cb\u8f6c\u77e9\u9635 \\(R_x(\\phi)\\):</li> </ol> \\[ R_x(\\phi) = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; \\cos(\\phi) &amp; -\\sin(\\phi) \\\\ 0 &amp; \\sin(\\phi) &amp; \\cos(\\phi) \\end{bmatrix} \\] <ol> <li>\u7ed5 Y \u8f74\u7684\u65cb\u8f6c\u77e9\u9635 \\(R_y(\\theta)\\):</li> </ol> \\[ R_y(\\theta) = \\begin{bmatrix} \\cos(\\theta) &amp; 0 &amp; \\sin(\\theta) \\\\ 0 &amp; 1 &amp; 0 \\\\ -\\sin(\\theta) &amp; 0 &amp; \\cos(\\theta) \\end{bmatrix} \\] <ol> <li>\u7ed5 Z \u8f74\u7684\u65cb\u8f6c\u77e9\u9635 \\(R_z(\\psi)\\):</li> </ol> \\[ R_z(\\psi) = \\begin{bmatrix} \\cos(\\psi) &amp; -\\sin(\\psi) &amp; 0 \\\\ \\sin(\\psi) &amp; \\cos(\\psi) &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>\u5c06\u8fd9\u4e09\u4e2a\u77e9\u9635\u76f8\u4e58\u5f97\u5230\u603b\u7684\u65cb\u8f6c\u77e9\u9635 \\(R\\)\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6b27\u62c9\u89d2\u7684\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635\u548c\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\u3002\u5bf9\u4e8e\u6b27\u62c9\u89d2\u7684\u5bfc\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u8fdb\u884c\u8ba1\u7b97\u3002</p> <ol> <li>\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635 \\(J_{\\text{left}}\\):</li> </ol> <p>$$    J_{\\text{left}} = \\frac{\\partial R}{\\partial \\psi} \\cdot \\frac{\\partial \\psi}{\\partial \\text{yaw}} + \\frac{\\partial R}{\\partial \\theta} \\cdot \\frac{\\partial \\theta}{\\partial \\text{pitch}} + \\frac{\\partial R}{\\partial \\phi} \\cdot \\frac{\\partial \\phi}{\\partial \\text{roll}}    $$</p> <p>\u5404\u4e2a\u5206\u91cf\u7684\u5bfc\u6570\u77e9\u9635\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5e94\u7684\u65cb\u8f6c\u77e9\u9635\u5173\u4e8e\u76f8\u5e94\u89d2\u5ea6\u7684\u5bfc\u6570\u8ba1\u7b97\u5f97\u5230\u3002</p> <ol> <li>\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635 \\(J_{\\text{right}}\\):</li> </ol> <p>$$    J_{\\text{right}} = \\frac{\\partial \\text{yaw}}{\\partial \\psi} \\cdot \\frac{\\partial R}{\\partial \\text{yaw}} + \\frac{\\partial \\text{pitch}}{\\partial \\theta} \\cdot \\frac{\\partial R}{\\partial \\text{pitch}} + \\frac{\\partial \\text{roll}}{\\partial \\phi} \\cdot \\frac{\\partial R}{\\partial \\text{roll}}    $$</p> <p>\u8fd9\u91cc\u662f\u6b27\u62c9\u89d2\u5bf9\u65cb\u8f6c\u77e9\u9635\u7684\u504f\u5bfc\u6570\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u8fd9\u6d89\u53ca\u5230\u4e00\u4e9b\u77e9\u9635\u548c\u89d2\u5ea6\u7684\u590d\u6742\u8ba1\u7b97\uff0c\u4e0a\u8ff0\u8868\u8fbe\u5f0f\u53ef\u80fd\u8f83\u4e3a\u5197\u957f\uff0c\u800c\u4e14\u6570\u5b66\u63a8\u5bfc\u4e5f\u8f83\u4e3a\u590d\u6742\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u7b26\u53f7\u8ba1\u7b97\u5e93\uff08\u5982 SymPy\uff09\u6765\u8fdb\u884c\u8fd9\u7c7b\u8ba1\u7b97\u66f4\u4e3a\u65b9\u4fbf\u3002 <pre><code>import numpy as np\n\ndef euler_to_rotation_matrix(yaw, pitch, roll):\n    # ZYX\u6b27\u62c9\u89d2\u987a\u5e8f\n    R_yaw = np.array([[np.cos(yaw), -np.sin(yaw), 0],\n                      [np.sin(yaw), np.cos(yaw), 0],\n                      [0, 0, 1]])\n\n    R_pitch = np.array([[np.cos(pitch), 0, np.sin(pitch)],\n                        [0, 1, 0],\n                        [-np.sin(pitch), 0, np.cos(pitch)]])\n\n    R_roll = np.array([[1, 0, 0],\n                       [0, np.cos(roll), -np.sin(roll)],\n                       [0, np.sin(roll), np.cos(roll)]])\n\n    # ZYX\u6b27\u62c9\u89d2\u5bf9\u5e94\u7684\u65cb\u8f6c\u77e9\u9635\n    R = R_yaw @ R_pitch @ R_roll\n    return R\n\ndef left_jacobian(yaw, pitch, roll):\n    # \u8ba1\u7b97\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635\n    R = euler_to_rotation_matrix(yaw, pitch, roll)\n    J_left = np.zeros((3, 3))\n\n    J_left[:, 0] = R @ np.array([0, 0, 1])\n    J_left[:, 1] = R @ np.array([0, 1, 0])\n    J_left[:, 2] = R @ np.array([1, 0, 0])\n\n    return J_left\n\ndef right_jacobian(yaw, pitch, roll):\n    # \u8ba1\u7b97\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\n    R = euler_to_rotation_matrix(yaw, pitch, roll)\n    J_right = np.zeros((3, 3))\n\n    J_right[0, :] = np.array([0, -np.sin(roll), np.cos(roll)]) @ R\n    J_right[1, :] = np.array([np.cos(roll), 0, -np.sin(roll)]) @ R\n    J_right[2, :] = np.array([-np.sin(pitch), np.cos(pitch), 0]) @ R\n\n    return J_right\n\n# \u793a\u4f8b\nyaw = np.pi/4\npitch = np.pi/6\nroll = np.pi/3\n\n# \u8ba1\u7b97\u5de6\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\nJ_left = left_jacobian(yaw, pitch, roll)\nJ_right = right_jacobian(yaw, pitch, roll)\n\nprint(\"\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635:\")\nprint(J_left)\nprint(\"\\n\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635:\")\nprint(J_right)\n</code></pre></p>"},{"location":"m%26l/tf_rigid_motion/#jacobian-quaternion","title":"\u5de6\u53f3Jacobian-\u57fa\u4e8equaternion","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6d89\u53ca\u5230\u4e86\u56db\u5143\u6570\u5230\u65cb\u8f6c\u77e9\u9635\u7684\u8f6c\u6362\u4ee5\u53ca\u56db\u5143\u6570\u5de6\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u76f8\u5173\u7684\u516c\u5f0f\uff1a</p> <ol> <li>\u56db\u5143\u6570\u5230\u65cb\u8f6c\u77e9\u9635\u7684\u8f6c\u6362\u516c\u5f0f\uff1a</li> </ol> <p>\u7ed9\u5b9a\u56db\u5143\u6570 \\(q = [w, x, y, z]\\)\uff0c\u5176\u5bf9\u5e94\u7684\u65cb\u8f6c\u77e9\u9635 \\(R\\) \u4e3a\uff1a</p> \\[    R = \\begin{bmatrix}    1 - 2y^2 - 2z^2 &amp; 2xy - 2wz &amp; 2xz + 2wy \\\\\\\\    2xy + 2wz &amp; 1 - 2x^2 - 2z^2 &amp; 2yz - 2wx \\\\\\\\    2xz - 2wy &amp; 2yz + 2wx &amp; 1 - 2x^2 - 2y^2    \\end{bmatrix} \\] <p>\u8fd9\u662f\u56db\u5143\u6570\u5230\u65cb\u8f6c\u77e9\u9635\u7684\u5e38\u89c1\u8f6c\u6362\u516c\u5f0f\u3002</p> <ol> <li>\u56db\u5143\u6570\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</li> </ol> <p>\u7ed9\u5b9a\u56db\u5143\u6570 \\(q = [w, x, y, z]\\)\uff0c\u5176\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635 \\(J_{\\text{left}}\\) \u4e3a\uff1a</p> <p>$$    J_{\\text{left}} = \\begin{bmatrix}    2x &amp; 2y &amp; 2z &amp; 0 \\\\    -w &amp; -z &amp; y &amp; 0 \\\\    z &amp; -w &amp; -x &amp; 0    \\end{bmatrix} $$</p> <ol> <li>\u56db\u5143\u6570\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</li> </ol> <p>\u7ed9\u5b9a\u56db\u5143\u6570 \\(q = [w, x, y, z]\\)\uff0c\u5176\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635 \\(J_{\\text{right}}\\) \u4e3a\uff1a</p> \\[    J_{\\text{right}} = \\begin{bmatrix}    w &amp; -z &amp; y &amp; 0 \\\\\\\\    z &amp; w &amp; -x &amp; 0 \\\\\\\\    -y &amp; x &amp; w &amp; 0    \\end{bmatrix} \\] <p>\u8fd9\u4e9b\u516c\u5f0f\u662f\u901a\u8fc7\u5bf9\u56db\u5143\u6570\u5230\u65cb\u8f6c\u77e9\u9635\u7684\u8f6c\u6362\u4ee5\u53ca\u65cb\u8f6c\u77e9\u9635\u5bf9\u56db\u5143\u6570\u7684\u5bfc\u6570\u8fdb\u884c\u63a8\u5bfc\u5f97\u5230\u7684\u3002\u8fd9\u91cc \\(w\\) \u8868\u793a\u56db\u5143\u6570\u7684\u6807\u91cf\u90e8\u5206\uff0c\\(x, y, z\\) \u8868\u793a\u56db\u5143\u6570\u7684\u5411\u91cf\u90e8\u5206\u3002 <pre><code>import numpy as np\n\ndef quaternion_to_rotation_matrix(q):\n    \"\"\"\n    \u5c06\u56db\u5143\u6570\u8f6c\u6362\u4e3a\u65cb\u8f6c\u77e9\u9635\n    \"\"\"\n    w, x, y, z = q\n    R = np.array([\n        [1 - 2*y**2 - 2*z**2, 2*x*y - 2*w*z, 2*x*z + 2*w*y],\n        [2*x*y + 2*w*z, 1 - 2*x**2 - 2*z**2, 2*y*z - 2*w*x],\n        [2*x*z - 2*w*y, 2*y*z + 2*w*x, 1 - 2*x**2 - 2*y**2]\n    ])\n    return R\n\ndef left_jacobian_quaternion(q):\n    \"\"\"\n    \u8ba1\u7b97\u56db\u5143\u6570\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635\n    \"\"\"\n    w, x, y, z = q\n    J_left = np.zeros((3, 4))\n\n    J_left[:, 0] = 2 * np.array([x, y, z])\n    J_left[:, 1] = 2 * np.array([-w, -z, y])\n    J_left[:, 2] = 2 * np.array([z, -w, -x])\n    J_left[:, 3] = 2 * np.array([-y, x, -w])\n\n    return J_left\n\ndef right_jacobian_quaternion(q):\n    \"\"\"\n    \u8ba1\u7b97\u56db\u5143\u6570\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\n    \"\"\"\n    w, x, y, z = q\n    J_right = np.zeros((3, 4))\n\n    J_right[0, :] = np.array([w, -z, y])\n    J_right[1, :] = np.array([z, w, -x])\n    J_right[2, :] = np.array([-y, x, w])\n\n    return J_right\n\n# \u793a\u4f8b\nquaternion = np.array([np.cos(np.pi/8), 0, np.sin(np.pi/8), 0])\n\n# \u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635\nR = quaternion_to_rotation_matrix(quaternion)\n\n# \u8ba1\u7b97\u5de6\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635\nJ_left = left_jacobian_quaternion(quaternion)\nJ_right = right_jacobian_quaternion(quaternion)\n\nprint(\"\u65cb\u8f6c\u77e9\u9635:\")\nprint(R)\nprint(\"\\n\u5de6\u96c5\u53ef\u6bd4\u77e9\u9635:\")\nprint(J_left)\nprint(\"\\n\u53f3\u96c5\u53ef\u6bd4\u77e9\u9635:\")\nprint(J_right)\n</code></pre></p>"},{"location":"m%26l/tf_rigid_motion/#reference","title":"Reference","text":"<ul> <li> <p>JoanSola 11.08.2017(Cornell University.)</p> </li> <li> <p>JoanSola 12.12.2017, I am Reading(Institute robotic info.)</p> </li> </ul>"},{"location":"m%26l/segmentation/cloud-segmentation-hdmap/","title":"\u70b9\u4e91\u5206\u5272\u5b9e\u4f8b","text":"<p>\u57fa\u672c\u6d41\u7a0b\uff1a</p> <ol> <li>\u5206\u5272\u5730\u9762\u70b9\u548c\u975e\u5730\u9762\u70b9</li> <li>\u57fa\u4e8e\u975e\u5730\u9762\u70b9\u8fdb\u884c\u70b9\u4e91\u5206\u5272</li> <li>\u5b9e\u65f6\u52a0\u8f7dhdmap\u5c06\u4f4d\u4e8e\u9053\u8def\u4e0a\u7684\u5206\u5272\u7ed3\u679c\u8fdb\u53bb\u6ee4\u51fa(\u4ea6\u53ef\u901a\u8fc7tracking\u5c06\u52a8\u6001\u969c\u788d\u7269\u6ee4\u9664)</li> </ol>"},{"location":"m%26l/segmentation/cloud-segmentation-hdmap/#_2","title":"\u6574\u4f53\u6982\u89c8","text":"<ol> <li>\u5de6\u4e0b\u89d2\u4e3a\u539f\u59cb\u70b9\u4e91\u6570\u636e</li> <li>\u53f3\u4e0b\u89d2\u4e3a\u68c0\u6d4b\u7684\u5730\u9762\u70b9\u4e91</li> <li>\u5de6\u4e0a\u89d2\u4e3a\u5206\u5272\u7684\u7ed3\u679c(\u5df2\u6839\u636ehdmap\u6ee4\u51fa\u4f4d\u4e8e\u9053\u8def\u4e0a\u7684\u52a8\u6001\u969c\u788d\u7269)</li> <li>\u53f3\u4e0a\u89d2\u4e3a\u6ee4\u51fa\u52a8\u6001\u969c\u788d\u7269\u540e\u70b9\u4e91 </li> </ol>"},{"location":"m%26l/segmentation/cloud-segmentation-hdmap/#_3","title":"\u5730\u9762\u7684\u5206\u5272","text":"<p>\u91c7\u7528\u6781\u5750\u6807\u6295\u5f71\u7f51\u683c\u548c\u5e73\u9762\u62df\u5408\u7684\u65b9\u6cd5  </p>"},{"location":"m%26l/segmentation/cloud-segmentation-hdmap/#_4","title":"\u70b9\u4e91\u805a\u7c7b","text":"<p>\u91c7\u7528\u7f51\u683c\u6295\u5f71-&gt;\u81a8\u80c0-&gt;\u8fde\u901a\u5206\u6790-&gt;\u6536\u7f29  </p>"},{"location":"m%26l/slam_opensource/slam_basic/","title":"Slam basic","text":""},{"location":"m%26l/slam_opensource/slam_basic/#_1","title":"\u4e09\u7ef4\u521a\u4f53\u8fd0\u52a8","text":"<p><code>\u56db\u5143\u6570\u7684\u5171\u8f6dconjugate \u5373\u4e3a\u5176\u81ea\u8eab\u7684\u9006</code></p> \\[ T = \\begin{bmatrix}   R &amp; t \\\\\\\\   0^T &amp; 1   \\end{bmatrix}  \\quad R^T = R^{-1} \\quad \\rightarrow \\quad T^{-1} =     \\begin{bmatrix}           R^T &amp; -R^Tt \\\\\\\\           0^T &amp; 1     \\end{bmatrix} \\]"},{"location":"m%26l/slam_opensource/slam_basic/#_2","title":"\u53cd\u5bf9\u79f0\u77e9\u9635","text":"\\[   \\begin{aligned}   \\mathbf{\\overrightarrow{a}}\\times\\mathbf{\\overrightarrow{b}} &amp;=       \\begin{bmatrix}      \\mathbf{i} &amp; \\mathbf{j}&amp; \\mathbf{k}\\\\\\\\      a_1      &amp; a_2     &amp;a_3\\\\\\\\      b_1      &amp; b_2     &amp;b_3      \\end{bmatrix} \\\\\\\\       &amp;=\\begin{bmatrix}          a_2b_3 - a_3b_2 \\\\\\\\          a_3b_1 - a_1b_3 \\\\\\\\          a_1b_2 - a_2b_1      \\end{bmatrix}\\\\\\\\      &amp;=      \\begin{bmatrix}             0 &amp; -a_3 &amp; a_2  \\\\\\\\              a_3 &amp; 0 &amp; -a_1 \\\\\\\\      -a_2 &amp; a_1 &amp; 0             \\end{bmatrix} \\cdot b  \\\\\\\\ &amp;=\\hat{\\mathbf{a}} \\cdot \\mathbf{b},\\quad \\hat{\\mathbf{a}}\\text{\u5373\u4e3aa\u7684\u53cd\u5bf9\u79f0\u77e9\u9635}   \\end{aligned}   \\]"},{"location":"m%26l/slam_opensource/slam_basic/#camera","title":"Camera","text":"<ul> <li>\u50cf\u7d20\u5750\u6807<code>(u, v)</code>\u548c\u76f8\u673a\u5750\u6807<code>(X, Y, Z)</code>\u7684\u8f6c\u6362\u63a8\u5bfc,\\(P_{wrold} = T(\u76f8\u673a\u5916\u53c2) \\cdot P_{camera}\\)</li> </ul> \\[   \\begin{bmatrix}       u \\\\\\\\       v \\\\\\\\       1   \\end{bmatrix} = \\dfrac{1}{Z}   \\begin{bmatrix}       f_x &amp; 0 &amp; cx \\\\\\\\       0 &amp; f_y &amp; cy \\\\\\\\       0 &amp; 0 &amp; 1   \\end{bmatrix}   \\begin{bmatrix}       X \\\\\\\\ Y \\\\\\\\ 1   \\end{bmatrix} = \\dfrac{1}{Z} \\cdot K\\cdot T \\cdot P_c    = \\dfrac{1}{Z} \\cdot K \\cdot  P_w  \\] \\[ \\begin{gather} K\u4e3a\u76f8\u673a\u5185\u53c2\u77e9\u9635\uff0c T\u4e3a\u8def\u6807\u70b9P_w\u5bf9\u5e94\u7684\u5916\u53c2 \\\\\\\\  \\rightarrow (\u7528\u4e8e\u5148\u5c06\u8def\u6807\u70b9\u7531\u4e16\u754c\u7cfb\u8f6c\u5230\u76f8\u673a\u7cfb,\u5373P_c = RP_w +t),\\\\\\\\ \\rightarrow \u5f52\u4e00\u5316\u76f8\u673a\u5750\u6807: P_c = (\\dfrac{X}{Z}, \\dfrac{Y}{Z},1), \u50cf\u7d20\u5750\u6807:P_{uv} = KP_c  \\end{gather} \\] \\[ \\begin{gather} \\begin{cases}    u = \\alpha X^\\prime +cx \\\\\\\\    v = \\beta Y^\\prime + cy \\quad cx\u548ccy\u7684\u57fa\u672c\u5355\u4f4d:pixel \\end{cases}  \\\\\\\\  \\rightarrow \\begin{cases}   u = \\alpha \\cdot f \\cdot \\dfrac{X}{Z} + cx \\\\\\\\   v = \\beta \\cdot f \\cdot \\dfrac{Y}{Z} + cy \\quad \\alpha\u548c\\beta\u7684\u57fa\u672c\u5355\u4f4d:pixels/m \\end{cases}  \\\\\\\\  \\rightarrow \\begin{cases}   u = f_x \\cdot \\dfrac{X}{Z} +cx \\\\\\\\   v = f_y \\cdot \\dfrac{Y}{Z} +cy \\end{cases} \\end{gather} \\] <ul> <li>\u53cc\u76ee</li> </ul> \\[   Z = \\dfrac{fb}{d} \\qquad \u89c6\u5deed\u8d8a\u5c0f \\to Z\u8d8a\u5927,\u5373\u6d4b\u8ddd\u8d8a\u8fdc\uff0c\u540c\u7406\u57fa\u7ebfb\u8d8a\u5927\u4e5f\u662f\u5982\u6b64 \\]"},{"location":"m%26l/slam_opensource/slam_basic/#_3","title":"\u89c6\u89c9\u91cc\u7a0b\u8ba1","text":"<ul> <li>2D-2D\u5bf9\u6781\u51e0\u4f55(\u8ba1\u7b97\u6c42\u89e3: \u65cb\u8f6cR \u548c \u5e73\u79fbt) </li> </ul> \\[ \\begin{gather}     x^T_2 \\hat{t} R x_1 = 0 \\quad x_2\u548cx_1\u4e3a\u76f8\u673a\u5f52\u4e00\u5316\u5750\u6807 \\\\\\\\     \u672c\u8d28\u77e9\u9635 \\quad E =\\hat{t} R  \\\\\\\\     P^T_2 K^{-T} \\hat{t} R K^{-1} P_1 = 0 \\quad \u57fa\u7840\u77e9\u9635 F = K^{-T} \\hat{t} R K^{-1}   \\end{gather} \\] \\[   \u672c\u8d28\u77e9\u9635E\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0b\u7b49\u4ef7,\u56e0\u6b64\u4e0e\u5c3a\u5ea6\u65e0\u5173\u3002 \u7279\u5f81\u70b9\u5171\u9762\u6216\u76f8\u673a\u7eaf\u65cb\u8f6c\u65f6E\u7684\u81ea\u7531\u5ea6\u4e0b\u964d,\u5373\u9000\u5316,\u56e0\u6b64\u4e00\u822c\u540c\u65f6\u4f30\u8ba1\u57fa\u7840\u77e9\u9635$F$\u548c\u5355\u5e94\u6027\u77e9\u9635H,\u9009\u53d6\u91cd\u6295\u5f71\u8bef\u5dee\u6bd4\u8f83\u5c0f\u7684\u4f5c\u4e3a\u6700\u7ec8\u7684\u8fd0\u52a8\u4f30\u8ba1\u77e9\u9635\u3002 \\] <p>\u5355\u76eeslam\u521d\u59cb\u5316[\u65cb\u8f6c+\u5e73\u79fb]: \u76842\u4e2aimage<code>must</code>\u6709\u4e00\u5b9a\u7684\u5e73\u79fb\u91cf,\u800c\u540e\u7684\u8f68\u8ff9\u548c\u5730\u56fe\u90fd\u4ee5\u6b64\u4e3a\u5355\u4f4d</p> <ul> <li>\u4e09\u89d2\u5316\u6d4b\u91cf(\u8ba1\u7b97\u6c42\u89e3: \u8def\u6807\u70b9\u5373\u5730\u56fe\u70b9\u7684\u7a7a\u95f4\u4f4d\u7f6e)</li> </ul> <p>$$   s_1 x_1  = s_2 R x_2 + t   $$</p>"},{"location":"m%26l/slam_opensource/slam_basic/#_4","title":"\u975e\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58","text":""},{"location":"m%26l/slam_opensource/slam_basic/#_5","title":"\u72b6\u6001\u4f30\u8ba1","text":"<p>\u673a\u5668\u4eba\u72b6\u6001\u4f30\u8ba1\u4e2d\u5df2\u77e5\u8f93\u5165\u6570\u636e \\(\\mathcal{u}\\) \u548c\u89c2\u6d4b\u6570\u636e \\(\\mathcal{x}\\) \u7684\u6761\u4ef6\u4e0b, \u672a\u77e5\u72b6\u6001 \\(x\\) \u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u4e3a: \\(P(x|z,u)\\), \u5f53\u6ca1\u6709\u6d4b\u91cf\u8fd0\u52a8\u7684\u4f20\u611f\u5668\u65f6\u76f8\u5f53\u4e8e\u4f30\u8ba1\\(P(x|z)\\) \u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03(\u82e5\u5ffd\u7565\u65f6\u5e8f\u5173\u7cfb\u5219\u53ef\u7406\u89e3\u4e3a\u4e00\u4e2aSFM\u95ee\u9898)</p> <p>\u6c42\u6700\u5927\u540e\u9a8c \\(\\simeq\\) \u6c42\u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \\(\\to\\) \u6700\u5c0f\u5316\u8d1f\u5bf9\u6570(\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898)</p> <ul> <li>\u5229\u7528\u8d1d\u53f6\u65af\u6cd5\u5219</li> </ul> \\[ P(x|z) = \\dfrac{P(z|x)P(x)}{P(z)}  \\propto P(z|x)P(x) \\] \\[ \u540e\u9a8cP(x|z) * \u5e38\u6570(evidence)P(z)= \u4f3c\u7136(likelihood)P(z|x) * \u5148\u9a8cP(x) \\] <ul> <li>\u6700\u5927\u5316\u540e\u9a8c\u6982\u7387(Maximize a Posterior,MAP): </li> </ul> \\[ x^*_{MAP} = argmax P(x|z) = argmax P(z|x)P(x) \\] <ul> <li>\u4e00\u822c\u8fd8\u4e0d\u77e5\u9053\u673a\u5668\u4eba\u5927\u6982\u7684\u4f4d\u7f6e\uff0c\u6b64\u65f6\u6ca1\u6709\u4e86\u5148\u9a8c   \u6240\u4ee5\u6c42\u6700\u5927\u5316\u540e\u9a8c\u6982\u7387\u76f8\u5f53\u4e8e\u6c42 \\(x\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1(Maximize Likelihood Estimation,MLE) <code>\u4f3c\u7136:\u5728\u73b0\u5728\u7684\u59ff\u6001\u4e0b\uff0c\u53ef\u80fd\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u89c2\u6d4b\u6570\u636e</code> <code>\u6700\u5927\u4f3c\u7136\u4f30\u8ba1:\u4ec0\u4e48\u6837\u7684\u72b6\u6001\u4e0b\uff0c\u6700\u53ef\u80fd\u4ea7\u751f\u5f53\u524d\u7684\u89c2\u6d4b\u6570\u636e</code>----&gt;\u7b49\u540c\u4e8e\u6c42\u6700\u5927\u540e\u9a8c</li> </ul> \\[ x^*_{MLE} = argmax P(z|x)   \\] <ul> <li>\u5bf9\u4e8e\u89c2\u6d4b\u6a21\u578b \\(z_{k,j} = h(y_j, x_k) + v_{k,j}\\), \u4f3c\u7136 \\(P(z|x) = N(h(y_j, x_k),Q_{k,j})\\)\u670d\u4ece\u9ad8\u65af\u5206\u5e03,</li> <li>\u4e3a\u6700\u5927\u5316\u4f3c \\(x_k, y_j\\), \u7136\u901a\u5e38\u4f7f\u7528\u6700\u5c0f\u5316\u8d1f\u5bf9\u6570\u6765\u6c42\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u6700\u5927\u4f3c\u7136     \u4e00\u822c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u7684\u9ad8\u65af\u5206\u5e03 \\(x \\sim N(\\mu, \\Sigma)\\), \u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(P(x) = \\dfrac{1}{\\sqrt{(2\\pi)^N det(\\Sigma)}}exp\\left(-\\dfrac{1}{2}(x - \\mu)^T \\Sigma^{-1} (x - \\mu)\\right)\\)     \u53d6\u5176\u8d1f\u5bf9\u6570\u4e3a: \\(-ln(P(x)) = \\dfrac{1}{2}ln\\left((2\\pi)^N det(\\Sigma)\\right) + \\dfrac{1}{2}(x - \\mu)^T \\Sigma^{-1} (x - \\mu)\\)</li> <li>\u8d1f\u5bf9\u6570\u5f0f\u7684\u7b2c\u4e00\u9879\u4e0e \\(x\\) \u65e0\u5173\uff0c\u76f4\u63a5\u7565\u53bb, \u5219\u6c42\u72b6\u6001\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u2192\u6700\u5c0f\u5316\u53f3\u4fa7\u7684\u4e8c\u6b21\u578b\u9879\uff0c\u4ee3\u5165SLAM\u89c2\u6d4b\u6a21\u578b\uff0c\u7b49\u540c\u4e8e\u6c42     \\(x^* = argmin \\left((z_{k,j} - h(x_k, y_i))^T Q^{-1}_{k,j} (z_{k,j} - h(x_k, y_i)) \\right)\\)      \u7b49\u4ef7\u4e8e\u6c42\u566a\u58f0\u9879(\u5373\u8bef\u5dee)\u7684\u6700\u5c0f\u4e8c\u4e58</li> </ul>"},{"location":"m%26l/slam_opensource/slam_basic/#_6","title":"\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898","text":"\\[ \\min\\limits_{x}\\dfrac{1}{2}|f(x)|^2 \\] <p>\u672a\u77e5\u81ea\u53d8\u91cf\\(x \\in \\mathbb{R}^n\\),\\(f\\)\u4e3a\u4e00\u4e2a\u4efb\u610f\u7684\u975e\u7ebf\u6027\u51fd\u6570,\u5047\u8bbe\u4e3a\\(m\\)\u7ef4:\\(f(x) \\in \\mathbb{R}^m\\)\u3002</p> <ul> <li>\u89e3\u6790\u5f62\u5f0f\u6c42\u89e3: \u4ee4\u76ee\u6807\u51fd\u6570\u5bfc\u6570\u4e3a\u96f6 \\(\\dfrac{df}{d \\mathbf{x}}=\\mathbf{0}\\),\u7136\u540e\u6c42\u89e3\\(\\mathbf{x}\\)\u7684\u6700\u4f18\u89e3</li> <li>\u4f18\u5316\u6c42\u89e3:SLAM\u4e2d\u7684\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u5bfc\u6570\u5f62\u5f0f\u6bd4\u8f83\u590d\u6742\uff0c\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u5f0f\u4ece\u4e00\u4e2a\u521d\u59cb\u503c\u51fa\u53d1\uff0c\u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3\u66f4\u65b0\u5f53\u524d\u7684\u4f18\u5316\u53d8\u91cf\u4f7f\u76ee\u6807\u51fd\u6570\u4e0b\u964d</li> <li>\u7ed9\u5b9a\u67d0\u4e2a\u521d\u59cb\u503c\\(\\mathbf{x}_0\\)</li> <li>\u5bf9\u4e8e\u7b2c\\(\\mathcal{k}\\)\u6b21\u8fed\u4ee3\uff0c\u5bfb\u627e\u4e00\u4e2a\u589e\u91cf\\(\\Delta x_k\\)\uff0c\u4f7f\u5f97\\(|f(x_k + \\Delta x_k)|^2\\)\u8fbe\u5230\u6781\u5c0f\u503c</li> <li>\u82e5\\(\\Delta x_k\\)\u8db3\u591f\u5c0f\uff0c\u5219\u505c\u6b62\u8fed\u4ee3</li> <li>\u5426\u5219\uff0c\u4ee4\\(x_{k+1} = x_k + \\Delta x_k\\)</li> <li>\u4e00\u9636\u548c\u4e8c\u9636\u68af\u5ea6\u6cd5   \u5c06\u76ee\u6807\u51fd\u6570\u5728 \\(x_k\\) \u9644\u8fd1\u6cf0\u52d2\u5c55\u5f00</li> </ul> <p>$$   f(x + \\Delta)^2 = f(x)^2 + J(x)\\Delta x + \\dfrac{1}{2} \\Delta x^T \\mathbin{H} \\Delta x   $$</p> <p>\\(J\\) \u4e3a \\(f(x)^2\\) \u5173\u4e8e \\(x\\) \u7684\u5bfc\u6570(Jacobian\u77e9\u9635)\uff0c\u800c \\(H\\) \u4e3a\u4e8c\u9636\u5bfc\u6570(Hessian\u77e9\u9635)\uff0c\u4fdd\u7559\u6cf0\u52d2\u5c55\u5f00\u7684\u4e00\u9636\u6216\u4e8c\u9636\u9879\u5bf9\u5e94\u7684\u6c42\u89e3\u65b9\u6cd5\u5219\u4e3a\u4e00\u9636\u68af\u5ea6\u6216\u4e8c\u9636\u68af\u5ea6</p> <ul> <li> <p>\u4fdd\u7559\u4e00\u9636\u68af\u5ea6\uff0c\u589e\u91cf\u65b9\u7a0b\u4e3a</p> \\[ \\Delta x^* = -J(x) \\] <p>\u76f4\u89c2\u610f\u4e49\u7b80\u5355\uff0c\u6cbf\u53cd\u5411\u68af\u5ea6\u65b9\u5411\u524d\u8fdb\u5373\u53ef\uff0c\u901a\u5e38\u4f1a\u8ba1\u7b97\u8be5\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u6b65\u957f \\(\\lambda\\), \u4ee5\u83b7\u5f97\u6700\u5feb\u4e0b\u964d\u7684\u65b9\u5f0f---&gt;\u6700\u901f\u4e0b\u964d\u6cd5(\u8fc7\u4e8e\u8d2a\u5fc3,\u5bb9\u6613\u8d70\u952f\u9f7f\u8def\u7ebf\uff0c\u589e\u52a0\u8fed\u4ee3\u6b21\u6570)</p> </li> <li> <p>\u4fdd\u7559\u4e8c\u9636\u68af\u5ea6\uff0c\u589e\u91cf\u65b9\u7a0b\u4e3a</p> \\[ \\Delta x^* = argminf(x)^2 +J(x) \\Delta x + \\dfrac{1}{2} \\Delta x^T \\mathbin{H} \\Delta x \\] <p>\u8be5\u7b49\u5f0f\u4ee4\u5173\u4e8e \\(\\Delta x\\) \u7684\u5bfc\u6570\u4e3a\u96f6\uff0c\u5f97\u589e\u91cf\u65b9\u7a0b\u4e3a: $H \\Delta x = -J  $  \u725b\u987f\u6cd5(\u9700\u8ba1\u7b97\\(H\\)\u77e9\u9635\uff0c\u4e00\u822c\u6bd4\u8f83\u56f0\u96be)</p> </li> <li> <p>Gauss-Newton(\u6700\u4f18\u5316\u7b97\u6cd5\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u4e4b\u4e00, \u5c06\\(f(x)\\)\u8fdb\u884c\u4e00\u9636\u6cf0\u52d2\u5c55\u5f00\uff0c\u800c\u975e\u76ee\u6807\u51fd\u6570\\(f(x)^2\\))</p> \\[ f(x + \\Delta x) \\approx f(x) + J(x)\\Delta x \\] <p>\u8be5\u5f0f\\(J(x)\\)\u4e3a\\(f(x)\\)\u5173\u4e8e\\(x\\)\u7684\u5bfc\u6570\uff0c\u5f97\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u4e3a:</p> \\[ \\Delta x^*_k = arg\\min\\limits_{\\Delta x}\\dfrac{1}{2} |f(x) + J(x)\\Delta x|^2 \\] <p>\u5c06\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\\(|f(x) + J(x)\\Delta x|^2\\)\u5bf9\\(\\Delta x\\)\u6c42\u5bfc\u5e76\u4ee4\u5bfc\u6570\u4e3a\u96f6\u5f97\u589e\u91cf\u65b9\u7a0b(\u9ad8\u65af\u725b\u987f\u65b9\u7a0bGaussNewtonEquations\u6216\u6b63\u89c4\u65b9\u7a0bNormalEquations)</p> \\[ J(x)^T J(x) \\Delta x = -J(x)f(x) \\sim H \\Delta x =g \\] <p>Gauss-Newton\u5c06\\(J^T J\\)\u4f5c\u4e3a\u725b\u987f\u6cd5\u4e2d\u4e8c\u9636\\(Hessian\\)\u77e9\u9635\u7684\u8fd1\u4f3c\uff0c\u6c42\u89e3\u589e\u91cf\u65b9\u7a0b\u662f\u6574\u4e2a\u4f18\u5316\u95ee\u9898\u7684\u6838\u5fc3</p> </li> <li> <p>Gauss-Newton\u7b97\u6cd5\u6b65\u9aa4</p> <ol> <li>\u7ed9\u5b9a\u67d0\u4e2a\u521d\u59cb\u503c\\(x_0\\)</li> <li>\u5bf9\u4e8e\u7b2c\\(\\mathcal{k}\\)\u6b21\u8fed\u4ee3\uff0c\u6c42\u51fa\u5f53\u524d\u7684Jacobian\u77e9\u9635\\(J(x_k)\\)\u548c\u8bef\u5dee\\(f(x_k)\\)</li> <li>\u6c42\u89e3\u589e\u91cf\u65b9\u7a0b:\\(H \\Delta x =g\\)</li> <li>\u82e5\\(\\Delta x_k\\)\u8db3\u591f\u5c0f\uff0c\u5219\u505c\u6b62\u3002\u5426\u5219\uff0c\u4ee4\\(x_{k+1} = x_k + \\Delta x_k\\),\u7136\u540e\u8fd4\u56de\u6b65\u9aa42</li> </ol> </li> </ul>"},{"location":"m%26l/slam_opensource/slam_loam_series/","title":"Loam series","text":"<p>this blog concludes the reading of the paper of loam. from loam(Ji Zhang),LeGO-LOAM&amp;LIO-SAM(Tixiao Shan) State estimation, localization and mapping are fundamental prerequisites for a successful intelligent mobile robot,required for feedback control, obstacle avoidance, and planning, among many other capabilities.Using vision-based and lidar-based sensing,great efforts have been devoted to achiving high-performance real-time simultaneous localization and mapping(SLAM) that can support a mobile robot's six degree-of-freedom state estimation.</p> <p>Vision-based methods typically use a monocular or stereo camera and triangulate features across successive images to determine the camera motion.Although vision-based methods are especially suitable for palce recognition,their sensitivity to initialization,illumination and range make them unreliable when they alone are used to supportan autonomous navigation system. On the other hand, lidar-based methods are largely invariant to illumination change,Especially with the availability of long-range,high-resolution 3D liar,becomes more suitable to directly capture the fine details of an environment in 3D space.Therefor there was researchs among loam,lego-loam and lio-sam, those paper focuses on lidar-based state estimation and mappnig methods.</p> method strenght weakness vision-based - more suitable for place recognition- better in loop-closure detection - sensitive to illumination- view point change may make it unreliable lidar-based - work normally at night- captrure more details about environment at long ranges- bigger angle-view a"},{"location":"m%26l/slam_opensource/slam_loam_series/#descriptions","title":"Descriptions","text":"method strength weakness IMU loam -- low-drift and real-time-- correct the motion distortion of pointcloud-- feature-based scan matching: edge with edge and planar with planar to ensure fast computation becase of its less computational resources requirement-- good strategy: coarse processing  at high frequency to estimate veocity, fine processing at low frequency to create map -- saving data in a global voxel map,online optimization process will less efficient when the global voxel map becomes dense in a feature-rich areas-- difficult to perform loop closure detection and incorporate other absolute measurements,e.g GPS for pose correction-- loam suffers from drift in large-scale test, as it is a scan-matching based method at its core-- not very universal to different lidars:the method of extracting features are integrated with the rotating lidar tightly -- de-skew the lidar scan,that is motion compensator-- provide a motion prior for scan-matching-- loosely-coupled:IMU is not involved in the optimization process of the algorithm lego-loam -- lightweight and ground-optimized lidar odom-- two step L-M optimization computes pose transformation separately-- add loop closure same as loam lio-sam -- a tightly-coupled lidar inertial odometry framework built atop a factor graph,which is suitable for multi-sensor fusion and global optimization-- an efficient,local sliding window-based scan-matching approach that enables real-time performance by registering selectively chosen new keyframes to a fixed-size set of prior sub-keyframes"},{"location":"m%26l/slam_opensource/slam_loam_series/#lidar-motion-compensator","title":"lidar motion compensator","text":"<p>A scan's point cloud is often skewed because of the rotation mechanism of modern 3D lidar and sensor motion.Solely using lidar for pose estimation is not ideal since registration using skewed pointclouds or features will eventually cause large drift. Therefore, lidar is typically  used in conjunction with other sensors, such as GPS and IMU, for state estimation and mapping.</p>"},{"location":"m%26l/slam_opensource/slam_loam_series/#loam","title":"LOAM","text":""},{"location":"m%26l/slam_opensource/slam_loam_series/#assume","title":"Assume","text":"<ul> <li>lidar is pre-calibrated</li> <li>angular and linear velocities of the lidar are smooth and continuous over time without abrupt changes</li> </ul>"},{"location":"m%26l/slam_opensource/slam_loam_series/#feature-point-extraction","title":"Feature Point Extraction","text":"<p>we select feature point that are on sharp edges and planar surface patches, Let \\(i\\) be a point in \\(P_k\\), and let \\(S\\) be the set of consecutive points of \\(i\\) returned by the laser scanner in the same scan.</p> <ul> <li>Calculate the smoothness \\(c\\) of the local surface at point i, where \\(i \\in P_k\\)</li> </ul> \\[    c = \\frac{1}{|S|\\cdot\\|X^L_{(k,i)}\\|}\\cdot\\|\\sum_{j\\in S,j\\neq i}(X^L_{(k,i)} - X^L_{(k,j)})\\|\\tag{1} \\] <ul> <li>The points in a scan are sorted based on the \\(c\\) values.    To evenly distribute the feature points within the environment,we separate a scan to four identical subregions.Each subregion can provide maximally 2 edge points and 4 planar points</li> </ul> \\[    bool(c)=     \\begin{cases}    c &gt; threshold, &amp;  \\text{dege points} \\\\\\\\    c &lt; threshold, &amp;  \\text{planar points}     \\end{cases} \\] <ul> <li>we try to avoid points whose surrounded points are selected,or points on local planar surfaces that are roughly parallel to the laser beams are usually considered as unreliable.</li> <li>we also try to avoid points that are on boundary of occluded regions</li> </ul> <p>Conclusion feature points are selected as edge points starting from the maximum \\(c\\) value, and planarpoints starting from the minimum \\(c\\) value, and if a point is selected, - The number of selected edge points or planar points cannot exceed the maximum of thesubregion - None of its surrounding point is already selected - It cannot be on a surface patch that is roughly parallel to the laser beam, or on boundaryof an occluded region.</p>"},{"location":"m%26l/slam_opensource/slam_loam_series/#find-target-feature-point","title":"Find Target Feature Point","text":"<p>The odometry algorithm estimates motion of the lidar within a sweep(frame),Let \\(t_k\\) be  the starting  time of a sweep \\(k\\). At the end of each sweep, the point cloud perceived during the sweep,\\(P_k\\), is reprojected to time stamp \\(t_{k+1}\\). we denote the reprojected sweep(frame) as \\(\\bar{P_{k}}\\). During the next sweep \\(k+1\\), \\(\\bar{P_{k}}\\) is used together with the newly received point cloud \\(P_{k+1}\\), to estimate the motion of the lidar.</p> raw frame corrected frame edge pts planar pts \\(P_k\\)during [\\(t_k,t_{k+1}\\)] \\(\\bar{P}\\_k\\)by reprojected \\(P_k\\)to timesatmp \\(t_{k+1}\\) \\(\\mathcal{E}_k\\)edge pts from\\(\\bar{P}_k\\) \\(\\mathcal{H}_k\\)planar pts from\\(\\bar{P}_k\\) \\(P_{k+1}\\)during [\\(t_{k+1},t_{k+2}\\)] \\(\\bar{P}\\_{k+1}\\)by reprojected \\(P_{k+1}\\)to timesatmp \\(t_{k+1}\\) \\(\\mathcal{E}\\_{k+1}\\)edge pts from\\(\\bar{P}\\_{k+1}\\) \\(\\mathcal{H}\\_{k+1}\\)planar pts from\\(\\bar{P}\\_{k+1}\\) <ul> <li>Source of Feature Points</li> <li>At each iteration,\\(\\mathcal{E}\\_{k+1}\\) and \\(\\mathcal{H}\\_{k+1}\\) are reprojected point sets at the beginning of the sweep \\(\\bar{P}\\_{k+1}\\)by using currently estimated transform.</li> <li>For each point in \\(\\mathcal{E}\\_{k+1}\\) and \\(\\mathcal{H}\\_{k+1}\\),we are going to find the closest neighbor point in \\(\\bar{P}\\_k\\),which is stored in a 3D KD-tree for fast index.</li> <li>Find the closest points in \\(\\mathcal{E}\\_{k}\\) and \\(\\mathcal{H}\\_{k}\\) for each point of \\(\\mathcal{E}\\_{k+1}\\) and \\(\\mathcal{H}\\_{k+1}\\)</li> <li> <p>find closest edge points in \\(\\mathcal{E}\\_{k}\\) for each point of \\(\\mathcal{E}\\_{k+1}\\)     let \\(X^L_{(k+1,i)}\\)denote the point \\(\\mathcal{i} \\in \\mathcal{E}\\_{k+1}\\),which is in LidarCoordinateSystem{\\(L\\)}     the edge line is represented by two points,points \\(j \\in \\mathcal{E}\\_k\\) and \\(l \\in \\mathcal{E}\\_k\\) are closest neighbor of \\(i\\) in consecutive scans. Notice we particularly require that \\(j\\) and \\(l\\) are from different scans considering that a single scan cannot contain more than one points from the same dege line</p> </li> <li> <p>find closest planar points in \\(\\mathcal{H}\\_{k}\\) for each point of \\(\\mathcal{H}\\_{k+1}\\)     the planar patch is represented by three points,similar to last,we find the closest neighbor of \\(i\\) in \\(\\bar{P}_k\\),denote as \\(j\\),\\(l\\),\\(m\\) Notice about \\(j\\),\\(l\\),\\(m\\),two of them are on the same scan, another is in consecutive scans,This guarantees that the three points are non-collinear</p> </li> <li>compute the distance between every feature point of \\(\\bar{P}\\_{k+1}\\) to the closest neighbor points of \\(\\bar{P}\\_{k}\\) Notice all points in the formula (\\(\\mathcal{2}\\)) and (\\(\\mathcal{3}\\)) is the coordinates in {\\(L\\)}.</li> </ul> \\[    d\\varepsilon = \\frac{|(\\widetilde{X}^L_{(k+1,i)}- \\bar{X}^L_{(k,j)})\\times (\\widetilde{X}^L_{(k+1,i)}- \\bar{X}^L_{(k,l)})|}{|\\bar{X}^L_{(k,j)} - \\bar{X}^L_{(k,l)}|} .\\text{distance of point to line} \\tag{2}  \\] \\[ \\begin{align}   d_{\\mathcal{H}} = \\frac{|(\\widetilde{X}^L_{(k+1, i)} - \\bar{X}^L_{(k,j)})\\cdot((\\bar{X}^L_{(k,j)} - \\bar{X}^L_{(k,l)})\\times(\\bar{X}^L_{(k,j)} - \\bar{X}^L_{(k,m)}))|}    {|(\\bar{X}^L_{(k,l)} - \\bar{X}^L_{(k,j)})\\times(\\bar{X}^L_{(k,m)} - \\bar{X}^L_{(k,j)})|} \\end{align} \\] \\[      \\text{distance of point to planar}\\tag{3} \\] <ul> <li>Motion Estimation TODO</li> <li>Corrected every point for a sweep</li> <li>Motion estimation between two consecutive sweep</li> </ul>"},{"location":"m%26l/slam_opensource/slam_loam_series/#lio-sam","title":"LIO-SAM","text":""},{"location":"m%26l/slam_opensource/slam_loam_series/#assume_1","title":"Assume","text":"<ol> <li>assume nonlinear motion model for point cloud de-skew,estimate the sensor motion during a lidar scan using raw IMU measurements</li> <li>the estimated motion above also serve as an intial guess for lidar odometry optimization</li> <li>the lidar-odometry result above is then used to estimate the bias of the IMU in the factor graph.</li> </ol>"},{"location":"math/algebraist/","title":"\u77e9\u9635\u548c\u5411\u91cf","text":"<p>https://services.math.duke.edu/~jdr/ila/ila.pdf https://github.com/QBobWatson/ila https://services.math.duke.edu/~jdr/ila/systems-of-eqns.html</p>"},{"location":"math/algebraist/#_2","title":"\u5411\u91cf\u76f8\u5173","text":"<p>note about operation of vector,such as dot and cross</p>"},{"location":"math/algebraist/#_3","title":"\u5411\u91cf\u70b9\u4e58","text":"<p>\\(\\mathbf{a} \\cdot \\mathbf{b}  = |a|\\cdot |b|\\cdot cos&lt;a,b&gt;\\)</p> <ul> <li>\u4e8c\u7ef4\u5411\u91cf</li> </ul> <p>$$   \\begin{aligned}     \\mathbf{\\overrightarrow{a}} &amp;= a_x\\mathbf{i}+a_y\\mathbf{j}\\\\   \\mathbf{\\overrightarrow{b}} &amp;= b_x\\mathbf{i}+b_y\\mathbf{j} \\\\   \\mathbf{\\overrightarrow{a}}\\cdot\\mathbf{\\overrightarrow{b}} &amp;= a_xb_x\\mathbf{i}+a_yb_y\\mathbf{j}   \\end{aligned} \\tag{1}   $$</p> <ul> <li>\u4e09\u7ef4\u5411\u91cf</li> </ul> <p>$$   \\begin{aligned}     \\mathbf{\\overrightarrow{a}} &amp;= a_x\\mathbf{i}+a_y\\mathbf{j}+a_z\\mathbf{k}\\\\   \\mathbf{\\overrightarrow{b}} &amp;= b_x\\mathbf{i}+b_y\\mathbf{j}+b_z\\mathbf{k}  \\\\   \\mathbf{\\overrightarrow{a}}\\cdot\\mathbf{\\overrightarrow{b}} &amp;= a_xb_x\\mathbf{i}+a_yb_y\\mathbf{j}+a_zb_z\\mathbf{k}   \\end{aligned}\\tag{2}   $$</p>"},{"location":"math/algebraist/#_4","title":"\u5411\u91cf\u53c9\u4e58","text":"<p>\\(\\mathbf{a} \\times \\mathbf{b}  = |a|\\cdot |b|\\cdot sin&lt;a,b&gt;\\)</p> <ul> <li> <p>\u4e09\u7ef4\u5411\u91cf   $$   \\begin{aligned}     \\mathbf{\\overrightarrow{a}} &amp;= a_x\\mathbf{i}+a_y\\mathbf{j}+a_z\\mathbf{k}\\\\   \\mathbf{\\overrightarrow{b}} &amp;= b_x\\mathbf{i}+b_y\\mathbf{j}+b_z\\mathbf{k}  \\\\   \\mathbf{\\overrightarrow{a}}\\times\\mathbf{\\overrightarrow{b}} &amp;=       \\begin{bmatrix}      \\mathbf{i} &amp; \\mathbf{j}&amp; \\mathbf{k}\\\\      a_x      &amp; a_y     &amp;a_z\\\\      b_x      &amp; b_y     &amp;b_z      \\end{bmatrix} \\\\ &amp;= (a_yb_z - a_zb_y)\\mathbf{i} + (a_zb_x - a_xb_z)\\mathbf{j} + (a_xb_y - a_yb_x)\\mathbf{k} \\\\      &amp;=      \\begin{bmatrix}           a_y &amp; a_z  \\\\            b_y &amp; b_z                \\end{bmatrix}\\mathbf{i} +      \\begin{bmatrix}           a_z &amp; a_x  \\\\            b_z &amp; b_x                \\end{bmatrix}\\mathbf{j}+      \\begin{bmatrix}           a_x &amp; a_y  \\\\            b_x &amp; b_y                \\end{bmatrix}\\mathbf{k}   \\end{aligned}\\tag{3}   $$</p> </li> <li> <p>\u4e8c\u7ef4\u5411\u91cf</p> </li> </ul> <p>$$   \\begin{aligned}     \\mathbf{\\overrightarrow{a}} &amp;= a_x\\mathbf{i}+a_y\\mathbf{j}\\\\   \\mathbf{\\overrightarrow{b}} &amp;= b_x\\mathbf{i}+b_y\\mathbf{j}  \\\\   \\mathbf{\\overrightarrow{a}}\\times\\mathbf{\\overrightarrow{b}} &amp;=       \\begin{bmatrix}      \\mathbf{i} &amp; \\mathbf{j}&amp; \\mathbf{k}\\\\      a_x      &amp; a_y     &amp;0\\\\      b_x      &amp; b_y     &amp;0      \\end{bmatrix} \\\\ &amp;=  (a_xb_y - a_yb_x)\\mathbf{k} \\\\      &amp;=      \\begin{bmatrix}           a_x &amp; a_y  \\\\            b_x &amp; b_y                \\end{bmatrix}\\mathbf{k}   \\end{aligned} \\tag{4}   $$</p>"},{"location":"math/algebraist/#_5","title":"\u77e9\u9635\u76f8\u5173","text":""},{"location":"math/algebraist/#_6","title":"\u57fa\u7840","text":"<ul> <li>\u4e58\u6cd5</li> <li>\u7ed3\u5408\u5f8b: \\((AB)C = A(BC), k(AB)=(kA)B=A(kB)\\)</li> <li>\u5de6\u5206\u914d\u5f8b: \\((A + B)C = AC + BC\\)</li> <li>\u53f3\u5206\u914d\u5f8b: \\(C(A + B)C = CA + CB, k(A+B)=kA+kB\\)</li> </ul>"},{"location":"math/algebraist/#wikipedia","title":"\u8f6c\u7f6ewikipedia","text":""},{"location":"math/algebraist/#_7","title":"\u57fa\u7840","text":"<ul> <li>\\({A^T}^T = A\\)</li> <li>\\((A+B)^T = A^T+B^T\\)</li> <li>\\((AB)^T=B^TA^T\\), e.g \\((ABC)^T=C^TB^TA^T\\)</li> <li>\\((cA)^T=cA^T\\)</li> <li>\\(det(A)^T=det(A)\\)</li> </ul>"},{"location":"math/algebraist/#_8","title":"\u7279\u6b8a\u8f6c\u7f6e\u77e9\u9635","text":"<ul> <li>\u5bf9\u79f0\u77e9\u9635: \u8f6c\u7f6e\u7b49\u4e8e\u81ea\u8eab \\(A^T=A\\)</li> <li>\u6b63\u4ea4\u77e9\u9635: \u8f6c\u7f6e\u7b49\u4e8e\u9006 \\(GG^T=G^TG=I\\)</li> <li>\u659c\u5bf9\u79f0\u77e9\u9635: \u8f6c\u7f6e\u7b49\u4e8e\u4ed6\u7684\u8d1f\u77e9\u9635 \\(A^T=-A\\)</li> </ul>"},{"location":"math/algebraist/#_9","title":"\u53cd\u5bf9\u79f0\u77e9\u9635","text":"<p>\u5411\u91cf\\(a = (a_1,a_2,a_3)\\) \u53cd\u5bf9\u79f0\u77e9\u9635\u4e3a $$ a^\\prime =  \\begin{bmatrix} &amp;0,&amp;-a_3,&amp;a_2 \\ &amp;a_3,&amp;0,&amp;-a_1 \\ &amp;-a_2,&amp;a_1,&amp;0 \\end{bmatrix} $$</p>"},{"location":"math/algebraist/#wikipedia_1","title":"\u9006\u77e9\u9635\u8f6c\u7f6ewikipedia","text":"<p>\u5b58\u5728\\(B\\)\u4f7f\u5f97\\(AB=BA=I\\),\u5219\\(A^{-1}=B\\)</p>"},{"location":"math/algebraist/#_10","title":"\u57fa\u7840","text":"<ul> <li>\\((A^{-1})^{-1}=A\\)</li> <li>\\((\\lambda A)^{-1}=\\dfrac{1}{\\lambda} \\times A^{-1}\\)</li> <li>\\((AB)^{-1}=B^{-1}A^{-1}\\)</li> <li>\\((A^T)^{-1}=(A^{-1})^T\\)</li> <li>\\(det(A^{-1})=\\dfrac{1}{det(A)}\\), det\u4e3a\u884c\u5217\u5f0f</li> </ul>"},{"location":"math/algebraist/#_11","title":"\u77e9\u9635\u5206\u89e3","text":"<p>\u8fd0\u884c\u901f\u5ea6</p> \\[ LU\u5206\u89e3 &gt; Cholesky\u5206\u89e3 &gt; QR\u5206\u89e3 &gt; \u76f4\u63a5\u6c42\u9006 \\]"},{"location":"math/algebraist/#lu","title":"LU\u5206\u89e3","text":"<p>\\(A=LU\\),\u5176\u4e2d\\(L\\)\u4e3a\u4e0b\u4e09\u89d2(\u4e3b\u5bf9\u89d2\u7ebf\u4e0b\u6709\u503c)\uff0c\\(U\\)\u4e3a\u4e0a\u4e09\u89d2(\u4e3b\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6709\u503c)</p> \\[ \\begin{gather} Ax = (LU)x = L(Ux) =b \\\\\\\\ \u4ee4y=Ux,\u5219Ly=b \\end{gather} \\] <p>\u901a\u8fc7\u6c42\u89e3\\(y\\)\u4f7f\\(Ly=b\\),\u7136\u540e\u6c42\u89e3\\(x\\)\u4f7f\u5f97 \\(Ux=y\\)</p>"},{"location":"math/algebraist/#_12","title":"\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635","text":"<p>\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u77e9\u9635\uff0c\u5177\u6709\u4ee5\u4e0b\u4e24\u4e2a\u5173\u952e\u6027\u8d28\uff1a</p> <ol> <li>\u5bf9\u79f0\u6027\uff08Symmetry\uff09\uff1a \u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u5373\u77e9\u9635\u7684\u8f6c\u7f6e\u7b49\u4e8e\u77e9\u9635\u672c\u8eab\u3002</li> </ol> \\[    A^T = A \\] <ol> <li>\u6b63\u5b9a\u6027\uff08Positive Definite\uff09\uff1a \u5bf9\u4e8e\u4efb\u610f\u975e\u96f6\u5217\u5411\u91cf \\(v\\)\uff0c\u5176\u4e8c\u6b21\u578b \\(v^TAv\\) \u7684\u503c\u90fd\u662f\u6b63\u7684\u3002</li> </ol> <p>\\(v^TAv &gt; 0, \\text{ \u5bf9\u4e8e\u6240\u6709\u975e\u96f6\u5217\u5411\u91cf } v\\)</p> <p>\u8fd9\u4e24\u4e2a\u6761\u4ef6\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5c31\u5b9a\u4e49\u4e86\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u3002</p> <p>\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u5177\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u6027\u8d28\u548c\u5e94\u7528\uff1a</p> <ul> <li>\u552f\u4e00\u89e3\uff1a \u7ebf\u6027\u65b9\u7a0b\u7ec4 \\(Ax = b\\) \u5177\u6709\u552f\u4e00\u89e3\uff0c\u5176\u4e2d \\(A\\) \u662f\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u3002</li> <li>Cholesky \u5206\u89e3\uff1a \u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u53ef\u4ee5\u901a\u8fc7 Cholesky \u5206\u89e3\u8868\u793a\u4e3a \\(A = LL^T\\)\uff0c\u5176\u4e2d \\(L\\) \u662f\u4e0b\u4e09\u89d2\u77e9\u9635\u3002</li> <li>\u6700\u5c0f\u503c\uff1a \u5bf9\u4e8e\u4e8c\u6b21\u578b\u51fd\u6570 \\(f(x) = x^TAx\\)\uff0c\u5176\u4e2d\\(A\\)\u662f\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\uff0c\u8fd9\u4e2a\u51fd\u6570\u5728\\(A\\)\u7684\u6700\u5c0f\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u65b9\u5411\u4e0a\u8fbe\u5230\u6700\u5c0f\u503c\u3002</li> </ul> <p>\u8fd9\u4e9b\u6027\u8d28\u4f7f\u5f97\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u5728\u6570\u5b66\u3001\u7edf\u8ba1\u5b66\u3001\u4f18\u5316\u7b49\u9886\u57df\u4e2d\u975e\u5e38\u91cd\u8981\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4f8b\u5982\u5728\u6570\u503c\u8ba1\u7b97\u548c\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\u5e38\u5e38\u51fa\u73b0\u5728\u534f\u65b9\u5dee\u77e9\u9635\u3001Gram \u77e9\u9635\u7b49\u573a\u666f\u4e2d\u3002</p>"},{"location":"math/estimation_filter_kalman/","title":"\u72b6\u6001\u4f30\u8ba1-\u6ee4\u6ce2","text":""},{"location":"math/estimation_filter_kalman/#wikipedia","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668wikipedia\u7cfb\u7edf\u6a21\u578b","text":"<p>https://en.wikipedia.org/wiki/Kalman_filter#Underlying_dynamic_system_model</p> <p>\u76ee\u6807\u8ffd\u8e2a: \u5308\u7259\u5229\u5339\u914d\u548ckalmanfilter\u8be6\u89e3-good</p> <p>apollo\u5308\u7259\u5229\u5339\u914d</p> \u8868\u793a \u610f\u4e49 \\(F_k\\) \u72b6\u6001\u8f6c\u79fb\u6a21\u578b \\(Q_k\\) \u8fc7\u7a0b\u566a\u58f0\u534f\u65b9\u5dee <p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u6a21\u578b\u5047\u8bbek\u65f6\u523b\u7684\u771f\u5b9e\u72b6\u6001\u662f \u6839\u636e\\(k-1\\)\u5904\u7684\u72b6\u6001\u6f14\u5316\u800c\u6765,\\(w_k\\)\u662f\u8fc7\u7a0b\u566a\u58f0,\\(w_k \\sim N(0,Q_k)\\)</p> \\[ \\hat{X}_{k}=F_kX_{k-1}+B_ku_k+w_k \\] \u8868\u793a \u610f\u4e49 \\(H_k\\) \u89c2\u6d4b\u6a21\u578b\uff0c\u771f\u5b9e\u72b6\u6001\u7a7a\u95f4\u6620\u5c04\u5230\u89c2\u6d4b\u7a7a\u95f4 \\(R_k\\) \u89c2\u6d4b\u566a\u58f0\u534f\u65b9\u5dee <p>\u5728\u65f6\u95f4k \u5904\uff0c\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f \u5bf9\u771f\u5b9e\u72b6\u6001\\(X_k\\)\u8fdb\u884c\u89c2\u5bdf\uff08\u6216\u6d4b\u91cf\uff09\\(Z_k\\)\uff0c\\(v_k\\)\u662f\u89c2\u6d4b\u566a\u58f0\uff0c\\(v_k \\sim N(0, R_k)\\)</p> \\[Z_k = H_kX_k+v_k\\]"},{"location":"math/estimation_filter_kalman/#_1","title":"\u9884\u6d4b","text":"<ul> <li>\u9884\u6d4b(\u5148\u9a8c)\u72b6\u6001\u4f30\u8ba1</li> </ul> \\[   \\hat{X}_{k|k-1}=F_kX_{k-1|k-1}+B_ku_k \\] <ul> <li>\u9884\u6d4b(\u5148\u9a8c)\u4f30\u8ba1\u534f\u65b9\u5dee(\u9884\u6d4b\u534f\u65b9\u5dee)</li> </ul> \\[   \\hat{P}_{k|k-1}=F_kP_{k-1|k-1}F^T_k+Q_k \\]"},{"location":"math/estimation_filter_kalman/#_2","title":"\u66f4\u65b0","text":"<ul> <li>\u521b\u65b0/\u6d4b\u91cf\u9884\u62df\u5408\u6b8b\u5dee</li> </ul> \\[   \\tilde{y}_k=Z_k - H_k\\hat{X}_{k|k-1} \\] <ul> <li>\u521b\u65b0/\u6d4b\u91cf\u9884\u62df\u5408\u6b8b\u5dee-\u534f\u65b9\u5dee(\u5c06\u534f\u65b9\u5deeP\u6620\u5c04\u5230\u89c2\u6d4b\u7a7a\u95f4\u5e76\u52a0\u4e0a\u89c2\u6d4b\u566a\u58f0)</li> </ul> \\[   S_k = H_k\\hat{P}_{k|k-1}H^T_k + R_k \\] <ul> <li>\u6700\u4f18\u5361\u5c14\u66fc\u589e\u76ca---&gt;\u7528\u4e8e\u4f30\u8ba1\u8bef\u5dee\u91cd\u8981\u7a0b\u5ea6</li> </ul> \\[   K_k = \\hat{P}_{k|k-1}H^T_kS^{-1}_k \\] <ul> <li>[for next\u8fed\u4ee3] \u66f4\u65b0(\u540e\u9a8c)\u72b6\u6001\u4f30\u8ba1</li> </ul> \\[   X_{k|k}=\\hat{X}_{k|k-1} + K_k\\tilde{y}_k \\] <ul> <li>[for next\u8fed\u4ee3] \u66f4\u65b0(\u540e\u9a8c)\u4f30\u8ba1\u534f\u65b9\u5dee</li> </ul> \\[   P_{k|k} = (I-K_kH_k)\\hat{P}_{k|k-1} \\] <ul> <li>\u6d4b\u91cf\u62df\u5408\u540e\u6b8b\u5dee</li> </ul> \\[   \\tilde{y}_{k|k} = Z_k - H_kX_{k|k} \\]"},{"location":"math/estimation_filter_kalman/#_3","title":"\u4e0d\u53d8\u91cf","text":"<p>\u5982\u679c\u6a21\u578b\u51c6\u786e,\u4e14\u503c\\(\\hat{x}_{0|0}\\)\u548c\\(P_{0|0}\\)\u51c6\u5907\u53cd\u6620\u521d\u59cb\u72b6\u6001\u503c\u5206\u5e03\uff0c\u5219\u4fdd\u7559\u4e00\u4e0b\u4e0d\u53d8\u91cf</p> \\[E[x_k - \\hat{x}_{k|k}] =E[x_k - \\hat{x}_{k|k-1}]=0\\] \\[E[\\tilde{y}_k]=0\\] \\[P_{k|k} = cov(x_k - \\hat{x}_{k|k})\\] \\[P_{k|k-1} = cov(x_k - \\hat{x}_{k|k-1})\\] \\[S_k=cov(\\tilde{y}_k)\\]"},{"location":"math/estimation_filter_kalman/#_4","title":"\u63a8\u5bfc\u540e\u9a8c\u4f30\u8ba1\u534f\u65b9\u5dee\u77e9\u9635","text":"\\[ \\begin{align} P_{k|k} &amp;= cov(x_k - \\hat{x}_{x|k}) \\\\ &amp;=cov[x_k - (\\hat{x}_{k|k-1} + K_k\\tilde{y}_k)] \\\\ &amp;=cov[x_k - (\\hat{x}_{k|k-1} + K_k(z_k - H_k\\hat{x}_{k|k-1}))] \\\\ &amp;=cov[x_k - (\\hat{x}_{k|k-1} + K_k(H_kx_k+v_k - H_k\\hat{x}_{k|k-1}))] \\\\ &amp;=cov[(I-K_kH_k)(x_k - \\hat{x}_{k|k-1})-K_kv_k] \\quad \\text{\u6d4b\u91cf\u8bef\u5dee v_k\u4e0e\u5176\u4ed6\u9879\u4e0d\u76f8\u5173}\\\\ &amp;=cov[(I-K_kH_k)(x_k - \\hat{x}_{k|k-1})]+ cov[K_kv_k] \\\\ &amp;=(I-K_kH_k)cov(x_k - \\hat{x}_{k|k-1})(I-K_kH_k)^T+ K_kcov(v_k)K_k^T \\\\ &amp;=(I-K_kH_k)P_{k|k-1}(I-K_kH_k)^T+ K_kR_kK_k^T \\end{align} \\]"},{"location":"math/estimation_filter_kalman/#eskf","title":"ESKF","text":"<p>\u53c2\u89c1<code>Joan-Sola-1773-Quaternion-kinematics-for-the-error-state-Kalman-filter</code>\u7684paper</p>"},{"location":"math/estimation_filter_kalman/#_5","title":"\u4f18\u70b9","text":"<ul> <li>error-state\u6700\u5c0f\u8f7b\u91cf\u5316,\u53c2\u6570\u548c\u81ea\u7531\u5ea6\u4e00\u6837\uff0c\u4f46\u662f\u907f\u514d\u4e86\u53c2\u6570\u5316\u5197\u4f59(\u5373\u5f3a\u7ea6\u675f\u8ba1\u7b97\u65f6\u53ef\u80fd\u968f\u4e4b\u800c\u6765\u7684\u534f\u65b9\u5dee\u5947\u5f02\u6027\u7684\u95ee\u9898)</li> <li>error-state\u603b\u662f\u4fdd\u6301\u8bef\u5dee\u5904\u57280\u503c\u9644\u8fd1\uff0c\u907f\u514d\u6f5c\u5728\u7684\u53c2\u6570\u5947\u5f02\u6027\u3001\u4e07\u5411\u9501\u95ee\u9898/ \u80fd\u4fdd\u8bc1\u4efb\u4f55\u65f6\u523b\u6709\u6548\u7ebf\u6027\u5316</li> <li>error-state\u8db3\u591f\u5c0f,\u610f\u5473\u7740\u5176\u4e8c\u9636\u5bfc\u57fa\u672c\u53ef\u5ffd\u7565\uff0cJacobian\u8ba1\u7b97\u4f1a\u5f88\u5bb9\u6613\u5f88\u5feb\u6216\u8005Jacobian\u662f\u6052\u5b9a\u7684</li> <li>todo</li> </ul>"},{"location":"math/estimation_filter_kalman/#eskf_1","title":"ESKF\u57fa\u672c\u4ecb\u7ecd","text":"<p>\u72b6\u6001\u91cf\u5305\u62ec<code>true-state / nominal-state / error-state</code> 1. \u9ad8\u9891IMU\u6570\u636e \\(u_m\\) \u96c6\u6210\u5230<code>nominal-state</code> \\(x\\), \u4e0d\u8003\u8651\u566a\u58f0\u9879\u76ee \\(w\\) \u548c\u5176\u4ed6\u6270\u52a8 2. \u5b9e\u65f6\u7d2f\u8ba1\u7684\u8bef\u5dee\u96c6\u6210\u5230 <code>error-state</code>(\u7531\u5c0f\u7684\u4fe1\u53f7\u72b6\u6001\u91cf\u6784\u6210,\u6709\u65f6\u5e8f\u7684\u52a8\u6001\u7ebf\u6027\u7cfb\u7edf\u8fdb\u884c<code>correct</code>,\u7528\u5230\u7684\u63a7\u5236\u53ca\u6d4b\u91cf\u77e9\u9635\u7531<code>nominal-state</code>\u8ba1\u7b97) \\(\\delta x\\) \u5e76\u7528ESKF\u8bc4\u4f30(\u5305\u542b\u4e86\u6240\u6709\u7684\u566a\u58f0\u9879\u548c\u6270\u52a8) 3. <code>nominal-state</code>\u96c6\u6210\u7684\u540c\u65f6,ESKF\u4f1a<code>prdict</code>\u4e00\u4e2a<code>error-state</code>\u7684\u9ad8\u65af\u4f30\u8ba1 4. \u7cbe\u5ea6\u9ad8\u4e8eIMU\u7684<code>anchor-msg</code>(rtk/lidar/vision)\u5230\u8fbe\u65f6\u5bf9<code>error\u2014state</code>\u8fdb\u884c<code>correct</code>,\u4ece\u800c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u540e\u9a8c\u7684<code>error-state</code>\u7684\u9ad8\u65af\u4f30\u8ba1,\u6700\u540e\u5c06<code>error-state</code>\u7684\u5747\u503c\u6ce8\u5165\u5230<code>nominal-state</code>\u540e\u91cd\u7f6e\u4e3a0,<code>error-state</code>\u7684\u534f\u65b9\u5dee.....</p>"},{"location":"math/estimation_filter_kalman/#ycw","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2(ycw)","text":"<p>The content mainly reference from ycnw's IMM Prediction The Kalman filter which was published by R.E.Kalman in 1960, is a set of mathematical equations that provides an efficient computational (recursive) means to estimate the state of a process, in a way that minimizes the mean of the squared error. The filter is very powerful in several aspects: it supports estimations of past, present, and even future states, and it can do so even when the precise nature of the modeled system is unknown.</p>"},{"location":"math/estimation_filter_kalman/#basic-equations","title":"Basic Equations","text":"<ul> <li>overview </li> </ul> \\[ \\begin{aligned}     \\underset{n \\times 1}{X_k} &amp;= \\underset{n \\times n}{A}\\underset{n \\times 1}{X_{k-1}} + \\underset{n \\times b}{B}   \\underset{b \\times 1}{U_{k-1}} + \\underset{n \\times 1}{w_{k-1}}\\,(Q)\\\\\\\\     \\underset{m \\times 1}{Z_k} &amp;= \\underset{m \\times n}{H}\\underset{n \\times 1}{X_k} + \\underset{m \\times 1}{v_{k}}\\,(R)   \\end{aligned} \\] <ul> <li>predict</li> </ul> \\[ \\begin{aligned}     \\underset{n \\times 1}{X_k^{pre}} &amp;= \\underset{n \\times n}{A} \\cdot \\underset{n \\times 1}{X_{k-1}} + \\underset{n \\times b}{B} \\cdot \\underset{b \\times 1}{U_{k-1}}\\\\\\\\     \\underset{n \\times n}{P_k^{pre}} &amp;= \\underset{n \\times n}{A} \\cdot \\underset{n \\times n}{P_{k-1}} \\cdot \\underset{n \\times n}{A^T} + \\underset{n \\times n}{Q} \\end{aligned} \\] <ul> <li>correct</li> </ul> \\[ \\begin{aligned}     \\mathcal{K_{n \\times m}} &amp;= (P^{pre}_kH^T)  \\cdot (HP^{pre}_kH^T + R)^{-1} \\\\\\\\     X_k &amp;= X^{pre}_k + \\mathcal{K}(Z_k- HX^{pre}_k) \\\\\\\\     P_k &amp;= (I - \\mathcal{K}H)P^{pre}_k \\end{aligned} \\]"},{"location":"math/estimation_filter_kalman/#the-process-to-be-estimated","title":"The process to be estimated","text":"<p>The Kalman filter addressed the general problem of trying to estimate the state \\(x\\in \\Re^n\\) of a discrete-time controlled process that is governed by the linear stochastic difference equation: $$ x_k = Ax_{k-1} + Bu_{k-1} + w_{k-1} \\qquad p(w) \\sim N(0, Q) \\tag{1} $$ with a measurement \\(z \\in \\Re^m\\) that is: $$ z_k = Hx_k + v_k \\qquad p(v) \\sim N(0,R) \\tag{2} $$ - The \\(n*n\\) matrix \\(A\\) is <code>transition matrix</code> which relates the state at the previous time step \\(k-1\\) to the state at the current step \\(k\\), in the absence of either a driving function or process noise. Note that in practice \\(A\\) might change with each time step, but here we assume it is constant. - The \\(n *1\\) matrix \\(B\\) is <code>control matrix</code> which relates the optional control input \\(u \\in \\Re^l\\) to the state \\(x\\). - The \\(m *n\\) matrix \\(H\\) is <code>measurement matrix</code> which relates the state to the measurement \\(z_k\\). In practice \\(H\\) might change with each time step, but here we also assume it is constant. - The random variable \\(w_{k-1}\\) and \\(v_k\\) represent the process and measurement noise. They are assumed to be independent(of each other), it belongs to gauss-white noise with normal probability distributions. and \\(Q\\) is <code>process noise covariance</code> and \\(R\\) is <code>measurement noise covariance</code>, they might change with each time step, but we assume they are both constant.</p>"},{"location":"math/estimation_filter_kalman/#the-computational-origin-of-the-filter","title":"The computational origin of the filter","text":"<p>We define \\(\\hat{x}\\_k^- \\in \\Re^n\\) to be our <code>priori state</code> estimate at step \\(k\\) given knowledge of the process priori to step \\(k\\) and \\(\\hat{x}\\_k \\in \\Re^n\\) to be our <code>posteriori state</code>  estimate at step \\(k\\) given measurement \\(z_k\\). we also define \\(x_k\\) is the ground truth, then we can get a <code>priori</code> and a <code>posteriori</code> estimate errors as: $$ prio estimate error:  e_k^- \\equiv x_k - \\hat{x}_k^-   \\tag{3} $$ $$ post estimate error: e_k \\equiv x_k - \\hat{x}_k \\tag{4} $$ The <code>priori</code> estimate error covariance is: $$ P_k^-  = E[e_k<sup>-(e_k</sup>-)^T] \\tag{5} $$ The <code>posteriori</code> estimate error covariance is: $$ P_k = E[e_ke_k^T] \\tag{6} $$ In deriving the equation for the kalman filter, we begin with the goal of finding an equation that compute an <code>posteriori</code> state estimate \\(\\hat{x}\\_k\\) as a linear combination of the <code>priori</code> estimate \\(\\hat{x}\\_k^-\\) and a weighted difference between an actual measurement \\(z\\_k\\) and a prediction of the measurement \\(H\\hat{x}\\_k^-\\) as show below: $$ \\hat{x}_k = \\hat{x}_k^- + K(z_k - H\\hat{x}_k^-) \\tag7 $$ The difference \\((z\\_k - H\\hat{x}\\_k^-)\\) is called the measurement <code>innovation</code> or <code>residual</code>. The residual reflects the discrepency bewteen the predicted measurement \\(H\\hat{x}\\_k^-\\) and the actual measurement \\(z_k\\). A residual of zero means that the two are in complete agreement. The \\(n*m\\) matrix \\(K\\) is chosen to be the <code>gain</code> or <code>blending factor</code> that minimizes the <code>posteriori</code> error covariance in (6).</p> <p>This minimization can be accomplished by: 1. substituting (7) into the (4) and substituting that into (6); 2. performing the indicated expectation; 3. taking the derivative of the trace of the result with respect to \\(K\\); 4. setting the result equal to \\(0\\) and then solving for \\(K\\). One form of the resulting \\(K\\) that minimized (6) is:</p> \\[ \\begin{aligned}    K_k  &amp;= P_k^-H^T(HP_k^-H^T \\ +\\ R )^{-1} \\\\\\\\         &amp;= \\frac{P_k^-H^T}{HP_k^-H^T \\ +\\ R } \\end{aligned} \\tag{8} \\] <p>Looking at (10) we see that as the <code>measurement error covariance</code> \\(R \\to 0\\), the gain \\(K\\) weights the residual more heavily.Specially, $$ \\lim_{R_k \\to 0}K_k = H^{-1} \\tag{9} $$ On the other hand, as the <code>priori estimate error covariance</code> \\(P_k^- \\to 0\\), the gain \\(K\\) weights the residual less heavily.Specially, $$ \\lim_{P_k^- \\to 0}K_k = 0 \\tag{10} $$</p> <p>Another way of thinking about the weighting by \\(K\\) is that as the measurement error covariance \\(R \\to 0\\), the actual measurement \\(z_k\\) is <code>more trusted</code>, while the predicted mesaurement \\(H\\hat{x}_k^-\\) is <code>less trusted</code>. On the other hand, as the <code>priori estimate error covariance</code> \\(P_k^- \\to 0\\), the actual measurement \\(z_k\\) is <code>less trusted</code>, while the predicted measurement \\(H\\hat{x}_k^-\\) is <code>more trusted</code>.</p>"},{"location":"math/estimation_filter_kalman/#the-discrete-kalman-filter-algorithm","title":"The discrete Kalman Filter Algorithm","text":"<p>The kalman filter estimate a process by using a form of feedback control: the filter estimates the process state at some time and then obtains feedback in the form of (noisy) measurement. As such, the equations for the Kalman filter falls into two groups: - <code>time update</code>(predict) equations; - <code>measurement update</code>(correct) equations;</p> <p>The <code>time update</code> equations are responsible for projecting forwar(in time) the current state and error covariance estimates to obtain the <code>prior</code> estimates for the next time step.</p> <p>The <code>measurement update</code> equations are responsible for the feedback, incorporating a new measurement into the <code>priori estimate</code> to obtain an improved <code>posterori</code> estimate.</p> <p>The final estimation algorithm resembles that of a <code>predictor-&gt;corrector</code> algorithm for solving numerical problems: <pre><code>           Time Update -----&gt; Measurement Update\n            (Predict)             (Correct)\n                ^                     |\n                |                     |\n                -----------------------\n</code></pre> The specific equations for the <code>time update(predictor)</code> are: $$ \\hat{x}_k^- = A\\hat{x}_{k-1} + Bu_{k-1} \\tag{11} $$ $$ P_k^- = AP_{k-1}A^T + Q \\tag{12} $$ where: - \\(\\hat{x}\\_{k-1}\\) is the <code>posteriori</code> state from time step \\(k-1\\);  - \\(u\\_{k-1}\\) is the control from time step \\(k-1\\); - \\(\\hat{x}\\_k^-\\) is the <code>priori</code> state from time step \\(k\\); - \\(P_{k-1}\\) is the <code>posterirori</code> estimate error covariance from time step \\(k-1\\); - \\(P_k^-\\) is the <code>priori</code> estimate error covariance from time step \\(k\\);</p> <p>The specific equations for the <code>measurement update(corrector)</code> are:</p> \\[ K_k = P_k^-H^T \\cdot (HP_k^-H^T + R)^{-1} \\tag{13} \\] \\[ \\hat{x}\\_k = \\hat{x}\\_k^- + K_k\\cdot (z_k - H\\hat{x}\\_k^-) \\tag{14} \\] \\[ P_k= (I - K_kH) \\cdot P_k^- \\tag{15} \\] <p>where: - \\(K_k\\) is the <code>gain</code> from time step \\(k\\); - \\(z_k\\) is the actual measurement variable from time step \\(k\\); - \\(\\hat{x}\\_k\\) is the <code>posteriori</code> state from time step \\(k\\); - \\(P_k\\) is the <code>posteriori</code> estimate error covariance from time step \\(k\\);</p>"},{"location":"math/estimation_filter_kalman/#python-of-kalman-filter","title":"Python of Kalman Filter","text":"<pre><code>class KalmanFilter:\n    def __init__(self, A, B, H, Q, R):\n        self.A = A\n        self.B = B\n        self.H = H\n        self.Q = Q\n        self.R = R\n\n        self.U = np.zeros((B.shape[1], 1))\n        self.X = np.zeros((A.shape[0], 1))\n        self.X_pre = self.X\n        self.P = np.zeros(A.shape)\n        self.P_pre = self.P\n\n    def __init__(self, A, H):\n        self.A = A\n        self.X = np.zeros((A.shape[0], 1))\n        self.B = np.eye(A.shape[0])\n        self.U = np.zeros((self.B.shape[1], 1))\n        self.Q = np.eye(A.shape[0])\n\n        self.H = H\n        self.R = np.eye(H.shape[0])\n\n        self.X_pre = self.X\n        self.P = np.zeros(A.shape)\n        self.P_pre = self.P\n\n    def filt(self, Z):\n        \"\"\"\n        x = A*x + B*u +Q\n        y = H*x +     R\n        \"\"\"\n        self.__predict()\n        self.__update(Z)\n        return self.X\n\n    def __predict(self):\n        \"\"\"\n        x_next = A*x + B*u\n        P_next = A*P*AT + Q\n        \"\"\"\n        self.X_pre = np.dot(self.A, self.X) + np.dot(self.B, self.U)\n        self.P_pre = np.dot(np.dot(self.A, self.P), self.A.T) + self.Q\n\n    def __update(self, Z):\n        \"\"\"\n        K = (P_next*HT) * (H*P_next*HT + R).inverse()\n        x = x_next + K*(z - H*x_next)\n        P = P_next - K*H*P_next\n        \"\"\"\n        K = np.dot(np.dot(self.P_pre, self.H.T),\n                   np.linalg.inv(np.dot(np.dot(self.H, self.P_pre), self.H.T) +\n                                 self.R))\n        self.X = self.X_pre + np.dot(K, Z - np.dot(self.H, self.X_pre))\n        self.P = self.P_pre - np.dot(np.dot(K, self.H), self.P_pre)\n</code></pre>"},{"location":"math/estimation_optimizer/","title":"\u72b6\u6001\u4f30\u8ba1-\u4f18\u5316","text":""},{"location":"math/estimation_optimizer/#_1","title":"\u5e38\u89c1\u51fd\u6570","text":""},{"location":"math/estimation_optimizer/#_2","title":"\u6307\u6570\u51fd\u6570","text":"\\[ \\begin{align} a^{\\frac{m}{n}} &amp;= \\sqrt[n]{a^m} \\quad (a&gt;0)\\\\ a^m \\cdot a^n &amp;= a^{m+n} \\\\ (a^m)^n &amp;= a^{m\\cdot n} \\\\ (a \\cdot b)^n &amp;= a^n \\cdot b^n \\\\ (\\frac{a}{b})^n &amp;= (a \\cdot b^{-1})^n = a^n \\cdot b^{-n} \\end{align} \\]"},{"location":"math/estimation_optimizer/#_3","title":"\u6cf0\u52d2\u5c55\u5f00","text":"<p>\\(f(x) \\quad \u5728\\quad x=a \\quad\\)\u5904\\(\\quad n \\quad\\)\u9636\u53ef\u5bfc,\u5219\\(f(x)\u5728x=a\u7684\u5c40\u90e8\u9886\u57df\u5185\u7b26\u5408\u5982\u4e0b\\)</p> \\[ f(x) = f(a)+ {f}'(a)(x-a) +  {f}''(a)\\frac{(x-a)^2}{2!} +  \\dots + {f}^{(n)}(a)\\frac{(x-a)^n}{n!} \\]"},{"location":"math/estimation_optimizer/#_4","title":"\u5982\u4f55\u9009\u62e9\u7ebf\u6027\u6c42\u89e3\u5668","text":"<ul> <li>\u5bf9\u4e8e\u5bc6\u96c6\u96c5\u53ef\u6bd4\u7684\u5c0f\u89c4\u6a21\u95ee\u9898(\u51e0\u767e\u6216\u51e0\u5343) DENSE_QR</li> <li>\u5bf9\u4e8e\u4e00\u822c\u7a00\u758f\u6027\u95ee\u9898(\u96c5\u53ef\u6bd4\u5927\u91cf\u4e3a\u96f6) SPARSE_NORMAL_CHOLESKY (\u4f9d\u8d56SuitSparse|CXSparse)</li> <li>\u5bf9\u4e8e\u7a00\u758fschur\u8865\u6216\u7f29\u51cf\u76f8\u673a\u77e9\u9635\u7684\u5927\u578bbundle adjustment\u95ee\u9898\uff0c\u4f7f\u7528SPARSE_SCHUR(\u5019\u8865\u4e3a ITERATIVE_SCHUR)</li> <li>\u5bf9\u4e8e\u5927\u578b\u7684bundle adjustment\u95ee\u9898(\u51e0\u5343\u76f8\u673a\u4ee5\u4e0a), \u4f7f\u7528ITERATIVE_SCHUR</li> </ul>"},{"location":"math/estimation_optimizer/#_5","title":"\u7b2c\u4e09\u65b9\u5e93","text":""},{"location":"math/estimation_optimizer/#gtsam","title":"GTSAM","text":"<p>note of gtsam by DongJing</p> <p>\u5f00\u6e90C++\u5e93\uff0c\u63d0\u4f9b\u5404\u79cdSLAM\u7b97\u6cd5\uff0c\u5305\u62ecbundle adjustment\u3001SLAM\u3001\u89c6\u89c9SLAM\u3001SLAM\u4f18\u5316\u3001SLAM\u5efa\u56fe\u3001SLAM\u5730\u56fe\u6784\u5efa\u3001SLAM\u6570\u636e\u96c6\u3001SLAM\u8bc4\u4f30\u3001SLAM\u53ef\u89c6\u5316\u7b49\u3002</p>"},{"location":"math/estimation_optimizer/#slam-as-a-bayes-net","title":"SLAM as a Bayes Net","text":"\\[ \\begin{aligned} &amp;\\mathbf{P}(\\mathbf{X,L,Z}) = P(x_0)\\prod_{i=1}^MP(x_i|x_{i-1},u_i)\\prod_{k=1}^KP(z_k|x_{ik},l_{jk}) \\\\\\\\\\\\\\\\ &amp; x_i = f_i(x_{i-1},u_i)+w_i \\Leftrightarrow \\\\\\\\  &amp; P(x_i|x_{i-1},u_i)\\propto exp-\\frac{1}{2}||f_i(x_{i-1},u_i)-x_i||^2\\Lambda_i  \\\\\\\\ &amp;z_k=h_k(x_{ik},l_{jk})+v_k \\Leftrightarrow \\\\\\\\ &amp;P(z_k|x_{ik},l_{jk})\\propto exp-\\frac{1}{2}||h_k(x_{ik},l_{jk})-z_k||^2_{\\sum_k} \\end{aligned} \\] <pre><code>### SLAM as a Factor Graph\n### SLAM as a Non-linear Least Squares\n### Optimization on Manifold/Lie Groups\n### iSAM2 and Bayes Tree\n\n## Programming\n### First Cpp example\n### Use Gtsam in Matlab\n### Write your own factor\n### Expression Automatic Differentiation(New in 4.0)\n### Traits Optimize any type in GTSAM(New in 4.0)\n### Use GTSAM in Python\n\n## Applications\n### Visual-lnertial Odometry\n### Structure from Motion(SFM)\n### Multi-Robot SLAM Coordinate Frame and Distrubuted Optimization \n### Multi-View Stereo and Optical Flow\n### Motion Planning\n</code></pre>"},{"location":"math/estimation_optimizer/#ceres","title":"Ceres","text":"<p>\u5f00\u6e90C++\u5e93\uff0c\u63d0\u4f9b\u81ea\u52a8\u5fae\u5206\u6c42\u89e3\u5668\uff0c\u5305\u62ec\u7ebf\u6027\u6c42\u89e3\u5668\u3001\u975e\u7ebf\u6027\u6c42\u89e3\u5668\u3001\u66f2\u7387\u7ea6\u675f\u6c42\u89e3\u5668\u3001\u8fb9\u7f18\u7ea6\u675f\u6c42\u89e3\u5668\u3001\u8fb9\u7f18\u5316\u7ea6\u675f\u6c42\u89e3\u5668\u3001\u51f8\u4f18\u5316\u6c42\u89e3\u5668\u7b49\u3002</p>"},{"location":"math/estimation_optimizer/#colmap","title":"COLMAP","text":"<p>\u5f00\u6e90C++\u5e93\uff0c\u63d0\u4f9b\u591a\u89c6\u89d2SLAM\u30013D\u91cd\u5efa\u3001SfM\u30013D\u5efa\u6a21\u30013D\u91cd\u5efa\u8bc4\u4f30\u30013D\u91cd\u5efa\u53ef\u89c6\u5316\u7b49\u3002</p>"},{"location":"math/estimation_optimizer/#open3d","title":"Open3D","text":"<p>\u5f00\u6e90C++\u5e93\uff0c\u63d0\u4f9b3D\u70b9\u4e91\u5904\u7406\u30013D\u91cd\u5efa\u30013D\u5efa\u6a21\u30013D\u91cd\u5efa\u8bc4\u4f30\u30013D\u91cd\u5efa\u53ef\u89c6\u5316\u7b49\u3002</p>"},{"location":"math/geometry/","title":"\u51e0\u4f55\u5b66","text":""},{"location":"math/geometry/#_2","title":"\u76f4\u7ebf\u76f8\u5173","text":"<ul> <li>\u659c\u622a\u5f0f</li> </ul> \\[ \\begin{gather} y=kx+b \\\\\\\\ p(x_0,y_0)  \\text{\u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\u4e3a} \\quad D = \\dfrac{|y_0 - kx_0 - b|}{\\sqrt{1+k^2}} \\end{gather} \\] <ul> <li>\u4e00\u822c\u5f0f</li> </ul> \\[ \\begin{gather}   Ax+By+C=0, \\quad A\u3001B\u4e0d\u80fd\u540c\u65f6\u4e3a0 \\\\\\\\   p(x_0,y_0) \u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\u4e3a\\quad D = \\dfrac{|Ax_0 + By_0 + C|}{\\sqrt{A^2+B^2}} \\end{gather} \\] <ul> <li> <p>\u76f4\u7ebf\u4ea4\u70b9\u8ba1\u7b97   $$   \\begin{cases}       A_1x+B_1y+C_1=0  \\\\       A_2x+B_2y+C_2=0   \\end{cases}   $$   \u4ea4\u70b9\u4e3a   $$   \\begin{cases}   x = \\dfrac{B_1C_2 - B_2C_1}{ A_1B_2 - A_2B_1} \\\\   y = \\dfrac{A_2C_1 - A_1C_2}{A_1B_2 - A_2B_1}   \\end{cases}   $$</p> </li> <li> <p>\u5411\u91cf\u53c9\u4e58: \u5f85\u5b9a\u5411\u91cf\\(A\\nwarrow\\),\u53c2\u8003\u5411\u91cf\\(R\\uparrow\\), \u5219</p> </li> </ul> \\[   value =|A\\times B |= A_xR_y - A_yR_x =    \\begin{cases}   &lt; 0, \\quad A\u4f4d\u4e8eR\u7684\u5de6\u4fa7 \\quad \\nwarrow\\uparrow\\\\\\\\   &gt; 0, \\quad A\u4f4d\u4e8eR\u7684\u53f3\u4fa7 \\quad \\uparrow\\nearrow \\\\\\\\   = 0, \\quad A\u3001R\u91cd\u53e0    \\end{cases} \\] <ul> <li>\u5706</li> </ul> \\[ (x-a)^2 +(y-b)^2 = r^2, \u5706\u5fc3(a,b),\u534a\u5f84r \\] <ul> <li>\u692d\u5706</li> </ul> \\[ \\dfrac{(x-h)^2}{a^2} + \\dfrac{(y-k)^2}{b^2} = 1, \u692d\u5706\u5706\u5fc3(h,k), a\u4e3a\u6a2a\u534a\u8f74,b\u4e3a\u7eb5\u534a\u8f74 \\]"},{"location":"tools/00_setup_work_space_mac/","title":"Setup work space on Mac","text":""},{"location":"tools/00_setup_work_space_mac/#install-tools","title":"install tools","text":"<ul> <li>install Xcode \uff5c vscode</li> <li>install command line tools</li> <li>install homebrew</li> </ul> <pre><code>#install brew: ref https://blog.csdn.net/muyimo/article/details/125211460\n/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\"\n#\u66f4\u65b0homebrew\u8d44\u6e90\nexport PATH=/opt/homebrew/bin:/opt/homebrew/sbin:$PATH #\u52a0\u5230 ~/.zshrc\nsource ~/.zshrc\n\nbrew update\nbrew install clang-format #c++\nbrew install shfmt        #shell\nbrew install isort black flake8       #python\n#\u67e5\u770bclang-format\u8def\u5f84 `/opt/homebrew/bin/clang-format`\nwhich clang-format \n</code></pre> <ul> <li>install vim</li> </ul>"},{"location":"tools/00_setup_work_space_mac/#shortcuts","title":"shortcuts","text":"<ul> <li>common shortcut cmd</li> </ul> info shortcut redo(vscode) command + shirt + z \u65b0\u5efaterminal(\u5f53\u524d\u6d3b\u52a8\u4f53\u4e3a\u7ec8\u7aef) command+n \u4e0d\u540cterminal\u4e4b\u95f4\u5207\u6362 command+` terminal\u65b0\u589etab\u7a97\u53e3 command+t terminal\u5207\u6362tab\u7a97\u53e3 command+shift+\u5de6\u53f3\u65b9\u5411\u952e \u5728Mac\u7535\u8111\u4e0a\uff0c\u5feb\u6377\u952e\u53ef\u4ee5\u6781\u5927\u63d0\u5347\u64cd\u4f5c\u6548\u7387\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684Mac\u952e\u76d8\u5feb\u6377\u952e\uff0c\u6309\u7167\u4e0d\u540c\u7684\u7c7b\u522b\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u4ee5Markdown\u683c\u5f0f\u63d0\u4f9b\uff1a <pre><code># Mac\u952e\u76d8\u5feb\u6377\u952e\n\n## \u57fa\u672c\u64cd\u4f5c\n- `Command + C`: \u590d\u5236\n- `Command + V`: \u7c98\u8d34\n- `Command + X`: \u526a\u5207\n- `Command + Z`: \u64a4\u9500\n- `Command + Shift + Z`: \u91cd\u505a\n- `Command + A`: \u5168\u9009\n- `Command + F`: \u67e5\u627e\n- `Command + S`: \u4fdd\u5b58\n- `Command + W`: \u5173\u95ed\u7a97\u53e3\n- `Command + Q`: \u9000\u51fa\u5e94\u7528\u7a0b\u5e8f\n\n## \u7a97\u53e3\u7ba1\u7406\n- `Command + M`: \u6700\u5c0f\u5316\u7a97\u53e3\n- `Command + Shift + M`: \u5c06\u7a97\u53e3\u8fd8\u539f\u5230\u6700\u5c0f\u5316\u524d\u7684\u72b6\u6001\n- `Command + H`: \u9690\u85cf\u7a97\u53e3\n- `Command + Option + M`: \u5c06\u7a97\u53e3\u79fb\u52a8\u5230\u5c4f\u5e55\u7684\u5de6\u4fa7\n- `Command + Option + H`: \u5c06\u7a97\u53e3\u79fb\u52a8\u5230\u5c4f\u5e55\u7684\u53f3\u4fa7\n- `Command + Option + F`: \u8fdb\u5165\u5168\u5c4f\u6a21\u5f0f\n\n## \u5e94\u7528\u7a0b\u5e8f\u5207\u6362\n- `Command + Tab`: \u5207\u6362\u5e94\u7528\u7a0b\u5e8f\n- `Command + ` (\u53cd\u5f15\u53f7\u952e): \u5207\u6362\u5230\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u7a97\u53e3\n\n## \u5c4f\u5e55\u622a\u56fe\n- `Command + Shift + 3`: \u622a\u53d6\u6574\u4e2a\u5c4f\u5e55\n- `Command + Shift + 4`: \u9009\u62e9\u5c4f\u5e55\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u622a\u56fe\n- `Command + Shift + 4` \u7136\u540e `Space`: \u622a\u53d6\u7a97\u53e3\n\n## \u7cfb\u7edf\u529f\u80fd\n- `Command + Space`: \u6253\u5f00Spotlight\u641c\u7d22\n- `Command + L`: \u5149\u6807\u79fb\u52a8\u5230\u5730\u5740\u680f\uff08\u4ec5\u9650\u6d4f\u89c8\u5668\uff09\n- `Command + ,`: \u6253\u5f00\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\n- `Command + Option + Esc`: \u6253\u5f00\u5f3a\u5236\u9000\u51fa\u7a97\u53e3\n\n## \u7cfb\u7edf\u5feb\u6377\u952e\n- `Control + Command + Q`: \u9501\u5b9a\u952e\u76d8\u548c\u5c4f\u5e55\n- `Control + Command + Eject`: \u5c06\u5c4f\u5e55\u5173\u95ed\uff08\u5982\u679c\u652f\u6301\uff09\n- `Control + Shift + Eject`: \u4f11\u7720\u6a21\u5f0f\uff08\u5982\u679c\u652f\u6301\uff09\n\n## \u7279\u6b8a\u529f\u80fd\n- `Command + Option + P + R`: \u91cd\u7f6eNVRAM\u6216PRAM\n- `Command + Option + Shift + Delete`: \u5c06\u6587\u4ef6\u79fb\u81f3\u5e9f\u7eb8\u7bd3\u5e76\u6e05\u7a7a\u5e9f\u7eb8\u7bd3\n</code></pre> <p>\u8fd9\u4e9b\u5feb\u6377\u952e\u53ef\u4ee5\u9002\u7528\u4e8e\u5927\u591a\u6570Mac\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u67d0\u4e9b\u5feb\u6377\u952e\u53ef\u80fd\u4f1a\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u800c\u6709\u6240\u53d8\u5316\u3002\u4f7f\u7528\u8fd9\u4e9b\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u66f4\u5feb\u5730\u6267\u884c\u65e5\u5e38\u4efb\u52a1\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u3002</p>"},{"location":"tools/mathjax/","title":"usage of mathjax","text":"<p>usage of mathjac</p> <p>Help:Displaying_a_formula</p>","tags":["tools","math"]},{"location":"tools/mathjax/#_1","title":"\u5b57\u4f53","text":"<p>\u82b1\u4f53\u5b57\u6bcd\\(\\mathcal{H}\\)</p> <ol> <li>\\(\\mathcal{R}\\)</li> <li>\\(\\mathbin{R}\\)</li> <li>\\(\\mathbf{R}\\)</li> <li>\\(\\mathbb{R}\\)</li> <li>\\(\\mathclose{R}\\)</li> </ol> <ol> <li>\\(\\mathfrak{R}\\)</li> <li>\\(\\mathinner{R}\\)</li> <li>\\(\\mathit{R}\\)</li> </ol> <ol> <li>\\(\\mathnormal{R}\\)</li> </ol> <p>\u6570\u5b66\u7b26\u53f7 1. \\(A^\\prime\\)</p> \\[ \\theta_j = \\theta_j - \\alpha \\frac{\\partial}{\\partial\\theta_j}J(\\theta_0, \\theta_0) \\]","tags":["tools","math"]},{"location":"tools/mathjax/#_2","title":"\u7a7a\u683c","text":"info code 1cm\u5bbd\u5ea6 \\(a\\qquad b\\) 0.5cm \\(a\\quad b\\) \u2153cm \\(a\\ b\\) 2/7cm \\(a\\;b\\) \u2159cm \\(a\\,b\\) 0cm \u6b63\u5e38\u65e0\u7a7a\u683c \\(ab\\) \u7f29\u8fdb\u2159cm \\(a\\!b\\)","tags":["tools","math"]},{"location":"tools/python_matplotlib/","title":"tools python-matploglib","text":"<p>\u4e3b\u8981\u8bb0\u5f55\u65e5\u5e38python\u4f7f\u7528\u7684matplotlib\u7ed8\u56fe\u65f6\u51fa\u73b0\u7684\u5e38\u89c1\u60c5\u51b5</p>","tags":["programing","python"]},{"location":"tools/python_matplotlib/#matplotlib","title":"matplotlib","text":"","tags":["programing","python"]},{"location":"tools/python_matplotlib/#color-table-for-reference","title":"color table for reference","text":"","tags":["programing","python"]},{"location":"tools/tools-devel-environment/","title":"tools devel-enviroment","text":"<p>\u4f9d\u8d56\u5e93\u4e0b\u8f7d <pre><code>#python\nwget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz\n#google-series\nwget https://github.com/google/googletest/archive/release-1.8.0.tar.gz\nwget https://github.com/gflags/gflags/archive/v2.2.0.tar.gz\nwget https://github.com/google/glog/archive/v0.3.5.tar.gz\n</code></pre></p>","tags":["programing","python"]},{"location":"tools/usage_bazel/","title":"Usage Bazel","text":""},{"location":"tools/usage_bazel/#bazel-build","title":"bazel build","text":"<p><pre><code>bazel build //main:hello-world\nbazel build //offboard/.../pose_graph_mapping:test\n\n#debug\u7f16\u8bd1\nbazel build //offboard/mapping/pose_graph_mapping/lidar_odometry:pm_test  --compilation_mode=dbg \\\n    -s \\ #-s\u663e\u793a\u7f16\u8bd1\u7ec6\u8282\n    --config=asan #\u7f16\u8bd1\u5668\u914d\u7f6e,\u7f16\u8bd1\u76f8\u5bf9\u8f83\u6162,\u76f4\u63a5\u8fd0\u884c\u7a0b\u5e8f\u4f1a\u63d0\u793a\u9519\u8bef\u4fe1\u606f(gdb\u542f\u52a8\u6b64\u65f6\u6ca1\u6709stack\u4fe1\u606f)\n\n#Run special GTest\"TEST(A, func1)\"\n./bazel-bin/../test --gtest_filter=A.func1\n\n\nbazel test ... -- -experimental/...\nbazel query  //onboard/...|grep cpplint$|xargs bazel test \nbazel query  //offboard/...|grep cpplint$|xargs bazel test\n</code></pre> - \u7f16\u8bd1\u5e76\u81ea\u52a8\u8fd0\u884c   <pre><code>bazel build -c dbg  //offboard/mapping/pose_graph_mapping/lidar_odometry:pm_test\nbazel run -c opt offboard/mapping/pose_graph_mapping/match_visualization/match_visualization_main -- \\\n      --run_name=20210513_101822_Q8007  --start_time=3928  \\\n      --run_name2=20210514_160135_Q8007 --start_time2=1509 \\\n      --use_smooth \\\n      --map=wuhan_dongfeng \\\n      --read_params_from_txt_file=true  \\\n      --gnss_strict_good \\\n      --vantage_server_addr=0.0.0.0:65001 #\u5148\u542f\u52a8vantage\n</code></pre></p>"},{"location":"tools/usage_git/","title":"Git\u5e38\u89c1\u547d\u4ee4\u4f7f\u7528","text":""},{"location":"tools/usage_git/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"tools/usage_git/#git_1","title":"git\u65e5\u5e38\u4f7f\u7528","text":"<ul> <li>git workflow</li> <li>rebase \u4ee3\u66ff merge\u7684\u4f7f\u7528   <pre><code>git rebase master #\u66f4\u65b0master\u540e\u5408\u5e76master\u5230\u5f53\u524d\u5206\u652f\n</code></pre></li> <li>normal workflow     <pre><code>git add    #new file or modified file    \u4e4b\u524d\u7684commit\u4e3a e.g commit0\ngit commit #it's best to always keep 1 commit,e.g commit1\ngit pull   #pull\u6709\u4f1a\u548c\u672c\u5730merge\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684commit,e.g commit2\ngit rebase -i &lt;id of commit0|head master&gt; #\u5408\u5e76commit1\u548ccommit2\u4e3a\u4e00\u4e2a\u65b0\u7684commit2-&gt;1-&gt;3(text\u4e3acommit1),\u8d85\u8fc7HEAD\u4e00\u4e2a\u8eab\u4f4d\ngit push [origin dev] #push content\ngit pull [origin dev] #\u66f4\u65b0\u4ee3\u7801\u53bb\u9664\u8d85\u524d\u7684commit,\u5373commit2-&gt;1-&gt;3\n</code></pre></li> <li> <p>advanced workflow   \u5206\u652f\u5f88\u4e45\u672a\u66f4\u65b0\u65f6\u5982\u4f55\u63d0\u4ea4\u672c\u5730\u7684\u5927\u91cf\u6539\u52a8 <pre><code>#branch lyu/tool\u5f88\u4e45\u672a\u4e0emaster\u540c\u6b65,\u8fdc\u8fdc\u843d\u540emaster, \u800c\u4e14\u672c\u5730\u8fd8\u5b58\u5728\u591a\u4e2acommit,e.g commit1(\u65e9)-&gt;commit9(\u665a)\n\n#step.1 \u5207\u5230master \u66f4\u65b0master\ngit checkout master\ngit pull origin master #git pull\u4f1a\u66f4\u65b0origin\u4e0b\u6240\u6709\u5206\u652f,\u4f46\u4e0d\u80fd\u5427\u6bcf\u4e2a\u5206\u652f\u6700\u65b0\u7684\u5185\u5bb9\u62c9\u4e0b\u6765(\u53ea\u80fd\u62c9\u53d6\u672c\u5730\u4e0d\u5b58\u5728\u4f46\u8fdc\u7aef\u5b58\u5728\u7684\u65b0\u7684\u5206\u652f),\u9700\u8981\u901a\u8fc7'git pull origin   &lt;branch-name&gt;'\u5355\u72ec\u66f4\u65b0\u67d0\u5206\u652f\u5185\u5bb9\n\n#step.2 \u5207\u5230\u76ee\u6807\u5206\u652flyu/tool,\u5427master\u4e0a\u8fd1\u671f\u7684\u53d8\u52a8\u540c\u6b65\u8fc7\u6765\ngit checkout lyu/tool\ngit rebase master # \u4e5f\u53ef\u4f7f\u7528git merge master,\u4f46\u8fd9\u6837\u4f1a\u628amaster\u8fd1\u671f\u6240\u6709\u53d8\u52a8\u7684commit\u90fd\u5e26\u8fc7\u6765\ngit status #\u672c\u5730\u6b64\u65f6\u6709\u591acommit,\u9700\u8981\u5408\u5e76\u591a\u4e2acommit\u4e3a\u4e00\u4e2a\n\n#step.3 \u5408\u5e76commit\ngit rebase -i &lt;commit_head_id&gt; #\u5373commit1\u7684\u4e0a\u4e00\u4e2acommit_id, \u5185\u90e8\u5207\u52ff\u4f7f\u7528d\u8bef\u5220\u67d0\u4e2acommit, \u4f7f\u7528squash\u5c06\u591a\u4e2acommit\u538b\u7f29\u4e3a\u4e00\u4e2acommit\ngit push origin lyu/tool #\u5206\u652flyu/tool\u5408\u5165master\u540egitlab\u4f1a\u9ed8\u8ba4\u5427\u8fdc\u7a0b\u7684\u8be5\u5206\u652f\u5220\u6389,\u56e0\u6b64\u672c\u5730\u5207\u52ff\u57fa\u4e8e\u8be5\u5206\u652f\u518d\u6b21\u5f00\u53d1,\u5426\u5219\u4e0b\u6b21\u63d0\u4ea4\u65f6\u4f1a\u2026\u2026\u5f88\u9ebb\u70e6,\u4f1a\u4ea7\u751f\u4e0a\u767e\u4e2acommit\n\n#step.4 \u65b0function\u7684\u5f00\u53d1\ngit pull origin master       #\u4e4b\u524d\u7684lyu/tool\u5408\u5165master\u540e\u66f4\u65b0master \ngit checkout -b &lt;new-branch&gt; #\u521b\u5efa\u65b0\u7684\u5206\u652f\u8fdb\u884c\u65b0\u4efb\u52a1\u7684\u5f00\u53d1\n</code></pre></p> </li> <li> <p>qcraft-maps-china <pre><code>git status\ngit reset --hard\ngit lfs uninstall\ngit reset --hard\ngit lfs install\ngit lfs update\ngit branch\ngit pull origin dev --rebase\n### work from youhuang \u7ecf\u8fc7\u9a8c\u8bc1\ngit lfs uninstall\ngit reset --hard\ngit lfs install #git lfs update #lfs\u652f\u6301\u5355\u72ecupdate\ngit pull origin dev --rebase\n##.git/lfs/objects\u4f1a\u4fdd\u5b58\u67d0\u4e9b\u7ec4\u6bcf\u6b21commit\u7684\u5927\u6587\u4ef6,\u53ef\u76f4\u63a5\u5220\u9664,\u4ed3\u5e93\u77ac\u95f4\u5c0f\u5f88\u591a\ngit lfs prune #\u4ece lfs \u4e2d\u5220\u9664\u6587\u4ef6\u5e76\u63a8\u9001\u5230\u539f\u70b9, \u5904\u7406.git/lfs/object\u8fc7\u5927\u7684\u95ee\u9898, \ngit remote prune origin\n#\u4e34\u65f6\u65b9\u6848,\u6709\u5f85\u9a8c\u8bc1,\u4e0d\u884c\u5c31\u5220\u6389\nrm -rf chongqing\ngit status\ngit reset --hard\ngit pull origin dev --rebase\n### work from chenyu(prt\u6a21\u578b\u6d4b\u8bd5)  \u7ecf\u8fc7\u9a8c\u8bc1\n#lfs pull\u4e0d\u4f1a\u66f4\u65b0\u5168\u90e8\u6587\u4ef6\uff0c\u53ea\u4f1a\u66f4\u65b0\u5f53\u524dbranch\u76f8\u5173\u7684\u6587\u4ef6(zoulu)\nsudo apt-get install git-lfs\ngit lfs install\ngit lfs pull\n</code></pre></p> </li> <li>\u5b89\u88c5git\u540e\u521d\u6b65\u914d\u7f6e <pre><code>##\u5168\u5c40\u914d\u7f6e\ngit config --global user.name    #\u67e5\u770b\u5f53\u524d\u7528\u6237\ngit config --global user.email   #\u67e5\u770b\u5f53\u524d\u7ed1\u5b9a\u90ae\u7bb1\ngit config --global user.name \"Soaringls\" #config\n\n##repo\u76ee\u5f55\u4e0b\u5c40\u90e8\u73af\u5883\u914d\u7f6e\ngit config --local user.name \"Your Full Name\" \ngit config --local user.email \"you@qcraft.ai\" \ngit config --local include.path \"../.gitconfig\"\n#\u6dfb\u52a0\u5f53\u524d\u673a\u5668\u7684ssh key\u5230github(setting-&gt;SSH and GPS keys)\nssh-keygen -t rsa -b 4096 -C \"&lt;email_address&gt;\" #\ncat ~/.ssh/id_rsa.pub #\u8d4b\u503ckey\u503c\u5230github\nssh -T git@github.com #\u9a8c\u8bc1\n</code></pre></li> <li>\u8fdc\u7a0b\u62c9\u4ed3\u5e93\u81ea\u6709-\u7528\u6237\u540dwo <pre><code>git clone &lt;url&gt; #\u62c9\u53d6\u4ee3\u7801,\u7b2c\u4e00\u6b21\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\n#\u62c9\u53d6\u67d0\u5206\u652f\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u62c9\u5b8c\u540e\u53ef\u79bb\u7ebf\u5207\u6362\u5230\u4efb\u4e00\u5206\u652f\ngit clone [-b &lt;branc_name&gt;] &lt;url&gt; [&lt;directory&gt;]   #\u9ed8\u8ba4\u62c9master\u5230\u5f53\u524d\u76ee\u5f55\ngit clone -b lidar-odom &lt;url&gt; ./ranger_lidar_odom #\u5c06ranger\u5f53\u524d\u76ee\u5f55\uff0c\u4ed3\u5e93\u540d\u4e3aranger_lidar_odom\n###about submodules\n#\u6dfb\u52a0submodule\ngit submodule add &lt;sub-repo url&gt;\ngit clone &lt;url&gt; --recurse-submodule #\u62c9\u53d6url\u5730\u5740\u4ed3\u5e93\u53ca\u5b50\u5730url\u5740\u4ed3\u5e93\n#e.g git clone https://github.com/CPFL/Autoware.git --recurse-submodule #main and submodules repo together\ngit submodule update --init --recursive  #update submodules, such as dev-env|vehicles\ngit submodule foreach git pull origin master #\u66f4\u65b0\u6bcf\u4e2asubmodules\u7684master\ngit submodule update #\u66f4\u65b0\u65b0\u589e\u7684submodule\u4ee3\u7801\n#\u5220\u9664submodule\ngit submodule deinit &lt;sub-repo-name&gt;\ngit rm &lt;sub-repo-name&gt;\n#\u4fee\u6539\u5b50\u6a21\u5757url\n#\u4fee\u6539`.gitmodules`\u5185url\u5373\u53ef,\u7136\u540e`git submodule sync`\n#\u4fdd\u5b58\u7b2c\u4e00\u6b21\u7684username\u3001password\ngit config credential.helper store\ngit config --global credential.helper store\n</code></pre></li> <li>\u5982\u679c\u4ed3\u5e93fork\u81ea\u4ed6\u4ebabai,\u5219\u9700\u5173\u8054bai\u7684\u4ed3\u5e93\u5730\u5740 <pre><code>git remote add bai &lt;bai_url&gt; #\u5176\u4e2d\"bai\"\u4e3anickname,\u81ea\u5b9a\u4e49\ngit fetch --all #\u67e5\u770borigin\u548cremote\u7684fork\u4fe1\u606f(\u5c06\u663e\u793aorigin\u548cbai)\ngit fetch #\u66f4\u65b0\u6240\u6709branch\ngit fetch --tags #\u66f4\u65b0\u6240\u6709\u7684tag\ngit remote -v   #\u67e5\u770borigin\u548cbai\u7684fetch\u3001push\u5730\u5740\n</code></pre></li> <li>\u6dfb\u52a0\u672c\u5730\u6539\u52a8\u6216\u65b0\u589e\u6587\u4ef6 <pre><code>git status #\u67e5\u770b\u5f53\u524d\u5de5\u7a0b\u4f4d\u7f6e(master\u8fd8\u662f\u67d0\u5206\u652f)\u53ca\u6587\u4ef6\u72b6\u6001\ngit diff &lt;file&gt; #\u67e5\u770b\u6587\u4ef6\u7684\u5177\u4f53\u6539\u52a8\ngit add -u                #add\u4ed3\u5e93\u539f\u6709\u6587\u4ef6\u7684\u6539\u52a8\ngit add &lt;file|directory&gt; #add\u65b0\u6587\u4ef6\ngit checkout --HEAD index.js #\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u5355\u72ec\u62c9\u53d6index.js\u6587\u4ef6\n</code></pre></li> <li>\u63d0\u4ea4\u672c\u5730\u4fee\u6539\u548c\u65b0\u589e\u6587\u4ef6 <pre><code>#nano:-&gt;ctr+x-&gt;y-&gt;enter)\ngit commit -m\"&lt;comment&gt;\"#\u65b0\u589e\u63d0\u4ea4\uff0c\u540c\u65f6\u52a0comment\ngit commit               #\u65b0\u589e\u63d0\u4ea4\uff0c\u7f16\u8f91\u5668\u4e2d\u52a0comment\ngit commit --amend       #\u4fee\u6539\u4e0a\u6b21\u7684\u63d0\u4ea4\n</code></pre></li> <li>\u62c9\u53d6\u5408\u5e76\u6700\u65b0\u4ee3\u7801 <pre><code>git pull bai master #\u62c9\u53d6bai\u7684\u6700\u65b0\u4ee3\u7801\ngit pull origin master #\u62c9\u53d6\u81ea\u5df1master\u7684\u6700\u65b0\u4ee3\u7801\n</code></pre></li> <li>git stash\u4f7f\u7528 <pre><code>git stash save \"save msg\"\ngit stash list #\u67e5\u770b\u6709\u54ea\u4e9b\u4e34\u65f6\u7684\u5b58\u50a8\uff0cstash@${0}\u662f\u6700\u8fd1\u4e00\u6b21\u7684stash\u4fdd\u5b58\ngit stash show #\u73b0\u5b9e\u6539\u52a8\uff0cgit stash stash@${3} \u663e\u793astash@${3}\u7684\u53d8\u5316\ngit stash apply stash@${$num} #\u4f7f\u7528\u67d0\u4e2a\u5b58\u50a8 \u540c\u65f6\u4fdd\u7559\u5f53\u524d\u5b58\u50a8\ngit stash pop                #\u9ed8\u8ba4\u4f7f\u7528\u5e76\u5220\u9664\u6700\u8fd1\u4e00\u6b21\u7684\u5b58\u50a8stash@${0}\ngit stash pop  stash@${$num} #\u4f7f\u7528\u5e76\u5220\u9664\u5b58\u50a8stash@${$num}\ngit stash drop stash@${$num} #\u4e22\u5f03stash@${$num}\uff0c\u5373\u4ece\u5217\u8868\u91cc\u5220\u9664\ngit stash clear #\u6e05\u9664\u6240\u6709\u5b58\u50a8\n</code></pre></li> </ul>"},{"location":"tools/usage_git/#_2","title":"\u5e38\u7528\u6307\u4ee4","text":"<pre><code>git rm --help         #\u67e5\u770brm\u5e2e\u52a9\ngit rm --cached index.js #\u53d6\u6d88\u8ffd\u8e2a\uff0c\u4fdd\u7559\u672c\u5730\u6587\u4ef6\ngit rm --f index.js     #\u53d6\u6d88\u8ffd\u8e2a\u5e76\u5220\u9664\u672c\u5730\u6587\u4ef6\n\ngit rm --cached -r my_directory #\u53d6\u6d88\u8ffd\u8e2a\u76ee\u5f55\u53ca\u5176\u5b50\u6587\u4ef6\ngit rm -r -f folderA    #\u5220\u9664folderA\u6587\u4ef6\u5939\u53ca\u91cc\u9762\u6240\u6709\u6587\u4ef6\n\ngit reset &lt;commit_id&gt; --hard #\u56de\u9000\u90fd\u67d0\u4e00\u7248\u7684\u63d0\u4ea4(\u5f53\u524d\u6539\u52a8\u5c06\u4e22\u5931)\n</code></pre>"},{"location":"tools/usage_git/#_3","title":"\u5206\u652f\u7684\u4f7f\u7528","text":"<p>\u65b0\u5efa\u672c\u5730\u5206\u652f/\u4e0a\u4f20\u5206\u652f/\u5220\u9664\u8fdc\u7a0b\u5206\u652f\u5206\u652f\u548c\u4e3b\u5e72\u7684\u4e92\u76f8\u5408\u5e76 <pre><code>git branch  #\u67e5\u770b\u5f53\u524d\u5904\u4e8e\u90a3\u4e2a\u5206\u652f,\u82e5\u4ece\u672a\u5efa\u8fc7\u5206\u652f,\u5219\u9ed8\u8ba4\u4e3aremote/origin/master\u5206\u652f\n\n#\u5efa\u7acb\u672c\u5730\u5206\u652f`branch_test`,\u540c\u65f6\u5207\u6362\u5230\u65b0\u5efa\u7684remote/origin/branch_tes\u5206\u652ft\ngit checkout -b branch_test #\u65b0\u5efa\u5e76\u5207\u6362\u5230\u65b0\u5efa\u5206\u652f\ngit checkout master      #\u5207\u6362\u5230master\u5206\u652f(\u5373remote/origin/master)\ngit checkout branch_test #\u5207\u6362\u5230branch_test\u5206\u652f(\u5373remote/origin/branch_test)\n\ngit branch    #\u53ef\u770b\u5230\u5f53\u524d\u5904\u4e8e\u65b0\u5efa\u7684branch_test\u5206\u652f\ngit branch -a #\u67e5\u770b\u6240\u6709\u5206\u652f, \u53ef\u770b\u5230 `remotes/origin/&lt;brance_name&gt;`,\u5982branch_test\ngit branch -d branch_test #\u5220\u9664\u672c\u5730\u5206\u652fbranch_test\n\n#\u5408\u5e76\u6700\u65b0master\u5185\u5bb9\u5230\u5206\u652fbranch_test\ngit checkout master #\u5207\u6362\u5230master\ngit pull bai master #\u62c9\u53d6\u6700\u65b0\u4ee3\u7801\ngit checkout branch_test #\u5207\u6362\u5230\u5206\u652f\ngit merge master    #\u5c06origin/master\u5185\u5bb9\u66f4\u65b0\u5230origin/branch_test\n\n#\u5408\u5e76\u5206\u652fbranch_test\u5185\u5bb9\u5230master\ngit checkout master    #\u5207\u6362\u5230master\ngit pull origin master #\u66f4\u65b0\u4ee3\u7801\ngit merge branch_test  #\u5c06origin/branch_test\u5185\u5bb9\u66f4\u65b0\u5230origin/master\n\ngit push origin master      #\u4e0a\u4f20\u4ee3\u7801\u5230master(\u53ef\u7533\u8bf7pull request\u5408\u5e76\u5230bai\u7684master\u4e0b\u9762)\ngit push origin branch_test                    #\u4e0a\u4f20\u4ee3\u7801,\u8fdc\u7a0b\u5206\u652f\u4e3a`branch_test`\ngit push origin branch_test:branch_test_remote #\u4e0a\u4f20\u4ee3\u7801,\u8fdc\u7a0b\u5206\u652f\u4e3a`branch_test_remote`\n\n#\u5220\u9664\u8fdc\u7a0b\u5206\u652f\ngit push origin :branch_test_remote            #\u4e0a\u4f20\u7a7a\u5206\u652f,\u5373\u53ef\u5220\u9664\u540d\u4e3a`branch_test_remote`\u7684\u8fdc\u7a0b\u5206\u652f\ngit push origin --delete branch_test_remote    #\u5220\u9664\u540d\u4e3a`branch_test_remote`\u7684\u8fdc\u7a0b\u5206\u652f\n##\u8fdc\u7a0btag\ngit push origin tag -d tagName\n##\u8fdc\u7aefbranch\u548ctag\u91cd\u540d\u65f6\ngit push origin :refs/heads/branchName    //\u5220\u9664\u8fdc\u7aefbranch\ngit push origin :refs/tags/tagName        //\u5220\u9664\u8fdc\u7aeftag\ngit push --set-upstream origin lyu/notebook \n</code></pre></p>"},{"location":"tools/usage_git/#tag","title":"tag","text":"<pre><code>##list tag names\ngit tag -l  \n## delete specific tag\ngit tag -d &lt;tag-name&gt; \n</code></pre>"},{"location":"tools/usage_git/#urlrepourlf","title":"url\u53d8\u5316\u540erepo\u7684url\u66f4\u6539f","text":"<pre><code>#\u67e5\u770b\u672c\u5730repo\u7684url\ngit remote -v\n#\u8bbe\u7f6e\u65b0\u7684url, \u7136\u540egit remote -v\u67e5\u770b\u662f\u5426\u8bbe\u7f6e\u6210\u529f\ngit remote set-url origin git@gitlab-cn.qcraftai.com:qcraft-all/vehicles.git\n</code></pre>"},{"location":"tools/usage_git/#commit-amend","title":"\u64a4\u9500\u8bef\u64cd\u4f5c\u7684commit --amend","text":"<pre><code>git reflog #\u67e5\u770bgit Head\u8bb0\u5f55\nbf81b971a1 (HEAD -&gt; refactor/unique_ptr) HEAD@{0}: commit (amend): [posrt] ...\n517bbf7d1a (origin/master, origin/HEAD, master) HEAD@{1}: checkout: moving from master to refactor/unique_ptr ##\u672c\u6765\u5e94\u8be5\u7ed9\u4e88\u8fd9\u4e2abranch\u63d0\u4ea4\u65b0\u7684commit,\u7ed3\u679camend\n517bbf7d1a (origin/master, origin/HEAD, master) HEAD@{2}: pull origin master: Fast-forward\n3fac916797 HEAD@{3}: checkout: moving from refactor/1209float-double to master\n\n#\u4fee\u590dgit commit --amend\u8bef\u64cd\u4f5c\ngit reflog #\u67e5\u770bgit Head\u8bb0\u5f55\ngit reset --soft HEAD@{1} #\u56de\u5230\u521a\u521a\u521b\u5efa\u5206\u652f\u7684\u65f6\u5019\uff0c--soft\u4fdd\u7559\u6539\u52a8\ngit commit #\u521b\u5efa\u65b0\u7684commit\n</code></pre>"},{"location":"tools/usage_markdown/","title":"Usage markdown","text":""},{"location":"tools/usage_markdown/#markdown","title":"\u8df3\u8f6c\u81f3\u5176\u4ed6markdown\u6587\u4ef6","text":"<p><code>- [What is libpointmatcher about?](Introduction.md)</code></p>"},{"location":"tools/usage_shortcut/","title":"Usage shortcut","text":""},{"location":"tools/usage_shortcut/#linux-system","title":"linux system","text":""},{"location":"tools/usage_shortcut/#vimtodoneed-to-test","title":"vim(TODO,Need to test)","text":"<p>Nowdays we spend a lot of time in bash shell, typing long and complex commands. You can use the arrow keys <code>up/down/left/right</code> to move the cursor and select commands, but that's not so efficient.</p> info cmd Move in Charactor:<code>back</code> <code>C+b</code>: Move back one charactor(<code>C</code> is for <code>Ctrl</code>) Move in Charactor:<code>forward</code> <code>C+f</code>: Move forward Move in Word:<code>forward</code> <code>Alt+f</code> Move in Word:<code>backward</code> <code>Alt+b</code> Move in Line:"},{"location":"tools/usage_shortcut/#terminator-shortcuts-usage","title":"Terminator Shortcuts Usage","text":"shortcuts info ctrl+shift+o split windows horizontal ctrl+shift+e split windows vertical ctrl+shift+x switch between current window and all windows ctrl+shift+arrows move splitter bars of current working window alt+arrows switch between different working windows ctrl+shift+w close current window ctrl+shift+q close all window,that means close current terminator win+g \u5404\u4e2a\u5206\u7a97\u53e3\u540c\u6b65\u547d\u4ee4\u529f\u80fd win+shift+g \u53d6\u6d88\u5404\u4e2a\u5206\u7a97\u53e3\u540c\u6b65\u547d\u4ee4\u529f\u80fd"},{"location":"tools/usage_shortcut/#vscode","title":"VsCode","text":""},{"location":"tools/usage_shortcut/#_1","title":"\u63d2\u4ef6\u4f7f\u7528\u53ca\u914d\u7f6e","text":"\u65e5\u5e38\u63d2\u4ef6 \u529f\u80fd \u914d\u7f6e\u53ca\u4f7f\u7528 Settings Sync \u5907\u4efdvscode\u914d\u7f6e\u53ca\u63d2\u4ef6 Sync Gist\u914d\u7f6e1. GitHub GIST ID:vscode\u5185\u63d2\u4ef6setting (github gist repo\u7684url\u6570\u5b57\u90e8\u5206)2. GitHub Token:<code>/home/lyu/.config/Code/User/syncLocalSettings.json</code>\u91cc\u9762tokenUpload: shift+alt+u Download:shift+alt+d ### Shortcuts Usage &gt;\u8bbe\u7f6e\u4f4d\u7f6e: File-&gt;Preferences-&gt;Keyboard Shortcuts <p>\u5e38\u7528\u8bbe\u7f6e</p> info shortcuts \u6d3b\u52a8\u7a97\u53e3\u5207\u6362:view focus above editor group alt+i \u6d3b\u52a8\u7a97\u53e3\u5207\u6362:view focus below editor group alt+k \u6d3b\u52a8\u7a97\u53e3\u5207\u6362:view focus left editor group alt+j \u6d3b\u52a8\u7a97\u53e3\u5207\u6362:view focus right editor group alt+l \u7a97\u53e3\u5185\u6587\u4ef6\u5207\u6362:\u5de6\u4fa7\u6587\u4ef6 ctrl+pageUp \u7a97\u53e3\u5185\u6587\u4ef6\u5207\u6362:\u53f3\u4fa7\u6587\u4ef6 ctrl+pageDown \u5173\u95ed: \u5f53\u524d\u6587\u4ef6 ctrl+w \u5173\u95ed: vscode ctrl+shift+w go back alt+a go Forward alt+q page up alt+w page down alt+s cursor left ctrl+shift+j-useless cursor right ctrl+shift+l-useless cursor up ctrl+shift+i-useless cursor down ctrl+shift+k-useless cursorColumnSelectLeft alt+shift+j-useless cursorColumnSelectRight alt+shift+l-useless cursorColumnSelectUp alt+shift+i-useless cursorColumnSelectDown alt+shift+k-useless"},{"location":"tools/workspace_setup_ubuntu/","title":"Setup worksapce in ubuntu","text":"<p>environment: ubuntu18.04</p>"},{"location":"tools/workspace_setup_ubuntu/#vpn","title":"VPN","text":""},{"location":"tools/workspace_setup_ubuntu/#v2rayref-doc-of-yongcong","title":"v2ray(ref doc of yongcong)","text":""},{"location":"tools/workspace_setup_ubuntu/#_1","title":"Setup worksapce in ubuntu","text":"<p><pre><code>sudo apt install python3-pip\nsudo pip3 install shadowsocks\n#replace \"EVP_CIPHER_CTX_cleanup\" with \"EVP_CIPHER_CTX_reset\" of openssl.py by \":%s/old/new/g\"\nsudo vi /usr/local/lib/python3.8/dist-packages/shadowsocks/crypto/openssl.py\nsslocal -c shadowsocks_vpn_jikess.json \n</code></pre> the content of shadowsocks_vpn_jikess.json is: <pre><code>{\n  \"server\":\"tw-1.v2speed.net\",\n  \"server_port\":13871,\n  \"local_port\":1080,\n  \"password\":\"4UlcsiptpO\",\n  \"timeout\":600,\n  \"method\":\"aes-256-cfb\"\n}\n</code></pre></p>"},{"location":"tools/workspace_setup_ubuntu/#vim","title":"vim","text":"<ul> <li>vim\u9ed8\u8ba4\u663e\u793a\u884c\u6570\u8bbe\u7f6e   <code>/etc/vim/vimrc</code>\u7684\u6700\u540e\u4e00\u884c\u52a0\u4e0a<code>:set number</code></li> </ul>"},{"location":"tools/workspace_setup_ubuntu/#vscode","title":"vscode","text":"<p>sync<code>setting.json</code> <code>extensions.json</code> <code>keybindingsMac.json</code> - \u5b89\u88c5\u63d2\u4ef6\u53caGoogle\u4ee3\u7801\u98ce\u683c\u4fdd\u5b58\u81ea\u52a8\u683c\u5f0f\u5316 <pre><code>#*************************\n#@desc:c++ devel-env and autoformat by GoogleStyle\n#*************************\n#step1.install extensions:`C/C++\u3001Clang-Format\u3001`\n#step2.install executable clang-format\nsudo  apt-get install clang-format\n#step3.config \"clang-format\"\nSettings\u641c\u7d22\"clang-format\",\u914d\u7f6e\"Clang-format:Fallback Style\"\u4e3a\"Google\u5373\u53ef\"\n\"clang-format.fallbackStyle\": \"Google\" #setting\n\n#step3.config autoformat when save the file\n#required: To automatically format a file on save, add the following to your vscode settings.json file\n\"editor.formatOnSave\": true\n#optional: \n\"clang-format.executable\": \"/absolute/path/to/clang-format\"\n</code></pre> - \u6dfb\u52a0\u5934\u6587\u4ef6\u8def\u5f84</p> <p>\u6309F1\u6216 Ctrl+Shift+p \u5728\u5f39\u51fa\u7684\u5907\u9009\u9009\u9879\u4e2d\u9009\u62e9 C/C++:Edit Configuration(JSON)\uff0c\u81ea\u52a8\u6253\u5f00c_cpp_properties.json</p> <ul> <li>FAQ</li> <li>[\u4ee3\u7801\u81ea\u52a8\u8df3\u8f6c\u5931\u8d25]\"Visual Studio Code is unable to watch for file changes in this large workspace\"     solution <code>/etc/sysctl.conf</code>\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u52a0\u5165<code>fs.inotify.max_user_watches=524288</code>vscode\u7684\u6587\u4ef6\u76d1\u542c\u6570\u76ee,\u7136\u540e<code>sudo sysctl -p</code>\u91cd\u542f\u5373\u53ef</li> <li>\u81ea\u52a8\u8df3\u8f6c\u65e0\u6548 <code>C/C++\u63d2\u4ef6\u8bbe\u7f6e \"C_Cpp.intelliSenseEngine\": \"Default\"</code>,\u4e4b\u524d<code>setting.json</code>\u8bef\u64cd\u4f5c\u4e3aDisabled, fuck!!!</li> </ul>"},{"location":"tools/workspace_setup_ubuntu/#git","title":"git","text":"<pre><code>sudo apt install git\n# config\ngit config --global user.name \"YongcongWang\"\ngit config --global user.email \"yongcong.wang@outlook.com\"\ngit config --global core.editor vim\n# generate key\nssh-keygen -t rsa -C \"yongcong.wang@outlook.com\"\n</code></pre>"},{"location":"tools/workspace_setup_ubuntu/#config","title":"Config","text":"<ol> <li> <p>Open github and sign in;</p> </li> <li> <p>In <code>Settings/SSH and GPG keys</code> click <code>New SSH Key</code>;</p> </li> <li> <p>Paste <code>id_rsa.PUB</code>(in <code>/home/.ssh/id_rsa.pub</code>);</p> </li> <li> <p>Test: <code>ssh -T git@github.com</code>.</p> </li> </ol>"}]}